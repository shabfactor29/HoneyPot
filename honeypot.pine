// Â© tiburton26////R2783///r2811////R2849////3206////3270////3314
// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
//@version=5
indicator('Honey Pot v3314', shorttitle='Honey Pot v3314', max_labels_count = 200, overlay=true)
//
// strategy("Strategy Honey Pot vH900", max_bars_back = 500, max_labels_count=50, max_boxes_count=50, max_lines_count=50, overlay=true, use_bar_magnifier=false, process_orders_on_close=false, calc_on_order_fills=false, calc_on_every_tick=false, default_qty_type=strategy.percent_of_equity, default_qty_value=10, initial_capital=400, currency=currency.USD, commission_value=0.03, commission_type=strategy.commission.percent)

// backtestingCompatible = input.bool(false, 'Backtesting compatible', tooltip='Enable this to plot 1 for buys so you can use this indicator with the backtest script.')
////added in vwmaslope to the fray...
//------------------------------------------------------------------------------//
//-----------------------//START OF CODE SECTION//-----------------------------//
//------------------------------------------------------------------------------//
////////////
////Option for user interface for open and close orders
////Define variables
////Input Groups
var open_order_triggers_group = "Open Order Settings"
open_long = input.float(0.37, "Diff 2 Open Long", 0,5,.01, "Stable coin lower, volatile higher, Backtest range 0.2% to 1.5%", group= open_order_triggers_group)
open_short = input.float(-.37, "Diff 2 Open Short", -5,0,.01,"Stable coin lower, volatile higher, Backtest Range -0.2% to -1.5%", group=open_order_triggers_group)
tbs_open_long = input.float(0.25, "Diff TBS Open Long", 0,5,.01, "3 Bar Sum of Diff", group= open_order_triggers_group)
tbs_open_short = input.float(-.25, "Diff TBS Open Short", -5,0,.01,"3 Bar Sum of Diff", group=open_order_triggers_group)

vol_xlow_TH = input.float(0.21, "Volatility XLow", 0,1,.01, "'+%', ATR,6 < XLow Threshold", group= open_order_triggers_group)
vol_low_TH = input.float(0.5, "Volatility Low", 0,1,.01, "'+%', ATR,6 < Low Threshold", group= open_order_triggers_group)
vol_med_TH = input.float(.75, "Volatility Med", 0,1,.01,"'+%', ATR,6 >= Low Threshold and < High Threshold", group=open_order_triggers_group)
vol_high_TH = input.float(1, "Volatility High", 0,2,.01,"'+%', ATR6 >= High Threshold", group=open_order_triggers_group)
// vol_xhigh_TH = input.float(1, "Volatility High", 0,2,.01,"'+%', ATR6 >= High Threshold", group=open_order_triggers_group)

// da_openLong = input.float(-2, "EMA DA Long",  minval = -5, maxval = -.1, step=0.1, tooltip="36m TF=-1.8", inline="2", group=open_order_triggers_group)
//turned off for publish... and manually set
// da_openShort = input.float(2, "EMA DA Short",  minval = .1, maxval = 5, step=0.1, tooltip="36m TF=-1.8", inline="2", group=open_order_triggers_group)
//turned off for publish... and manually set
//Stop Loss Triggers
var stop_loss_triggers_group = "Dynamic Trailing Stop Loss Settings" 
// stop_loss_percent = input.float(.5, title="Stop Loss Percentage", inline="1", group=stop_loss_triggers_group)
Trl_Stop_Long = input.float(0.9958, "Dynamic Trailing SL Long", inline='1', group=stop_loss_triggers_group,tooltip="'+' %, Dynamic Trailing Stop Loss", step=0.0001)
Trl_Stop_Short = input.float(1.0042, "Dynamic Trailing SL Short", inline='2', group=stop_loss_triggers_group,tooltip="'-' %, Dynamic Trailing Stop Loss", step=0.0001)

////Pump/Dump Triggers
////need a pump threshold and a wick close threshold

var pump_dump_triggers_group = "Pumpty Dumpty Settings"

pump_TH = input.float(1.75, "Pump Amplitude", inline="1", group=pump_dump_triggers_group, tooltip="Amplitude of Candle to Trigger Pump in x_low range", step=0.1)
dump_TH = input.float(-1.75, "Dump Amplitude", inline="1", group=pump_dump_triggers_group, tooltip="Amplitude of Candle to Trigger Dump in x_low range", step=0.1)
xlow_min_pump_TH = input.float(.3, "Min Pump Amplitude", inline="1", group=pump_dump_triggers_group, tooltip="Min Amplitude of Candle to Trigger Pump in x_low and low ranges", step=0.1)
xlow_min_dump_TH = input.float(.3, "Min Dump Amplitude", inline="1", group=pump_dump_triggers_group, tooltip="Min Amplitude of Candle to Trigger Dump in x_low and low ranges", step=0.1)

shooting_starTH = input.float(.5, "Shooting Star On Trigger", inline="1", group=pump_dump_triggers_group, tooltip="Amplitude of Candle to Trigger Pump (+% from previous close)", step=0.1)
falling_knifeTH = input.float(-.5, "Falling Knife On Trigger", inline="1", group=pump_dump_triggers_group, tooltip="Amplitude of Candle to Trigger Pump (-% from previous close)", step=0.1)

shooting_star_close = input.float(.2, "Shooting Star Caught", inline="1", group=pump_dump_triggers_group, tooltip="Amplitude of Wick to Trigger Pump Close (+% from previous close)", step=0.1)
falling_knife_close = input.float(.2, "Falling Knife Caught", inline="1", group=pump_dump_triggers_group, tooltip="Amplitude of Wick to Trigger Pump Close (+% from previous close)", step=0.1)

//Option close orders
var close_order_triggers_group = "Flat Market Open Blocker Settings"
diffFlat_long_trigger = input.float(.33, "Flat Block Long", inline="1", group=close_order_triggers_group, tooltip="'+' %, Suggested Range = 0.2% to 0.5%", step=0.01)
diffFlat_short_trigger = input.float(-.33, "Flat Block Short", inline="1", group=close_order_triggers_group, tooltip="'-' %, Suggested Range -0.2% to -0.5%", step=0.01)
// diff_to_close_long = input.float(-.2, "Diff2Close Long", inline="2", group=close_order_triggers_group, tooltip="Negative Percentage", step=0.01)
// diff_to_close_short = input.float(.2, "Diff2Close Short", inline="2", group=close_order_triggers_group, tooltip="Positive Percentage", step=0.01)
// close_order_upper_wick = input.float(.5, "Close Long Upper Wick", inline="3", group=close_order_triggers_group, step=0.01)
// close_order_lower_wick = input.float(.5, "Close Short Lower Wick", inline="4", group=close_order_triggers_group, step=0.01)
////Define Honey Pot Variables
// //Long Open Setup
precision = input.int(2, "Precision", tooltip = "Number of decimals to display", minval = 0, maxval = 5)

var long = false
var long1 = false
var long2 = false
var long3 = false
var long4 = false
var long5 = false
var long6 = false

var short = false
var short1 = false
var short2 = false
var short3 = false
var short4 = false
var short5 = false
var short6 = false

// var golong = long or long1 or long2 or long3 or long4 or long5
// var goshort = short or short1 or short2 or short3 or short4 or short5

var clong = false
var clong1 = false
var clong2 = false
var clong3 = false
var clong4 = false
var clong5 = false
var clong6 = false

var closelong = clong or clong1 or clong2 or clong3 or clong4 or clong5

var cshort = false
var cshort1 = false
var cshort2 = false
var cshort3 = false
var cshort4 = false
var cshort5 = false
var cshort6 = false

var closeshort = cshort or cshort1 or cshort2 or cshort3 or cshort4 or cshort5

////diffFlat  
var diffFlat = false
var diffFlat_long = false
var diffFlat_long1 = false
var diffFlat_long2 = false

var diffFlat_short = false
var diffFlat_short1 = false
var diffFlat_short2 = false

var diffL = 0.0 
var diffU = 0.0
var diffShort = false
var diffLong = false

var ttl = false
var tts = false
////open orders with previous wick
var l_wick_long = false
var u_wick_short = false
////Variables for diff_to_close_long_trigger and diff_to_close_short_trigger for debug
//// the code for the diff2close will be commented out under a *** heading. I'm removing 
//// atm to properly tune the state machine.
var diff2close_long = false
var diff2close_short = false

////EXPERIMENTAL LSMA SLOPE RISE >< 2/-2
blumoonrise = false
blumoonfall = false

// ///////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////
////NEW PHOENIX CODE
// Title {
// title  = "Phoenix Ascendingx3"
// stitle  = "PA3"
// version = "_2.312a"
// indicator(title = title + version,
//  shorttitle = stitle,
//  overlay = false,
//  scale=scale.right)
 
//Sources

//Inputs
RS = input.source(hlc3, "Red Source", "Red Source", group="Red Line")
R1 = input.int(9,  "Red_phx_master", 1, 100, 1, "Red line PHX master", group="Red Line")
R2 = input.int(6,  "Red_phx_time_1", 1, 100, 1, "Red line PHX time 1", group="Red Line")
R3 = input.int(3,  "Red_phx_time_2", 1, 100, 1, "Red line PHX time 2", group="Red Line")
R4 = input.int(32, "Red_phx_lsma_1", 1, 100, 1, "Red line PHX lsma 1", group="Red Line")
R5 = input.int(0,  "Red_phx_lsma_2", 0, 100, 1, "Red line PHX lsma 2", group="Red Line")

GS = input.source(hlc3, "Green Source", "Green Source", group="Green Line")
G1 = input.int(9,  "Green_phx_master", 1, 100, 1, "Green line PHX master", group="Green Line")
G2 = input.int(6,  "Green_phx_time_1", 1, 100, 1, "Green line PHX time 1", group="Green Line")
G3 = input.int(3,  "Green_phx_time_2", 1, 100, 1, "Green line PHX time 2", group="Green Line")
G4 = input.int(32, "Green_phx_lsma_1", 1, 100, 1, "Green line PHX lsma 1", group="Green Line")
G5 = input.int(0,  "Green_phx_lsma_2", 0, 100, 1, "Green line PHX lsma 2", group="Green Line")

BS = input.source(hlc3, "Blue Source", "Blue Source", group="Blue Line")
B1 = input.int(9,  "Blue_phx_master", 1, 100, 1, "Blue line PHX master", group="Blue Line")
B2 = input.int(6,  "Blue_phx_time_1", 1, 100, 1, "Blue line PHX time 1", group="Blue Line")
B3 = input.int(3,  "Blue_phx_time_2", 1, 100, 1, "Blue line PHX time 2", group="Blue Line")
B4 = input.int(14, "Blue_phx_lsma_1", 1, 100, 1, "Blue line PHX lsma 1", group="Blue Line")
B5 = input.int(0,  "Blue_phx_lsma_2", 0, 100, 1, "Blue line PHX lsma 2", group="Blue Line")

ES = input.source(hlc3, "Energy Source", "Energy Source", group="Energy Line")
E1 = input.int(9,  "Energy_phx_master", 1, 100, 1, "Energy line PHX master", group="Energy Line")
E2 = input.int(6,  "Energy_phx_time_1", 1, 100, 1, "Energy line PHX time 1", group="Energy Line")
E3 = input.int(3,  "Energy_phx_time_2", 1, 100, 1, "Energy line PHX time 2", group="Energy Line")
E4 = input.int(32, "Energy_phx_lsma_1", 1, 100, 1, "Energy line PHX lsma 1", group="Energy Line")
E5 = input.int(0,  "Energy_phx_lsma_2", 0, 100, 1, "Energy line PHX lsma 2", group="Energy Line")
 
tci(src, arg1, arg2) =>
    ta.ema((src - ta.ema(src, arg1)) / (0.025 * ta.ema(math.abs(src - ta.ema(src, arg1)), arg1)), arg2) + 50

mf(src, arg1) =>
    100.0 - 100.0 / (1.0 + math.sum(volume * (ta.change(src) <= 0 ? 0 : src), arg1) / math.sum(volume * (ta.change(src) >= 0 ? 0 : src), arg1))

create_idx(idx, src, arg1, arg2, arg3, arg4, arg5) => 
	_tci = tci(src, arg1, arg2)
	_mf = mf(src, arg3)
	_tradition = math.avg(_tci, _mf, ta.rsi(src, arg3))
		
	_idx = switch idx
		"wt1" => _tradition 
		"wt2" => ta.sma(_tradition, arg2) 
		"wt3" => ta.linreg(_tradition, arg4, arg5)
		"wt4" => ta.ema((_tradition -ta.sma(_tradition, arg2))*2+50, arg3)

	
// plot(series, title, color, linewidth, style, trackprice, histbase, offset, join, editable, show_last, display)
green 	= create_idx("wt1", GS, G1, G2, G3, G4, G5)
red 	= create_idx("wt2", RS, R1, R2, R3, R4, R5)
lsma 	= create_idx("wt3", BS, B1, B2, B3, B4, B5)
energy = create_idx("wt4", ES, E1, E2, E3, E4, E5)

// plot(green,'Green Line', color=color.new(color.green, 0), linewidth=2)
// plot(red, 'Red Line', color=color.new(color.red, 0), linewidth=2)
// plot(lsma, 'Blue', color=color.new(color.blue, 0), linewidth=2)
// plot(energy, 'Energy', color=color.new(color.silver, 70), style=plot.style_area, histbase=50)

// hline(120, color = color.purple, linewidth = 1, linestyle = hline.style_solid)
// hline(110, color = color.red, linewidth = 1, linestyle = hline.style_solid)
// hline(100, color = color.orange, linewidth = 2, linestyle = hline.style_solid)
// hline(100, color = color.blue, linewidth = 2, linestyle = hline.style_dashed)
// hline(90, color = color.blue, linewidth = 1, linestyle = hline.style_solid)
// hline(80, color = color.white, linewidth = 2, linestyle = hline.style_solid)
// hline(80, color = color.blue, linewidth = 2, linestyle = hline.style_dashed)
// hline(70, color = color.white, linewidth = 1, linestyle = hline.style_solid)
// hline(60, color = color.gray, linewidth = 2, linestyle = hline.style_solid)
// hline(60, color = color.yellow, linewidth = 2, linestyle = hline.style_dashed)
// hline(50, color = color.yellow, linewidth = 2, linestyle = hline.style_solid)
// hline(40, color = color.gray, linewidth = 2, linestyle = hline.style_solid)
// hline(40, color = color.yellow, linewidth = 2, linestyle = hline.style_dashed)
// hline(30, color = color.white, linewidth = 1, linestyle = hline.style_solid)
// hline(20, color = color.white, linewidth = 2, linestyle = hline.style_solid)
// hline(20, color = color.blue, linewidth = 2, linestyle = hline.style_dashed)
// hline(10, color = color.blue, linewidth = 1, linestyle = hline.style_solid)
// hline(00, color = color.orange, linewidth = 2, linestyle = hline.style_solid)
// hline(00, color = color.blue, linewidth = 2, linestyle = hline.style_dashed)
// hline(-10, color = color.red, linewidth = 1, linestyle = hline.style_solid)
// hline(-20, color = color.purple, linewidth = 1, linestyle = hline.style_solid)


/////////////////////////////////////////////////////////////////////////////////////////
// Inputs {
// Sources:
src0 = open
src1 = high
src2 = low
src3 = close
src4 = hl2
src5 = hlc3
src6 = ohlc4
src7 = ta.tr
vol = volume

// Inputs:
n1 = input(6, 'Phx master')
n2 = input(3, 'Phx time 1')
n3 = input(5, 'Phx time 2')
n4 = input(14, 'LSMA 1')
n5 = input(0, 'LSMA 1')

//-----------------------------------------------------------------------------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------
// Indi FUnctions {

// // 4 principal components: tci, mf, willy, csi
// tci(src) =>
//     ta.ema((src - ta.ema(src, n1)) / (0.025 * ta.ema(math.abs(src - ta.ema(src, n1)), n1)), n2) + 50
// mf(src) =>
//     100.0 - 100.0 / (1.0 + math.sum(volume * (ta.change(src) <= 0 ? 0 : src), n3) / math.sum(volume * (ta.change(src) >= 0 ? 0 : src), n3))
// willy(src) =>
//     60 * (src - ta.highest(src, n2)) / (ta.highest(src, n2) - ta.lowest(src, n2)) + 80
// csi(src) =>
//     math.avg(ta.rsi(src, n3), ta.tsi(src0, n1, n2) * 50 + 50)
// // "Phoenix Ascending" average of tci, csi, mf, willy:
// phoenix(src) =>
//     math.avg(tci(src), csi(src), mf(src), willy(src))
// // "Tradition" average of tci, mf, rsi
// tradition(src) =>
//     math.avg(tci(src), mf(src), ta.rsi(src, n3))
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------
// // Indi FUnctions {
// wt1 = tradition(src5)
// wt2 = ta.sma(wt1, 6)
// ext1 = wt2 < 20 ? wt2 + 5 : wt2 > 80 ? wt2 - 5 : na
// // LSMA
// wt3 = ta.linreg(wt1, n4, n5)
// wt4 = ta.ema((wt1 - wt2) * 2 + 50, n3)
// // ext2 = wt2<wt1 ? wt1+5 : na
// // ext3 = wt2>wt1 ? wt1-5 : na
// // var green = wt1
// // var red = wt2
// // var blue = wt3
// // var energy = wt4
// // var pressure = ext1
// green = tradition(hlc3)
// red = ta.sma(green, 6)
// // ext1 = red < 20 ? red + 5 : red > 80 ? red - 5 : na
// lsma = ta.linreg(green, n4, n5)
// energy = ta.ema((green - red) * 2 + 50, n3)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------
// Plots {
// plot(wt1, 'Green Line', color=color.new(color.green, 0), linewidth=1)
// plot(wt2, 'Red RSI', color=color.new(color.red, 0), linewidth=1)
// plot(wt3, 'LSMA', color=color.new(color.blue, 0), linewidth=1)
// // plot(wt4, 'Energy', color=color.new(color.white, 65), style=plot.style_area, histbase=50)
// plot(wt4, 'Energy', color=color.new(color.white, 0), linewidth=1)
// plot(ext1 ? ext1 : na, 'Pressure', color=color.new(color.orange, 0), style=plot.style_circles, linewidth=2)


// hline(120, color=color.purple, linewidth=1, linestyle=hline.style_solid)
// hline(110, color=color.red, linewidth=1, linestyle=hline.style_solid)
// hline(100, color=color.orange, linewidth=1, linestyle=hline.style_solid)
// hline(100, color=color.blue, linewidth=1, linestyle=hline.style_dashed)
// hline(90, color=color.blue, linewidth=1, linestyle=hline.style_solid)
// hline(95, color=color.red, linewidth=1, linestyle=hline.style_solid)
// // hline(80, color=color.blue, linewidth=1, linestyle=hline.style_dashed)
// // hline(70, color=color.white, linewidth=1, linestyle=hline.style_solid)
// // hline(60, color=color.gray, linewidth=1, linestyle=hline.style_solid)
// hline(60, color=color.yellow, linewidth=1, linestyle=hline.style_solid)
// hline(50, color=color.yellow, linewidth=2, linestyle=hline.style_solid)
// // hline(40, color=color.gray, linewidth=1, linestyle=hline.style_solid)
// hline(40, color=color.yellow, linewidth=1, linestyle=hline.style_solid)
// // hline(30, color=color.white, linewidth=1, linestyle=hline.style_solid)
// // hline(20, color=color.white, linewidth=1, linestyle=hline.style_solid)
// // hline(20, color=color.blue, linewidth=1, linestyle=hline.style_dashed)
// hline(10, color=color.blue, linewidth=1, linestyle=hline.style_solid)
// hline(5, color=color.green, linewidth=1, linestyle=hline.style_solid)
// hline(00, color=color.blue, linewidth=1, linestyle=hline.style_dashed)
// hline(-10, color=color.red, linewidth=1, linestyle=hline.style_solid)
// hline(-20, color=color.purple, linewidth=1, linestyle=hline.style_solid)

// }
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------

//-----------------------------------------------------------------------------------------------------------------------------------------------------------------
// {
// }
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------

dRSI = input(false, 'Draw sRSI')
periodK = input.int(14, title='K', minval=1)
periodD = input.int(3, title='D', minval=1)
smoothK = input.int(3, 'K', minval=1)
smoothD = input.int(3, 'D', minval=1)
// smoothPA = input.int(3, 'PA', minval=1)
lengthRSI = input.int(14, 'RSI Length', minval=1)
lengthStoch = input.int(14, 'Stochastic Length', minval=1)
h0 = hline(80, 'Upper Band', color=color.green)
h1 = hline(20, 'Lower Band', color=color.red)
// rsi1 = ta.rsi(close, lengthRSI)
rsi_14 = ta.rsi(close, 14)
k = ta.sma(ta.stoch(rsi_14, rsi_14, rsi_14, 14), 3)
// k = ta.sma(ta.stoch(rsi1, rsi1, rsi1, lengthStoch), smoothK)
d = ta.sma(k, smoothD)
// plot(dRSI ? k : na, 'K', color=color.new(//f5f114, 0))
// plot(dRSI ? d : na, 'D', color=color.new(//e314a8, 0))

// Define the length of the PA moving average
PAlength = 3

// Calculate the moving average
smoothed_value = (green + k) / PAlength

// Add 1 to the smoothed value
PA = smoothed_value + 1
// PA = (((green*1) + (red*.3) + (lsma*1.4) + (k*1.1) + (energy*.2))/5)+1
// PA = (((green*1) + (k*1) + (energy*1))/3)+1

// PA = (((green*.4) + (red*.9) + (lsma*1.75) + (k*.5) + (energy*.2))/5)+1.25

// Plot the average
// plot(PA, 'Average', color=color.new(color.purple, 0), linewidth=2)
///////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
////---------------variable definitions------------------------------------//
/////////////////////////////////////////////////////////////////////////////
//define rise/fall variables
var energyrise = false
var energyfall = false
var greenrise = false
var greenfall = false
var krise = false
var kfall = false
var redrise = false
var redfall = false
var rocrise = false
var rocfall = false
var eomrise = false
var eomfall = false
var lsmafall = false
var lsmarise = false
var PArise = false
var PAfall = false
////Rise/fall variables
energyrise := ta.rising(energy, 1)
energyfall := ta.falling(energy, 1)
greenrise := ta.rising(green, 1)
greenfall := ta.falling(green, 1)
krise := ta.rising(k, 1)
kfall := ta.falling(k, 1)
redrise := ta.rising(red, 1)
redfall := ta.falling(red, 1)

lsmarise := ta.rising(lsma,1)
lsmafall := ta.falling(lsma,1)
PArise := ta.rising(PA,1) 
PAfall := ta.falling(PA,1)


//////////////////////////////////////////////////////////////////////////////
////EOM/ROC Indicator Function
//////////////////////////////////////////////////////////////////////////////
div = input.float(10000, title="Divisor", minval=.01)
roc = (close - close[3])/close[3] + close, length= 2 ////original length=3, close[3]

eom = ta.sma((div * ta.change(hl2) * (high - low) / volume) + close[1], length= 2)////original length=2
//// roc = (close - close[1])/close[1] + close
//// roc = (close - close[6])/close[6] + close, length= 6
//// roc = (close - close[4])/close[4] + close, length= 4
//////////////////////////////////////////////////////////////
// indicator("ATR ROC", overlay=false)
var rocatrrise = false
var rocatrfall = false
rocatrlength = input.int(50, title="ROC/ATR Length")
rocatr = (close - close[rocatrlength]) / close[rocatrlength] + close
atr = ta.atr(rocatrlength)
scaled_atr_roc = rocatr * atr + close
rocatrrise := ta.rising(scaled_atr_roc,1) 
rocatrfall := ta.falling(scaled_atr_roc,1)

plot(scaled_atr_roc, title="ATR ROC", color=color.new(color.green, 33), linewidth=2)
///***Turned off for publishing
// plot(scaled_atr_roc, title="ATR ROC", color=color.rgb(51, 243, 33), linewidth=4)
// plot(atr_roc, title="ATR ROC", color=color.rgb(51, 243, 33), linewidth=4)
// // ////Plot EOM/ROC - COPIED
p1= plot(eom, "EOM", color.white) 
p2= plot(roc, "ROC", color.aqua)
///***Turned off for publishing

// ////Plot Fill - COPIED
// //// fill_color = eom[2] >= roc[1] and eom[2] > high  ? color.red : color.green
// //// fill(p1,p2, color=fill_color)

rocrise := ta.rising(roc,1)
rocfall := ta.falling(roc,1)
eomrise := ta.rising(eom,1)
eomfall := ta.falling(eom,1)


//////////////////////////////////////////////////////////////////////////////
////Multi TimeFrame ROC
// rocrise45 = request.security(syminfo.ticker, "6", (roc > eom))
// rocfall45 = request.security(syminfo.ticker, "6", (roc < eom))
// plotshape(rocrise45, style=shape.circle, color=color.new(color.green, 0), location=location.top, size= size.small)
//turned off for publish...
// plotshape(rocfall45, style=shape.circle, color=color.new(color.red, 0), location=location.top, size= size.small)
//turned off for publish...

///////////////////////////////////////////////////////////////////////////////
////End of EOM/ROC Indicator

///////////////////////////////////////////////////////////////////////////////
////DIFF INDICATOR
////diff Format
var format = "//"
if barstate.isfirst
    if precision != 0
        format += "."
        for i = 0 to precision - 1
            format += "//"
////diff Calcs
diff = (close / open - 1) * 100
diff_color = diff > 0 ? color.green : color.red
// ////DIFF LABEL - COPIED
// label.new(bar_index, high, str.tostring(diff, format), style = label.style_none, size=size.small, textcolor = diff_color)
//////////////////////////////////////////////////////////////////////////////////////////////
////End of diff indicator
/////////////////////////////////////////////////////////////////////////////////////////////////////
////Basic Wick Calculations and Labels
/////////////////////////////////////////////////////////////////////////////////////////////////////
//// Lower Wick Calc for use in diff and shooting star/falling knife variable calcs
float u_wick = ((high - open) / open) * 100 //// u_wick calc
float bar_n_wicks = (((high - open) / open) * 100) + diff + (((close - low) / close) * 100)
if close > open
    u_wick := ((high - close) / close) * 100
//lower wick length in %
float l_wick = ((close - low) / close) * 100
if close > open
    l_wick := ((open - low) / open) * 100
////////////////////////////////////////////////////
////Wick Labels - COPIED
// label.new(bar_index, high, str.tostring(u_wick, format), yloc=yloc.abovebar, style = label.style_none, 
//  size=size.small, textcolor = color.aqua)
// label.new(bar_index, high, str.tostring(l_wick, format), yloc=yloc.belowbar, style = label.style_none, 
//  size=size.small, textcolor = color.white)
//////////////////////////////////////////////////////////////////////////////////////////////////////
////diffLong/diffShort calcs
//////////////////////////////////////////////////////////////////////////////////////////////////////
////diffLong calcs
if (diff >= open_long)
     or (diff[1] <= 0) and (diff >= 0) and ((l_wick + diff) >= open_long)
     or (diff[1] <= 0) and (diff >= 0) and ((l_wick[1] + diff) >= open_long)
     or (diff[2] <= 0) and (diff[1] >= 0) and (diff >= 0) and (diff + diff[1] + l_wick[1]) >= open_long 
     or (diff[2] <= 0) and (diff[1] >= 0) and (diff >= 0) and (diff + diff[1] + l_wick[2]) >= open_long 
     or (diff[3] <= 0) and (diff[2] >= 0) and (diff[1] >= 0) and (diff >= 0) and (diff + diff[1] + diff[2] + l_wick[2]) >= open_long
     or (diff[3] <= 0) and (diff[2] >= 0) and (diff[1] >= 0) and (diff >= 0) and (diff + diff[1] + diff[2] + l_wick[3]) >= open_long
    diffLong := true
else
    diffLong := false

////diffShort calcs
if (diff <= open_short) 
     or (diff[1] >  0) and (diff < 0) and (((u_wick * -1) + diff) <= open_short)
     or (diff[1] >  0) and (diff < 0) and (((u_wick[1] * -1) + diff) <= open_short)
     or (diff[2] >  0) and (diff[1] < 0) and (diff < 0) and ((u_wick[1] * -1) + diff + diff[1]) <= open_short  
     or (diff[2] > 0) and (diff[1] < 0) and (diff < 0) and ((u_wick[2] * -1) + diff + diff[1]) <= open_short  
     or (diff[3] > 0) and (diff[2] < 0) and (diff[1] < 0) and (diff < 0) and ((u_wick[2] * -1) + diff + diff[1] + diff[2]) <= open_short
     or (diff[3] > 0) and (diff[2] < 0) and (diff[1] < 0) and (diff < 0) and ((u_wick[3] * -1) + diff + diff[1] + diff[2]) <= open_short
    diffShort := true
else
    diffShort := false
// ////Plot diffLong and diffShort
plotshape(diffLong, style=shape.square, color=color.rgb(198, 243, 199), location=location.bottom, size = size.tiny)
plotshape(diffShort, style=shape.square, color=color.rgb(247, 205, 205), location=location.top, size= size.tiny)
///***Turned off for publishing
//////////////////////////////////////////////////////////////////////////////////
////3 BAR SUM USED FOR FLAT CONDITIONS... >.1 FOR LONG <-.1 FOR SHORT
tbs= diff[3] + diff[2] + diff[1] + diff
var tbarrise = (close > close[2]) and (diff[2] >= 0) and (diff[1] >= 0) and (diff >= 0)
var tbarfall = (close < close[2]) and (diff[2] <= 0) and (diff[1] <= 0) and (diff <= 0) 
plotshape((tbs > tbs_open_long), style=shape.circle,  color=color.new(color.green, 1), location=location.bottom, size = size.tiny)
plotshape((tbs < tbs_open_short), style=shape.circle,  color=color.new(color.red, 1), location=location.top, size = size.tiny)
///***Turned off for publishing

//////////////////////////////////////////////////////////////////////////////////////////////////////
////VOLATILITY LEVELS AND ATR6
////PUMP/DUMP ATR CATCHER
////*ATRPUMP/DUMP(6) VARIABLES ARE ALWAYS A POSITIVE % NUMBER
var float atrpump_dump = na
var float atr6 = na

var pump = false
var dump = false

atrpump_dump := math.abs(high - low) / open * 100
// atr6 := (atrpump_dump[5] + atrpump_dump[4] + atrpump_dump[3] + atrpump_dump[2] + atrpump_dump[1] + atrpump_dump)/6 
////atr6 dynamically adjusted to atr3 for 1 bar pump/dump
////*R3141 added wicks to compensate for when a bar has a deep wick or double wicks...
////*this could be off by one bar because pump calcs done after this function...
if (pump[1] or dump[1] or (u_wick[1] > .5) or (l_wick[1] > .5))
    atr6 := atrpump_dump
else if (pump[2] or dump[2] or (u_wick[2] > .5) or (l_wick[2] > .5))
    atr6 := (atrpump_dump[1] + atrpump_dump) / 2
else if (pump[3] or dump[3] or (u_wick[3] > .5) or (l_wick[3] > .5))
    atr6 := (atrpump_dump[2] + atrpump_dump[1] + atrpump_dump) / 3
else if (pump[4] or dump[4] or (u_wick[4] > .5) or (l_wick[4] > .5))
    atr6 := (atrpump_dump[3] + atrpump_dump[2] + atrpump_dump[1] + atrpump_dump) / 4
else if (pump[5] or dump[5] or (u_wick[5] > .5) or (l_wick[5] > .5))
    atr6 := (atrpump_dump[4] + atrpump_dump[3] + atrpump_dump[2] + atrpump_dump[1] + atrpump_dump) / 5
else
    atr6 := (atrpump_dump[5] + atrpump_dump[4] + atrpump_dump[3] + atrpump_dump[2] + atrpump_dump[1] + atrpump_dump) / 6


var vol_xlow = false //Range >=0 and <=.25
var vol_low = false //Range >.25 and <=.5
var vol_med = false //Range >.5 and <=.75
var vol_high = false //Range >.75 and <=1
var vol_xhigh = false //Range >1

////ESTABLISH VOLATILITY RANGES
////atr6 is positive so volatility will be positive
if (atr6 <= vol_xlow_TH) // //Range >=0 and <=.21, XLTH=.21
    vol_xlow := true
else
    vol_xlow := false

if (atr6 > vol_xlow_TH) and (atr6 < vol_low_TH) //Range >.21 and <=.5, LTH=.5
    vol_low := true
else
    vol_low := false

if (atr6 >= vol_low_TH) and (atr6 < vol_med_TH) //Range >.5 and <=.75, MTH=.75
    vol_med := true
else
    vol_med := false

if (atr6 >= vol_med_TH) and (atr6 < vol_high_TH) //Range >.75 and <=1, HTH=1
    vol_high := true
else
    vol_high := false

if (atr6 >= vol_high_TH) //Range >1, XHTH=>1
    vol_xhigh := true
else
    vol_xhigh := false
////Pump/Dump Calcs
////Pump Calcs - L559
if vol_xlow and (diff > (pump_TH * atr6[1])) and (diff > xlow_min_pump_TH) //vol_xlow<=.25
     or vol_xlow and ((diff + diff[1]) > (pump_TH * atr6[1])) and (diff > xlow_min_pump_TH) //vol_xlow<=.25
     or vol_low and (diff > (pump_TH * atr6[1])) and (diff > xlow_min_pump_TH) // vol_low>.25 and <=.5
     or vol_med and (diff > .5) //vol_med>.5 and <=.75
     or vol_high and (diff > .5) //vol_hi>.75 and <=1
     or vol_xhigh and (diff > .5) //vol_xhi>1
    pump := true
    long4 := true
    cshort3 := true
else
    pump := false
    long4 := false
    cshort3 := false
////Dump Calcs - L574
if vol_xlow and (diff < (dump_TH * atr6[1])) and (diff < open_short) // and (atr6[1] > .25)
     or vol_xlow and ((diff +diff[1]) < (dump_TH * atr6[1])) and (diff < open_short)
     or vol_low and (diff < open_short) and (diff < (dump_TH * atr6[1]))      
     or vol_med and (diff < -.5)
     or vol_high and (diff < -.5)
     or vol_xhigh and (diff < -.5)
    dump := true
    short4 := true
    clong3 := true
else
    dump := false
    short4 := false
    clong3 := false

plotshape(pump, style=shape.arrowup, color=color.new(color.orange, 1), location=location.bottom, size=size.large)
plotshape(dump, style=shape.arrowdown, color=color.new(color.yellow, 1), location=location.top, size=size.large)
///////////////////////////////////////////////////////////////////
////Wick Close calculations
/////////////////////////////////////////////////////////////////////////////////////////////
////*** I need to look at creating separate wick calculations for closing and opening on wick.
////Upper and Lower wick definition calculations for use with closing orders on wick
////upper wick length in %
////Close on Wick Variables
var shootingStar = false
u_wick_trigger = false
var fallingKnife = false
l_wick_trigger = false

////VOLATILITY RANGES TO TRIGGER SHOOTING STAR AND FALLING KNIFE
////Shooting Star - L604
if vol_xlow and pump and (diff > (shooting_starTH*2)) and (u_wick > (diff * shooting_star_close)) //**Condition SS1
     or vol_xlow and pump[1] and ((diff[1] + diff) > (shooting_starTH*2)) and (u_wick > (diff * shooting_star_close))
      and (diff > open_long) //**Condition SS2
     or vol_low and pump and (diff > (shooting_starTH*2)) and (u_wick > (diff * shooting_star_close)) //**Condition SS3
     or vol_low and pump[1] and ((diff[1] + diff) > (shooting_starTH*2)) and (u_wick > (diff * shooting_star_close))
      and (diff > open_long) //**Condition SS4
     or vol_med and pump and (diff > (shooting_starTH*2)) and (u_wick > (diff * shooting_star_close)) //**Condition SS5
     or vol_high and pump and (diff > (shooting_starTH*2.5)) and (u_wick > (diff * shooting_star_close)) //**Condition SS6
     or vol_xhigh and pump and (diff > (shooting_starTH*2.75)) and (u_wick > (diff * shooting_star_close)) //**Condition SS7
    shootingStar := true
    clong3 := true
    long3 := false
else
    shootingStar := false
    clong3 := false

////Falling Knife - L620
if  vol_xlow and dump and (diff < (falling_knifeTH*2)) and ((l_wick*-1) < (diff * falling_knife_close)) //**Condition FK8
     or vol_xlow and dump[1] and ((diff[1] + diff) < (falling_knifeTH*2)) and ((l_wick*-1) < (diff * falling_knife_close))
      and (diff < open_short)  //**Condition FK9
     or vol_low and dump and  (diff < (falling_knifeTH*2)) and ((l_wick*-1) < (diff * falling_knife_close)) //**Condition FK10
     or vol_low and dump[1] and ((diff[1] + diff) < (falling_knifeTH*2)) and ((l_wick*-1) < (diff * falling_knife_close))
      and (diff < open_short) //**Condition FK11
     or vol_med and dump and (diff < (falling_knifeTH*2)) and ((l_wick*-1) < (diff * falling_knife_close)) //**Condition FK12
     or vol_high and dump and (diff < (falling_knifeTH*2.5)) and ((l_wick*-1) < (diff * falling_knife_close)) //**Condition FK13
     or vol_xhigh and dump and (diff < (falling_knifeTH*2.75)) and ((l_wick*-1) < (diff * falling_knife_close)) //**Condition FK14
    fallingKnife := true
    cshort3 := true
    short3 := false
else
    fallingKnife := false
    cshort3 := false

////Auto retrace reversal from SS/FK
////Shooting Star - L635
// if (shootingStar[1] or pump[1]) and (diffShort or (diff < open_short)) //**Condition FKRebound15
//     short3 := true
//     clong5 := true
// else
//     short3 := false
//     clong5 := false

// ////Falling Knife - L640
// if (fallingKnife[1] or dump[1]) and (diffLong or (diff > open_long)) //**Condition SSRebound16
//     long3 := true
//     cshort5 := true
// else
//     long3 := false
//     cshort5 := false

////Debug Plot, KEEP CLOSE TO CODE -COPIED
////Plot shooting star and falling knife close
plotshape(shootingStar, style=shape.triangledown, color=color.new(color.purple,30), location=location.top, size=size.normal)
plotshape(fallingKnife, style=shape.triangleup, color=color.new(color.purple,30), location=location.bottom, size=size.normal)


///////////////////////////////////////////////////////////////////////////////
////PA SLOPE/ PAflat
/////////////////////////////////////////////////////
PAslope = ((PA - PA[1]) / (2-1))
var paflat = false

if PAslope < 2.0 and PAslope > -2.0
    paflat := true    
else
    paflat := false
///////////////////////////////////////////////////////////////////////////////////////////////
//// LSMA Slope Calculations and Labels ////***bought from R1068 to R336
//// LSMA Slope Format
var formatLSMAslope = "//"
if barstate.isfirst
    if precision != 0
        formatLSMAslope += "0.0"
        for i = 0 to precision - 1
            formatLSMAslope += "//"
////LSMA Slope
lsmaslope = ((lsma - lsma[1]) / (2-1))
////LSMA SLOPE LABEL - COPIED
// label.new(bar_index, high, str.tostring(lsmaslope, formatLSMAslope), yloc=yloc.belowbar, style = label.style_none, 
//  size=size.small, textcolor = color=color.new(color.blue, 0))

////EOM/ROC/K SLOPE AND PEAK DIPS
////ROC Slope
rocslope = ((roc - roc[1]) / (2-1))*1000
////EOM Slope
eomslope = ((eom - eom[1]) / (2-1))*1000
////KSLOPE
kslope = ((k - k[1]) / (2-1))
////GREEN SLOPE
gslope = ((green - green[1]) / (2-1))
////RED SLOPE
rslope = ((red - red[1]) / (2-1))

////PEAKS/DIPS Calcs
////Peaks - L690
kpeak = (k[2] <= k[1]) and (k[1] > k)
     or (kslope[1] >= 0) and (kslope < 0)
gpeak = (green[2] <= green[1]) and (green[1] > green)
     or (gslope[1] >= 0) and (gslope < 0) 
rocpeak = (roc[2] <= roc[1]) and (roc[1] > roc)
     or (rocslope[1] >= 0) and (rocslope < 1)
PApeak = (PA[2] <= PA[1]) and (PA[1] > PA)
     or (PAslope[1] >= 0) and (PAslope < 1)
lsmapeak = (lsma[2] <= lsma[1]) and (lsma[1] > lsma)
     or (lsmaslope[1] >= 0) and (lsmaslope < 1)     
rpeak = (red[2] <= red[1]) and (red[1] > red)
     or (rslope[1] >= 0) and (rslope < 0)      
////Dips - L703
kdip = (k[2] >= k[1]) and (k[1] < k)
     or (kslope[1] <= 0) and (kslope > 0) 
gdip = (green[2] >= green[1]) and (green[1] < green)
     or (gslope[1] <= 0) and (gslope > 0)
rocdip = (roc[2] >= roc[1]) and (roc[1] < roc) 
     or (rocslope[1] <= 0) and (rocslope > 0) 
PAdip = (PA[2] >= PA[1]) and (PA[1] < PA) 
     or (PAslope[1] <= 0) and (PAslope > 0)
lsmadip = (lsma[2] >= lsma[1]) and (lsma[1] < lsma) 
     or (lsmaslope[1] <= 0) and (lsmaslope > 0)
rdip = (red[2] >= red[1]) and (red[1] < red)
     or (rslope[1] <= 0) and (rslope > 0)

allpeak = (rocpeak[3] or rocpeak[2] or rocpeak[1] or rocpeak and gpeak[3] or gpeak[2] or gpeak[1] or gpeak and
     kpeak[3] or kpeak[2] or kpeak[1] or kpeak and PApeak[3] or PApeak[2] or PApeak[1] or PApeak)

alldip = (rocdip[3] or rocdip[2] or rocdip[1] or rocdip and gdip[3] or gdip[2] or gdip[1] or gdip and
     kdip[3] or kdip[2] or kdip[1] or kdip and PAdip[3] or PAdip[2] or PAdip[1] or PAdip)

////R&B dip
var r_bdip = false
var r_bpeak = false
if ((rdip[1] or rdip) and (lsmadip[1] or lsmadip))
    r_bdip := true
else
    r_bdip := false

if ((rpeak[2] or rpeak[1] or rpeak) and (lsmapeak[2] or lsmapeak[1] or lsmapeak))
    r_bpeak := true
else
    r_bpeak := false
// 
////////////////////////////////////////////////////////////////////////////////
cshort_ok = false
clong_ok = false
////Close Long/ Close Short OK Preconditions
////Close Long OK - L737
// if allpeak and ((k[1] > 90) or (green[1] > 90)) and (red[1] < 60) and not ttl
//     clong_ok := true
// else
//     clong_ok := false
// ////Close Short OK - L742
// if alldip and ((k[1] < 10) or (green[1] < 10)) and (red[1] > 40) and not tts
//     cshort_ok := true
// else
//     cshort_ok := false
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////
////Trend Trail Function
////TTL - L750
if  (red >= 95) and redrise and not diffShort
     or (red >= 90) and redrise and greenrise and krise and not diffShort
    //  or ((lsma >= 90) and lsmarise)
     or (k >= 95) and not redfall and not lsmafall and not diffShort //and (green >= 80) //and (diff > 0) //and not greenfall and not (green < 90) and (roc > eom) and (diff > 0) and not rocpeak and not kpeak
     or (k[1] >= 92.5) and (k >= 92.5) and not diffShort //and (green >= 75) //and (diff > 0) //and not greenfall and not (green < 90) and (diff > 0) and (roc > eom) and not rocpeak and not kpeak
     or (k[2] >= 90) and (k[1] >= 90) and (k >= 90) and (diff > 0) and (green >= 75) and not diffShort  //and not greenfall and not (green < 90) and (diff > 0) and (roc > eom) and not rocpeak and not kpeak
     or (green[1] >= 90) and (green >= 90) and not diffShort  //and (diff > 0) //and (diff > 0) and (roc > eom) and not rocpeak and not kpeak
     or (k[1] >= 85) and (k >= 85) and (green[1] >= 85) and (green >= 85) and (diff > 0) and not diffShort  //and (roc > eom) and not rocpeak and not kpeak
    //  or (k[1] >= 85) and (k >= 85) //and (diff > 0) //and greenrise and krise and (roc > eom) and not rocpeak and not kpeak
    ttl := true
else
    ttl := false
////TTS - L763
if (red < 5) and redfall and not diffLong
     or (red <= 10) and redfall and greenfall and kfall and not diffLong
    //  or ((lsma < 10) and redfall)
     or (k <= 5) and not redrise and not lsmarise and not diffLong //and (green <= 20) //and (diff < 0) //and not greenrise and not (green < 90) and (roc < eom) and not rocdip and not kdip
     or (k[1] <= 7.5) and (k <= 7.5) and not diffLong //and (green <= 25) //and (diff < 0) //and not greenrise and not (green < 90) and (roc < eom) and not rocdip and not kdip
     or (k[2] <= 10) and (k[1] <= 10) and (k <= 10) and (diff < 0) and (green <= 25) and not diffLong //and not greenrise and not (green < 90) and (roc < eom) and not rocdip and not kdip
     or (green[1] <= 10) and (green <= 10) and not diffLong //and (diff < 0) //and (roc < eom) and not rocdip and not kdip
     or (k[1] <= 15) and (k <= 15) and (green[1] <= 15) and (green <= 15) and (diff < 0) and not diffLong //and (roc < eom) and not rocdip and not kdip
    //  or (k[1] <= 15) and (k <= 15) //and (diff < 0) //and greenfall and kfall and (roc < eom) and not rocdip and not kdip
    tts := true
else
    tts := false

//////////////////////////////////////////
var allrise = false
var allfall = false
////ALLRISE/ALLFALL CALCS
////Rise - L781
if greenrise and krise and (rocatrrise or rocrise) // ((roc > eom) or (rocatr > eom)) and (rocslope > 15)
    //  or PArise and greenrise and krise and (diff > 0)
    allrise := true
else
    allrise := false
////Fall - L787
if greenfall and kfall and (rocatrfall or rocfall) //((roc < eom) or (rocatr < eom)) and (rocslope < -15)
    //  or PAfall and greenfall and kfall and (diff < 0) and redfall
    allfall := true
else
    allfall := false

/////////////////////////////////////////////////////////////
//// Indicator EMA 5/50
///////////////////////////////////////////////////////////////////////////////////////////
// indicator(title="Moving Average Exponential", shorttitle="EMA", overlay=true, timeframe="", timeframe_gaps=true)
ema50len = input.int(50, minval=1, title="EMA 21 Length")
ema50src = input(close, title="Source")
ema50offset = input.int(title="EMA 50 Offset", defval=0, minval=-500, maxval=500)
ema50 = ta.ema(ema50src, ema50len)
plot(ema50, title="EMA 50", color=color.blue, offset=ema50offset) 
///***Turned off for publishing

////???I'm not sure if this source and length should be the same as ema???
ma(source, length, type) =>
    switch type
        "SMA" => ta.sma(source, length)
        "EMA" => ta.ema(source, length)
        "SMMA (RMA)" => ta.rma(source, length)
        "WMA" => ta.wma(source, length)
        "VWMA" => ta.vwma(source, length)

typeMA50 = input.string(title = "Method", defval = "SMMA (RMA)", options=["SMA", "EMA", "SMMA (RMA)", "WMA", "VWMA"], group="Smoothing")
Smoothing50Length = input.int(title = "Length", defval = 5, minval = 1, maxval = 100, group="EMA50 Smoothing")

ema5 = ma(ema50, Smoothing50Length, typeMA50)
// plot(ema5, title="Smoothing Line", color=//f37f20, offset=offset, display=display.none)
plot(ema5, title="EMA 5 Smoothing Line", color=//f37f20, offset=ema50offset)
///***Turned off for publishing

////Variables for EMA
ema5slope = ((ema5 - ema5[1]) / (2-1))*100000
ema50slope = ((ema50 - ema50[1]) / (2-1))*100000
// lsmaslope = ((lsma - lsma[1]) / (2-1))

var ema5rise = false
var ema5fall = false

var ema50rise = false
var ema50fall = false

///////////////////////////////////////////////////////////////////////////////////////////
////EMA 5/50 Distance Apart
var formatda = "//"
if barstate.isfirst
    if precision != 0
        formatda += "0.0"
        for i = 0 to precision - 1
            formatda += "//"
////DISTANCE BETWEEN EMA_5 AND EMA_50
da = ((ema50 - ema5) / ema50) * 1000 ////for 3m=10000, for 1h=1000
// plot(da, title="EMA Distance Apart", color=color.green, offset=offset)

// daLong = (ema50 - ema5) //blue over orange ////price based calculation
// daShort = (ema5 - ema50) //orange over blue ////price based calculation

// daLongP = ((ema50 - ema5)/ema5) * 1000  ////% calculation
// daShortP =  ((ema5 - ema50)/ema50) * 1000 ////% calculation


// dadiff = ((distance_current - distance_previous)/distance_previous) * 100
//(([0] - [1])/[1])*100
//diff = (close / open - 1) * 100

//
////Test Condition Long Open/Short Close

// if (da[4] > da[3]) and (da[3] > da[2]) and (da[2] > da[1]) and (da[1] > da) and (roc > high)
//  //and  (ema50 > ema5) 
//  //and ttl // and (da < da_openLong) //short open/orange plot, channel narrowing against trend, orange above blue, da<-2
//     daLong := true
// else 
//     daLong := false

// if (da[4] > da[3]) and (da[3] > da[2]) and (da[2] > da[1]) and (da[1] > da) and (roc < low)
//      //and  (ema5 > ema50) 
//      //and (da > da_openShort) 
//      //and tts //long open/blue plot, channel narrowing against trend, blue above orange, da>2
//     daShort := true
// else 
//     daShort := false
//

// plotshape(daShort, style=shape.triangledown, color=color.new(color.orange, 0), location=location.top, size= size.normal)
// plotshape(daLong, style=shape.triangleup, color=color.new(color.blue, 0), location=location.bottom, size= size.normal)



var format_ema5slope = "//"
var format_ema50slope = "//"

if barstate.isfirst
    if precision != 0
        format_ema50slope += "0.0"
        for i = 0 to precision - 1
            format_ema50slope += "//"

if barstate.isfirst
    if precision != 0
        format_ema5slope += "0.0"
        for i = 0 to precision - 1
            format_ema5slope += "//"

////Variables for EMASLOPE
// ema5slope = ((ema5 - ema5[1]) / (2-1))*100000
// ema50slope = ((ema50 - ema50[1]) / (2-1))*100000

// ////EMA SLOPE LABELS
// ////ema50 SLOPE LABEL 
// label.new(bar_index, high, str.tostring(ema50slope, format_ema50slope), style = label.style_none,
//  size=size.small, textcolor = color.blue)
//turned off for publish...
// ////ema5 SLOPE LABEL 
// label.new(bar_index, high, str.tostring(ema5slope, format_ema5slope), yloc=yloc.abovebar, style = label.style_none, 
//  size=size.small, textcolor = color.orange)

// var emaflat = false
// if ((ema5slope <= 2) and (ema5slope >= -2)) and ((ema5slope <= 2) and (ema5slope >= -2))
//     emaflat := true
// else
//     emaflat := false
// plotshape(emaflat, style=shape.circle, color=color.new(color.orange, 0), location=location.top, size= size.tiny)
//turned off for publish...
// plotshape(ema5down, style=shape.triangledown, color=color.new(color.orange, 0), location=location.top, size= size.tiny)
//turned off for publish...

// ema5rise := ta.rising(ema5,1) 
// ema5fall := ta.falling(ema5,1)
// ema50rise := ta.rising(ema50,1) 
// ema50fall := ta.falling(ema50,1)

// ema5_xu_ema50 = ta.crossover(ema5,ema50)
// ema5_xd_ema50 = ta.crossunder(ema5,ema50)
// ema50_xu_ema5 = ta.crossover(ema50,ema5)
// ema50_xd_ema5 = ta.crossunder(ema50,ema5)

// ema5down = ema5fall and ((da > .25) or (da < -.25))
// ema5up = ema5rise and ((da > .25) or (da < -.25))

// ema50down = ema50fall and ((da > .25) or (da < -.25))
// ema50up = ema50rise and ((da > .25) or (da < -.25))

//// EOM XU/XD ROC
//// Compute crossing conditions to make sure they are executed correctly
// roc_xu_eom = ta.crossover(roc,eom)
// roc_xd_eom = ta.crossunder(roc,eom)
// eom_xu_roc = ta.crossover(eom,roc)
// eom_xd_roc = ta.crossunder(eom,roc)
////
////Creating crossing variables for PA
// green_xd_k = ta.crossunder(green,k)
// green_xd_red = ta.crossunder(green,red)
// green_xd_lsma = ta.crossunder(green,lsma)
// green_xu_k = ta.crossover(green,k)
// green_xu_red = ta.crossover(green,red)
// green_xu_lsma = ta.crossover(green,lsma)

////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
////Peak and Dip Variables
//// EOM/ROC Dip to detect Short to Long Reversal, Opens Long, Closes Short with the Right PA Condition
// eomdip = (eom > eom[1]) and (eom[1] < eom[2]) ////EOM Dip
// // rocdip = (roc > roc[1]) and (roc[1] < roc[2]) ////ROC Dip

// //// EOM/ROC Peak to detect Long to Short Reversal, Opens Short, Closes Long with the Right PA Conditions
// eompeak = (eom[2] < eom[1]) and (eom[1] > eom) ////EOM Peak
// // rocpeak = (roc[2] < roc[1]) and (roc[1] > roc) ////ROC Peak
////////////////////////////////////////////////////////////////////////////////////////

//// Old from R336 EOM Slope Format
var formatEOMslope = "//"
if barstate.isfirst
    if precision != 0
        formatEOMslope += "0.0"
        for i = 0 to precision - 1
            formatEOMslope += "//"
////SLOPE LABELS
////ROC SLOPE LABEL - COPIED
// label.new(bar_index, high, str.tostring(rocslope, formatEOMslope), yloc=yloc.abovebar, style = label.style_none, 
//  size=size.small, textcolor = color.aqua)
////EOM SLOPE LABEL - COPIED
// label.new(bar_index, high, str.tostring(eomslope, formatEOMslope), yloc=yloc.belowbar, style = label.style_none, 
//  size=size.small, textcolor = color.white)
////K SLOPE LABEL - COPIED
// label.new(bar_index, high, str.tostring(kslope, formatEOMslope), yloc=yloc.abovebar, style = label.style_none, 
//  size=size.small, textcolor = color.yellow)
//// PA Label
// label.new(bar_index, high, str.tostring(PAslope, formatLSMAslope), yloc=yloc.belowbar, style = label.style_none, 
//  size=size.small, textcolor = color=color.new(color.blue, 0))
//////////////////////////////////////////////////////////////////////////////////////////
////LSMA FLAT
var lsmaflat = false
if lsmaslope < 2.0 and lsmaslope > -2.0
    lsmaflat := true    
else
    lsmaflat := false
//////////////////////////////////////////////////////////////////////////////////////////
////EOM FLAT
var eomflat = false
if eomslope < .05 and eomslope > -.05
    eomflat := true
else
    eomflat := false
////DEBUG PLOTS, KEEP CLOSE TO CODE - COPIED
// plotshape(lsmaflat, style=shape.diamond, color=color.yellow, location=location.bottom, size = size.normal)
//////////////////////////////////////////////////////////////////////////////////////////
////DIFFLAT CONDITIONS
// ////diffFlat Long

// if diff[4] <= diffFlat_long_trigger and diff[4] >= diffFlat_short_trigger 
//      and diff[3] <= diffFlat_long_trigger and diff[3] >= diffFlat_short_trigger 
//      and diff[2] <= diffFlat_long_trigger and diff[2] >= diffFlat_short_trigger
//      and diff[1] <= diffFlat_long_trigger and diff[1] >= diffFlat_short_trigger 
//      and ((diff[3] + diff[2] + diff[1] + diff) <= diffFlat_long_trigger) 
    //  and not ((diff[3] + diff[2] + diff[1] + diff) < diffFlat_short_trigger)

// if diff[3] <= diffFlat_long_trigger and diff[3] >= diffFlat_short_trigger 
//      and diff[2] <= diffFlat_long_trigger and diff[2] >= diffFlat_short_trigger 
//      and diff[1] <= diffFlat_long_trigger and diff[1] >= diffFlat_short_trigger
    //  and diff[1] <= diffFlat_long_trigger
    //  and ((diff - diff[1]) <= diffFlat_long_trigger) 
    //  or ((diff - diff[2]) <= diffFlat_long_trigger) 
    //  or ((diff - diff[3]) <= diffFlat_long_trigger) 
    //  or ((diff - diff[4]) <= diffFlat_long_trigger) 
////DIFFLAT CONDITIONS
////FLAT LONG AND SHORT
if eomflat[2] and eomflat[1] and eomflat and not (rocslope > 10) and not diffLong and not ttl
    // ((diff <= diffFlat_long_trigger) and (diff >= diffFlat_short_trigger))
    //  or paflat and not (rocslope > 10) and not diffLong and not ttl
    //  or lsmaflat and not (rocslope > 10) and not diffLong and not ttl
    //  or  //and not ((PAslope > 1) or (PAslope < -1))
    //  or vsmaflat[1] and vsmaflat and not (rocslope > 10) and not diffLong and not ttl
    //  or ((eomslope[2] > -.1) and (eomslope[1] > -.1) and (eomslope > -.1))
    //  and ((eomslope[2] < .1) and (eomslope[1] < .1) and (eomslope < .1)) and not (rocslope > 10) and not diffLong and not ttl
     or ((diff < diffFlat_long_trigger) or (diff > diffFlat_short_trigger))
     or (vol_xlow or vol_low)
     or greenrise and kfall
     or krise and greenfall
    diffFlat_long := true
    diffFlat_short := true
else
    diffFlat_long := false
    diffFlat_short := false
    // close_short := false
    // close_long := false

////DIFFLAT CONDITIONS
////DiffFlat Long - L1039
if diff <= diffFlat_long_trigger //diffFlat_long_trigger = .33
     or diff + diff[1] <= diffFlat_long_trigger 
     or diff + diff[1] + diff[2] <= diffFlat_long_trigger   
    //  or (tbs <= diffFlat_long_trigger)    
    //  or (diff + l_wick) + diff[1] + diff[2] + diff[3] <= diffFlat_long_trigger //and not diffLong //***not working, need to create a reversal variable... and not (ttl[1] and not ttl)
    diffFlat_long1 := true
else
    diffFlat_long1 := false
////DiffFlat Short - L1048
if diff >= diffFlat_short_trigger //diffFlat_short_trigger = -.33
     or diff + diff[1] >= diffFlat_short_trigger 
     or diff + diff[1] + diff[2] >= diffFlat_short_trigger 
    //  or (tbs <= diffFlat_short_trigger) 
    diffFlat_short1 := true
else
    diffFlat_short1 := false
////old diffflat conditions simplified above...
//  and diff + (diff[1] + diff[2] + diff[3]) <= diffFlat_long_trigger
//      or (diff[1] + diff) >= diffFlat_short_trigger
//      and not (diff[3] + diff[2] + diff[1] + diff) > diffFlat_long_trigger
//      or (diff[2] + diff[1] + diff) >= diffFlat_short_trigger
//      and not (diff[3] + diff[2] + diff[1] + diff) > diffFlat_long_trigger
//      and not (diff[3] + diff[2] + diff[1] + diff) > diffFlat_long_trigger 
// diff[3] <= diffFlat_long_trigger and diff[3] >= diffFlat_short_trigger 
//      and diff[2] <= diffFlat_long_trigger and diff[2] >= diffFlat_short_trigger
//      and diff[1] <= diffFlat_long_trigger and diff[1] >= diffFlat_short_trigger 

////diffFlat  Plots
// plotshape((diffFlat_long), style=shape.square, color=color.purple, location=location.bottom, size = size.small)
// // //turned off for publish
// plotshape((diffFlat_short), style=shape.square, color=color.purple, location=location.top, size = size.small)
// // //turned off for publish

// // indicator("Chop Filter", overlay=false)

// // // Define input parameters
// chopThreshold = input(0.5, "Chop Threshold")


// if diff[4] >= diffFlat_short_trigger and diff[4] <= diffFlat_long_trigger
//      and diff[3] >= diffFlat_short_trigger and diff[3] <= diffFlat_long_trigger
//      and diff[2] >= diffFlat_short_trigger and diff[2] <= diffFlat_long_trigger 
//      and diff[1] >= diffFlat_short_trigger and diff[1] <= diffFlat_long_trigger 
//      and ((diff[3] + diff[2] + diff[1] + diff) >= diffFlat_short_trigger)
// if diff[3] >= diffFlat_short_trigger and diff[3] <= diffFlat_long_trigger 
//      and diff[2] >= diffFlat_short_trigger and diff[2] <= diffFlat_long_trigger  
//      and diff[1] >= diffFlat_short_trigger and diff[1] <= diffFlat_long_trigger
//     //  and diff[1] >= diffFlat_short_trigger
    //  and ((diff - diff[1]) >= diffFlat_short_trigger) 
    //  or ((diff - diff[2]) >= diffFlat_short_trigger) 
    //  or ((diff - diff[3]) >= diffFlat_short_trigger) 
    //  or ((diff - diff[4]) >= diffFlat_short_trigger) 
    //  or paflat and not (rocslope < -10) and not diffShort and not tts
    //  or lsmaflat and not (rocslope < -10) and not diffShort and not tts
    //  or eomflat[2] and eomflat[1] and eomflat and not (rocslope < -10) and not diffShort and not tts //and not ((PAslope > 1) or (PAslope < -1))
    //  or vsmaflat[1] and vsmaflat and not (rocslope < -10) and not diffShort and not tts
    //  or ((eomslope[2] > -.1) and (eomslope[1] > -.1) and (eomslope > -.1)) and not (rocslope < -10)
    //  and ((eomslope[2] < .1) and (eomslope[1] < .1) and (eomslope < .1)) and not diffShort and not tts
    // short := false
//     diffFlat_short := true
//     // close_short := true
//     // close_long := true
// else
//     diffFlat_short := false
    // close_short := false
    // close_long := false

// if diffFlat_short
//      or (paflat[1] and paflat) 
//      or (lsmaflat[1] and lsmaflat)
//      or ((eomslope[2] > -1) and (eomslope[1] > -1) and (eomslope > -1)) 
//      and ((eomslope[2] < 1) and (eomslope[1] < 1) and (eomslope < 1))
//     short := false
// ////diffFlat  Plots
// plotshape((diffFlat ), style=shape.square, color=color.purple, location=location.bottom, size = size.small)
// plotshape((diffFlat ), style=shape.square, color=color.purple, location=location.top, size = size.small)

////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////
////0LAG EMA BY LAZYBEAR
////VARIABLES AND STOCK FORMULAS
zlength=input(7)
zsrc=close
ema1=ta.ema(zsrc, zlength)
ema2=ta.ema(ema1, zlength)
zd=ema1-ema2
zlema=ema1+zd
////PLOT ZLEMA
plot(zlema)
///***Turned off for publishing

////VARIABLES AND STOCK FORMULAS FOR SLOPE/RISE/FALL
var zlemarise = false
var zlemafall = false
var zlemaup = false
var zlemadown = false
zlemarise := ta.rising(zlema,1) 
zlemafall := ta.falling(zlema,1)
zlemaslope = ((zlema - zlema[1]) / (2-1))*10000
zlemaup := zlemarise and (roc > low) //(da[1] > da) //and ((zlemaslope > 1) and (zlemaslope < -1)) //and (ema50 > ema5) //and blue>orange?
zlemadown := zlemafall and (roc < high) //(da[1] < da) //and ((zlemaslope < 1) and (zlemaslope < -1)) //and (ema5 > ema50) //and orange>blue?
////PLOTS AND LABELS 
plotshape(zlemarise, style=shape.triangleup, color=color.new(color.green, 0), location=location.top, size= size.tiny)
// ///***Turned off for publishing
plotshape(zlemafall, style=shape.triangledown, color=color.new(color.red, 0), location=location.top, size= size.tiny)
// ///***Turned off for publishing
// label.new(bar_index, high, str.tostring(zlemaslope, format_ema5slope), style = label.style_none,
//  size=size.small, textcolor = color.blue)//turned off for publish...
///////////////////////////////////////////////////////////////////////////////////
////DISTANCE APART FROM 5/50 EMALINES
////VARIABLES ***to be moved
dadiffg = false ////da diff grow
dadiffs = false ////da diff shrink
////GROWING
if da[1] < da
    dadiffg := true
else 
    dadiffg := false
////SHRINKING
if da[1] > da
    dadiffs := true
else 
    dadiffs := false    
////PLOTS
plotshape(dadiffg, style=shape.triangleup, color=color.new(color.green, 0), location=location.bottom, size= size.tiny)
// ///***Turned off for publishing
plotshape(dadiffs, style=shape.triangledown, color=color.new(color.red, 0), location=location.bottom, size= size.tiny)
// ///***Turned off for publishing
/////////////////////////////////////////////////////////////////////////////////////////
////EXPERIMENTAL DISTANCE APART K AND GREEN KGDA_OK
var kgda_ok = false
if (k > green) and ((k-green) < 20) and not ((krise and greenfall) or (kfall and greenrise))
     or (green > k) and ((green-k) < 20) and not ((krise and greenfall) or (kfall and greenrise))
    kgda_ok := true
else
    kgda_ok := false
plotshape(kgda_ok, style=shape.circle, color=color.new(color.green,30), location=location.top, size=size.normal)
////***SEEMS TO BE A VERY RELEVANT MEASURE TO BE USED IN PRECONDITIONS FOR OPENS AND FLAT
//////////////////////////////////////////////////////////////////////\
////Experimental REDRISE/FALL AND ROC>< EOM
// redmoon_rise = false
// redmoon_fall = false

// if redrise and (roc > low) and not vol_xlow
//     redmoon_rise := true
// else 
//     redmoon_rise := false
// if redfall and (roc < high) and not vol_xlow
//     redmoon_fall := true
// else 
//     redmoon_fall := false

//////////////////////////////////////////////////
////experimental Blue Moon Rise/fall


if (lsmaslope > 2)
    blumoonrise := true
else
    blumoonrise := false
if (lsmaslope < -2)
    blumoonfall := true
else
    blumoonfall := false



plotshape(blumoonrise, style=shape.circle, color=color.new(color.green, 50), location=location.bottom, size= size.normal)
// ///***Turned off for publishing
plotshape(blumoonfall, style=shape.circle, color=color.new(color.red, 50), location=location.top, size= size.normal)
// ///***Turned off for publishing

/////////////////////////////////////////////////////////////////////////////////////////////////////
////VARIABLES ***to be moved
ok_long = false
ok_clong = false
ok_short = false
ok_cshort = false
////PRECHECK FOR OPENING POSITIONS
////OPEN LONG PRECONDITIONS - L1218
if dadiffg and ((green[1] > 25) and (green > 50)) and allrise and ((scaled_atr_roc > eom) or (roc > eom))
     and (k > 25) and (diff >= 0) and (tbs > tbs_open_long) and not vol_xlow
      and not tts and (kgda_ok or diffLong) and not blumoonfall and not ((lsma <75) and (lsma >25) and lsmaflat)
     or ((green[1] > 25) and (green > 50)) and ((scaled_atr_roc > eom) or (roc > eom)) and (diff >= 0)
      and greenrise and krise and (tbs > tbs_open_long) and not ((lsma <75) and (lsma >25) and lsmaflat)
       and (k > 25) and not vol_xlow and not tts and (kgda_ok or diffLong) and not blumoonfall  //and not diffFlat_long
    //  or dadiffs and (k > 60) and (green > 60) and allrise and ((scaled_atr_roc > eom) or (roc > eom)) and (diff >= 0) //and not diffFlat_long
    //  or ((k > 50) or (green > 50)) and diffLong and krise and greenrise and (roc > eom) and rocrise and ttl and (diff >= 0)  and not diffFlat_long
    //  or ((k > 50) or (green > 50)) and (roc > eom) and rocrise  and ((k[1] < 20) or (green[1] < 20))
    //  or (k[1] < 10) and kdip[1] and gdip[2] and rocdip[2] and diffLong and (ema5 > ema50) and zlemarise and dadiffg//???
    ok_long := true
else
    ok_long := false
////OPEN SHORT PRECONDITIONS - L1232
if  dadiffs and ((green[1] < 75) and (green < 50)) and allfall and ((scaled_atr_roc < eom) or (roc < eom)) 
      and (k > 75) and (diff < 0) and (tbs < tbs_open_short) and not vol_xlow 
       and not ttl and (kgda_ok or diffShort) and not blumoonrise and not ((lsma <75) and (lsma >25) and lsmaflat)
     or ((green[1] < 75) and (green < 50)) and ((scaled_atr_roc < eom) or (roc < eom)) and (diff < 0)
      and greenfall and kfall and (tbs < tbs_open_short) and not ((lsma <75) and (lsma >25) and lsmaflat)
       and (k > 75) and not vol_xlow and not ttl and (kgda_ok or diffShort) and not blumoonrise
    //  or ((k < 50) or (green < 50)) and diffShort and kfall and greenfall and (roc < eom) and rocfall and tts and (diff <= 0) and not diffFlat_short
    //  or ((k < 50) or (green < 50)) and (roc < eom) and rocfall and ((k[1] > 80) or (green[1] > 80))
    ok_short := true
else
    ok_short := false
// plotshape(ok_long, style=shape.triangleup, color=color.new(color.blue,50), location=location.bottom, size= size.small)
// plotshape(ok_short, style=shape.triangledown, color=color.new(color.blue,50), location=location.top, size= size.small)
/////////////////////////////////////////////////////////////////////////////////////////////////////
////PRECHECK FOR CLOSING POSITIONS
////CLOSE LONG PRECONDITIONS L1248
if (green < 50) and (diff < 0) and ((roc < low) or (scaled_atr_roc < eom)) and PAfall 
     and not ttl and not blumoonrise and (kgda_ok or diffLong) and (k < 75)
     or ((roc < low) or (scaled_atr_roc < eom)) and allfall and (green < 50) and not ttl and not blumoonrise
      and (kgda_ok or diffLong) and (k < 75)
     or ttl and (diff < 0) and PAfall and ((red[1] > 75) or (red > 75)) and (redfall or lsmafall) and not blumoonrise 
       and (kgda_ok or diffLong) and (k < 75)
     or ttl[1] and not ttl and (red[1] < 85) and (green[1] < 80) and (green < 60) and allfall and not blumoonrise
       and (kgda_ok or diffLong) and (k < 75)
     or ttl[2] and not ttl and (red[2] < 85) and (green < 50) and not blumoonrise
       and (kgda_ok or diffLong) and (k < 75)
    ok_clong := true
else
    ok_clong := false
////CLOSE SHORT PRECONDITIONS - L1259
if (green > 50) and (diff > 0) and ((roc > high) or (scaled_atr_roc > eom)) and PArise 
     and not tts and not blumoonfall and (kgda_ok or diffShort) and (k > 25)
     or ((roc > high) or (scaled_atr_roc > eom)) and allrise and (green > 50) and not tts and not blumoonfall
       and (kgda_ok or diffShort) and (k > 25)
     or tts and (diff > 0) and PArise and ((red[1] < 25) or (red < 25)) and (redrise or lsmarise) and not blumoonfall
      and (kgda_ok or diffShort) and (k > 25)
     or tts[1] and not tts and (red[1] > 15) and (green[1] > 20) and (green > 40) and allfall and not blumoonfall
      and (kgda_ok or diffShort) and (k > 25)
     or tts[2] and not tts and (red[2] > 15) and (green > 50) and not blumoonfall
      and (kgda_ok or diffShort) and (k > 25)
    ok_cshort := true
else
    ok_cshort := false
// plotshape(ok_clong, style=shape.circle, color=color.new(color.green,50), location=location.bottom, size= size.small)
// plotshape(ok_cshort, style=shape.circle, color=color.new(color.green,50), location=location.top, size= size.small)

////////////////////////////////////////////////////////////////////
var rocpeakclong = false
var rocdipcshort = false
////A SERIES OF CONDITIONS USED TO CLOSE LONG POSITIONS
////Close Long Conditions - L1276 ***needs to be reworked...
if rocpeak and gpeak and (green < 50) and (scaled_atr_roc < eom) and (redfall or lsmafall)
     and not (krise[1] or greenrise[1]) and not blumoonrise //**Condition rocpeakclong 1
     or rocpeak and ((gpeak or kpeak or PApeak or lsmapeak)) and (rpeak or lsmapeak) and not blumoonrise
      and ((green[1] >= 100) or (k[1] >= 99) or (PA[1] >= 100) or (lsma[1] > 100))
       and not (krise[1] or greenrise[1]) //**Condition rocpeakclong 2
     or allpeak and ((green[1] > 90) or (PA[1] > 90) or (k[1] > 90)) and not (krise[1] or greenrise[1])
      and not blumoonrise and (green < 50) //**Condition rocpeakclong 3
     or rocpeak[1] and ((gpeak[1] or kpeak[1] or PApeak[1])) and (rpeak or lsmapeak)
      and not ttl and not (krise[1] or greenrise[1]) and not blumoonrise
       and ((green[2] >= 100) or (k[2] >= 99) or (PA[2] >= 100)) and ((red[1] > 90) or (lsma[1] > 90))
       and not ttl and not (krise[1] or greenrise[1]) and (green < 50) //**Condition rocpeakclong 4
     or rocpeak[2] and ((gpeak[2] or kpeak[2] or PApeak[2])) and (rpeak[2] or lsmapeak[2])
      and not (krise[1] or greenrise[1]) and (green < 50)
       and ((green[2] >= 100) or (k[2] >= 99) or (PA[2] >= 100)) and ((red[1] > 90) or (lsma[1] >= 90)) 
       and not ttl and not (krise[1] or greenrise[1]) and not blumoonrise //**Condition rocpeakclong 5
     or rocpeak and gpeak and kpeak and (k[1] >= 99) and (green[1] >= 100) and kfall and greenfall
      and rocfall and not (krise[1] or greenrise[1]) and not blumoonrise and (green < 50)  //**Condition rocpeakclong 6
     or allpeak and ((green[1] > 90) or (PA[1] > 90) or (k[1] > 90)) and not (krise[1] or greenrise[1])
      and (green < 50) and not blumoonrise //**Condition rocpeakclong 7
    rocpeakclong := true
else
    rocpeakclong := false
////Close Short Conditions - L1294
if rocdip and gdip and (green > 50) and (scaled_atr_roc > eom) and not (redfall and lsmafall)
     and not (kfall[1] or greenfall[1]) and not blumoonfall //**Condition rocdipcshort 1
     or rocdip[1] and ((gdip[1] or kdip[1] or PAdip[1])) and (rdip or lsmadip) and not tts
      and not (kfall[1] or greenfall[1]) and ((green[2] <= 0) or (k[2] <= 1) or (PA[2] <= 0))
       and ((red[1] < 10) or (lsma[1] <= 10)) and not tts and not (kfall[1] or greenfall[1])
       and (green > 50) and not blumoonfall //**Condition rocdipcshort 2
     or rocdip[2] and ((gdip[2] or kdip[2] or PAdip[2])) and (rdip[2] or lsmadip[2]) and not (kfall[1] or greenfall[1])
     and ((green[2] <= 0) or (k[2] <= 1) or (PA[2] <= 0)) and ((red[1] < 10) or (lsma[1] <= 10))
      and not tts and not (kfall[1] or greenfall[1]) and (green > 50) and not blumoonfall  //**Condition rocdipcshort 3
     or rocdip and gdip and kdip and (k[1] <= 1) and (green[1] <= 0) and krise and greenrise and rocrise
      and not (kfall[1] or greenfall[1]) and (green > 50) and not blumoonfall  //**Condition rocdipcshort 4
     or alldip and ((green[1] < 10 or (PA[1] < 10) or k[1] < 10)) and not (kfall[1] or greenfall[1])
      and (green > 50) and not blumoonfall //**Condition rocdipcshort 5
    rocdipcshort := true
else
    rocdipcshort := false

//////////////////////////////////////////////////////////////////////////////////////////////////////
////BASIC LONG AND SHORT, OPEN AND CLOSE CONDITIONS
////LONG CONDITIONS - L1309
////from testlong conditions
if (zlemarise and dadiffg) and ok_long and ((tbs > tbs_open_long) or diffLong) and (diff > 0) //**Condition Long 17
     or zlemafall[1] and dadiffs[1] and tts[1] and (barstate.isconfirmed and zlemarise)
      and ok_long and ((tbs > tbs_open_long) or diffLong) and (diff > 0) //**Condition Long 18
     or tts[1] and not tts and (diff[1] > 0) and (diff > 0) and (k > 20) and ok_long
      and ((tbs > tbs_open_long) or diffLong) and (diff > 0) //**Condition Long 19
     or ((roc > eom) or (scaled_atr_roc > eom)) and (zlemarise and dadiffg) and krise
      and ((tbs > tbs_open_long) or diffLong) and (diff > 0) and ok_long //**Condition Long 20
     or (scaled_atr_roc>=eom) and not (roc < eom) and (green > 50) and ((tbs > tbs_open_long) or diffLong)
      and (diff > 0) and ok_long //**Condition Long 21
     or allrise and zlemarise and (green > 50) and ((tbs > tbs_open_long) or diffLong)
      and (diff > 0) and ok_long //**Condition Long 22
     or barstate.isconfirmed and tts[1] and not tts and greenrise and not (rocpeak or gpeak)
      and ((tbs > tbs_open_long) or diffLong) and (diff > 0) and ok_long //**Condition Long 23
     or barstate.isconfirmed and ttl and ((tbs > tbs_open_long) or diffLong) and (diff > 0) and ok_long //**Condition Long 24
     or tts[1] and not tts and greenrise[1] and greenrise and ((tbs > tbs_open_long) or diffLong)
      and (diff > 0) and ok_long //**Condition Long 25
     or (diff > 0) and dadiffg and zlemarise and ok_long and not diffFlat_long and ((tbs > tbs_open_long) or diffLong)
      and (diff > 0) //**Condition Long 26
     or (diff > 0) and krise and greenrise and rocrise and ttl and ok_long and not diffFlat_long
      and ((tbs > tbs_open_long) or diffLong) and (diff > 0) //**Condition Long 27
     or (diff > 0) and krise and greenrise and rocrise and (roc > eom) and diffLong and ok_long
      and not diffFlat_long and ((tbs > tbs_open_long) or diffLong) and (diff > 0) //**Condition Long 28
     or rocpeak and kpeak and diffLong and ok_long and not diffFlat_long and ((tbs > tbs_open_long) or diffLong)
      and (diff > 0) //**Condition Long 29
     or rocpeak and gpeak and diffLong and ok_long and not diffFlat_long and ((tbs > tbs_open_long) or diffLong)
      and (diff > 0) //**Condition Long 30
     or gpeak and kpeak and diffLong and ok_long and not diffFlat_long and ((tbs > tbs_open_long) or diffLong)
      and (diff > 0) //**Condition Long 31
     or diffLong and ttl[3] and kdip and zlemarise and not diffFlat_long and ok_long
      and ((tbs > tbs_open_long) or diffLong) and (diff > 0) //**Condition Long 32 ////double peak protection
     or tts[4] and kdip and zlemarise and diffLong and not diffFlat_long and ok_long
      and ((tbs > tbs_open_long) or diffLong) and (diff > 0) //**Condition Long 33 ////double peak protection
     or tts[4] and kdip[1] and zlemarise and diffLong and not diffFlat_long and ok_long
      and ((tbs > tbs_open_long) or diffLong) and (diff > 0) //**Condition Long 34 ////double peak protection
     or tts[3] and kdip and zlemarise and diffLong and not diffFlat_long and ok_long
      and ((tbs > tbs_open_long) or diffLong) and (diff > 0) //**Condition Long 35 ////double peak protection
     or tts[2] and kdip and zlemarise and diffLong and not diffFlat_long and ok_long
      and ((tbs > tbs_open_long) or diffLong) and (diff > 0) //**Condition Long 36 ////double peak protection
     or tts[1] and kdip and zlemarise and diffLong and not diffFlat_long and ok_long
      and ((tbs > tbs_open_long) or diffLong) and (diff > 0) //**Condition Long 37 ////double peak protection
     or tts[1] and not tts and diffLong and zlemarise and dadiffg
      and (green > 50) and allrise and redrise and lsmarise and ok_long //**Condition Long 38
     or tts[2] and not tts and diffLong and zlemarise and dadiffg
      and (green > 50) and allrise and redrise and lsmarise and ok_long //**Condition Long 39
     or ttl[1] and not ttl and alldip and (redrise or lsmarise) and (green > 60) and ok_long  //**Condition Long 40
     or ttl[2] and not ttl and alldip and (redrise or lsmarise) and (green[1] > 75) and (green > 50) and ok_long  //**Condition Long 41
     or ttl[3] and not ttl and alldip and (redrise or lsmarise) and (green[2] > 75) and (green > 50) and ok_long  //**Condition Long 42
     or diffLong and krise and greenrise and rocrise and dadiffg and zlemarise and ok_long
      and not diffFlat_long and ((tbs > tbs_open_long) or diffLong) and (diff > 0) //**Condition Long 43
     or diffLong and (roc > eom) and zlemarise and ok_long and not diffFlat_long
      and ((tbs > tbs_open_long) or diffLong) and (diff > 0) //**Condition Long 44
     or diffLong and kdip and gdip and rocdip and (ema5 > ema50) and zlemarise and dadiffg
      and ok_long and not diffFlat_long and ((tbs > tbs_open_long) or diffLong) and (diff > 0) //**Condition Long 45
     or diffLong and kdip and gdip[1] and rocdip[1] and (ema5 > ema50) and zlemarise and dadiffg
      and ok_long and not diffFlat_long and ((tbs > tbs_open_long) or diffLong) and (diff > 0) //**Condition Long 46
     or diffLong and kdip[1] and rocdip[1] and (ema5 > ema50) and zlemarise and dadiffg
      and ok_long and not diffFlat_long and ((tbs > tbs_open_long) or diffLong) and (diff > 0) //**Condition Long 47
     or (roc > eom) and diffLong and (zlemarise or dadiffg) and ok_long and not diffFlat_long
      and ((tbs > tbs_open_long) or diffLong) and (diff > 0) //**Condition Long 48
     or (roc > eom) and diffLong and tts[1] and not tts and ok_long
      and ((tbs > tbs_open_long) or diffLong) and (diff > 0) //**Condition Long 49
     or (roc > eom) and tts[1] and not tts and zlemarise and dadiffg and ok_long
      and ((tbs > tbs_open_long) or diffLong) and (diff > 0) //**Condition Long 50
     or ((roc > eom) or (scaled_atr_roc > eom)) and ttl and not diffFlat_long and ok_long
      and ((tbs > tbs_open_long) or diffLong) and (diff > 0) //**Condition Long 51
     or zlemarise and dadiffg and kdip and gdip and rocdip and ((k[1] < 10) or (green[1] < 10))
      and not diffFlat_long and ok_long and ((tbs > tbs_open_long) or diffLong) and (diff > 0) //**Condition Long 52
     or zlemarise and dadiffg and allrise and (diff > 0) and ok_long
     and (((k>50) and (green>50)) or ((k>50) and (PA>50)) or ((green>50) and (PA>50)))
      and (diff > 0) and ((tbs > tbs_open_long) or diffLong) and (diff > 0) //**Condition Long 53
     or long[1] and ttl and ok_long  //**Condition Long 54
     or rocdip[1] and gdip[1] and (green[2] < 0) and rdip and lsmadip
      and ((red[1] < 10) or (lsma[1] < 10)) and diffLong and (greenrise or redrise) and ok_long //**Condition Long 55
     or rocdipcshort and diffLong and not tts and ok_long //**Condition Long 56
     or rocdipcshort and diffLong and (tbs[1] < -3) and ok_long  //**Condition Long 57
     or ok_long and allrise and redrise and lsmarise //**Condition Long 58 
     or diffLong and allrise and alldip and rdip and (green > 60) and (roc > high) and ok_long   //**Condition Long 59
     or diffLong and allrise and alldip and (green > 60) and (k > 60) and (roc > high and ok_long)  //**Condition Long 60 
     or ttl and not closelong and not (diff <= 0) and kgda_ok and not vol_xlow //**Condition Long 61 
     or blumoonrise and (roc > high) and not vol_xlow and (diff > 0) and (green > 50) and kgda_ok and allrise //**Condition Long 62 
     or (lsma[3] < 0) and blumoonrise[2] and blumoonrise[1] and blumoonrise and (atr6[1] > atr6)
      and (roc[2] > eom[2]) and (roc[1] > low[1]) and (roc > low) and redrise and not vol_xlow //**Condition Long 63 
     or blumoonrise[2] and blumoonrise[1] and blumoonrise and ttl and (roc[2] > eom[2]) and (roc[1] > high[1]) and (roc > high)
      and redrise and kgda_ok and (green > 50) and (diff > .05) and not vol_xlow //**Condition Long 64 

    long := true
    cshort1 := true
    short := false
else 
    long := false
    cshort1 := false
////Close Long Conditions - L1402
if rocpeakclong and (scaled_atr_roc < low) and ok_clong and not ttl //**Condition clong 65
     or rocpeakclong[1] and (scaled_atr_roc < low) and ok_clong and not ttl and not rocdip //**Condition clong 66
     or rocpeakclong[2] and ((roc < low) or (scaled_atr_roc < low)) and ok_clong and not ttl
      and not rocdip[1] and not rocdip //**Condition clong 67
     or rocpeakclong and ttl[1] and not ttl and kgda_ok//**Condition clong 68 ////***may need to build some confirmation into this conditions***
     or not diffLong and ttl[1] and not ttl and allfall and (scaled_atr_roc < low) and ok_clong
      and redfall and (green[1] < 80) and (green < 60) and kgda_ok //**Condition clong 69

     or ttl[1] and not ttl and diffShort and allfall and redfall and (green[1] < 80) and (green < 60) and kgda_ok //**Condition clong 70
     or ttl[1] and not ttl and zlemafall and dadiffs and (scaled_atr_roc < low) and ok_clong
      and redfall and (green[1] < 80) and (green < 60) and greenfall and kfall and kgda_ok //**Condition clong 71
     or ttl[1] and not ttl and zlemarise[1] and zlemafall and rocpeak and kpeak and gpeak
      and ((k[1] >= 95) or (green[1] >= 95)) and (green[1] < 80) and (green < 60) and kfall
       and greenfall and redfall and lsmafall and kgda_ok //**Condition clong 72
     or ttl[1] and not ttl and zlemarise[1] and zlemafall and diffShort and (k[1] >= 95) and kgda_ok
      and (green[1] >= 95) and (k <= 90) and (green <= 60) and kfall and greenfall and PAfall and (roc < low) //**Condition clong 73
     or ttl[1] and not ttl and (green <= 60) and allfall and redfall 
      and ((red[1] >= 80) or (lsma[1] >= 80)) and ok_clong and kgda_ok  //**Condition clong 74
     or ttl[2] and not ttl[1] and not ttl and zlemafall and dadiffs and diffShort and ok_clong and redfall
      and (green < 50) and greenfall and kfall //**Condition clong 75
     or ttl[2] and not ttl[1] and not ttl and zlemafall and dadiffs and ok_clong  and redfall
      and (green < 50) and greenfall and kfall //**Condition clong 76
     or (ttl[1] or ttl[2] or ttl[3]) and not ttl and allfall and kgda_ok
      and (rpeak or rpeak[1]) and lsmapeak and (roc < low) and ok_clong //**Condition failsafe clong 77 
     or ttl[2] and not ttl[1] and not ttl and (green < 50) and (roc[1] < low) and (roc < low)
      and (rpeak or lsmapeak or rpeak[1] or lsmapeak[1]) and ok_clong //**Condition failsafe clong 78
     or ttl[1] and not ttl and (rpeak[1] or rpeak or lsmapeak[1] or lsmapeak) and kgda_ok
      and allfall and (green[1] < 80) and (green < 60) and (roc < eom) and (allpeak[1] or allpeak)
       and ok_clong //**Condition failsafe clong 79
     or ttl[2] and not ttl[1] and not ttl and (rpeak[1] or rpeak or lsmapeak[1] or lsmapeak) and allfall
      and (green[1] < 80) and (green < 60) and (roc < eom)
       and (allpeak[1] or allpeak) and ok_clong //**Condition failsafe clong 79a
     or ttl[1] and not ttl and (rpeak or lsmapeak) and (red[1] > 95) and (lsma[1] > 95)
      and allfall and ok_clong and kgda_ok //**Condition failsafe clong 80 ///***update alert
     or ttl[2] and not ttl[1] and not ttl and (rpeak or lsmapeak) and (red[1] > 95) and (lsma[1] > 95)
      and allfall and ok_clong //**Condition failsafe clong 80a

     or (pump[2] or shootingStar[2]) and (roc < low) and PAfall and ((green < 50) or (k < 50)) 
     and (barstate.isconfirmed and (diffShort or (diff[1] < 0) and (diff < 0))) //**Condition clong 81
     or (pump[1] or shootingStar[1]) and (roc < low) and PAfall and ((diff * -1) + u_wick > (diff[1]*.5))
      and ok_clong //**Condition clong 82
     or (pump[1] or shootingStar[1]) and (ttl or ttl[1]) and (diff < 0) and (k[1]>95) and (green[1]>95)
     and rocfall and (kfall or greenfall) and diffShort and ok_clong  //**Condition clong 83

     or vol_xlow and (tts[4] or tts[3]) and not tts and allfall and redfall and lsmafall
      and ((red[4] > 75) or (red[3] > 75)) and (green < 50) and (roc < eom) and ok_clong  //**Condition clong 84
     or ttl[3] and not ttl and (vol_xlow or vol_low) and (green < 50) and (roc < low) and diffShort and ok_clong //***Condition clong 85
     or vol_xlow and ttl[1] and not ttl and (rpeak[1] or rpeak) and allfall and (green <= 60)
      and (roc < low) and (diff < 0) and ok_clong  //**Condition clong 86
     or vol_xlow and ttl[1] and not ttl and allpeak and ((green[1] > 95) or (k[1] > 95))
      and rpeak and (red[1] > 80) and (green < 80) and ok_clong   //**Condition clong 87
     or vol_xlow and allpeak and allfall and ((green[1] >= 90) or (k[1] >= 90)) 
      and (diff < 0) and (roc < low) and (green < 75) and (rpeak or lsmapeak) and ok_clong  //**Condition clong 88 
     or allpeak and allfall and greenfall[1] and (green < 50) and (diff < 0) and (roc < eom) and ok_clong and kgda_ok //**Condition clong 88b
     or zlemafall and dadiffs and diffShort and ok_clong and redfall and (green < 80)
      and (k < 80) and greenfall and kfall //**Condition clong 89
     or gpeak[1] and kpeak and (roc < low) and rocfall and greenfall and kfall
      and (k[1] > 80) and ((green < 50) or (k < 50)) and ok_clong //**Condition clong 90
     or rocpeak and kpeak and gpeak and ((k[1] >90) or (green[1] > 90)) and (roc < low)
      and allfall and ((green < 60) or (k < 60)) and not rocrise and ok_clong //**Condition clong 91
     or (green < 25) and (k < 25) and allfall and kgda_ok and ok_clong //**Condition failsafe clong 92
     or ttl[1] and not ttl and diffShort and r_bpeak and ((red[2] > 95) or (red[1] > 95) or (lsma[2] > 95) or (lsma[1] > 95))
      and (green[1] < 80) and (green < 60) and allfall and (roc < low) and kgda_ok //**Condition clong 93
     or ttl[2] and not ttl and diffShort and r_bpeak and ((red[2] > 95) or (red[1] > 95) or (lsma[2] > 95) or (lsma[1] > 95)) 
       and (green[1] < 80) and (green < 60) and allfall and (roc < low) //**Condition clong 93

     or ttl[1] and not ttl and r_bpeak and ((red[1] > 95) or (lsma[1] > 95)) 
       and (green < 80) and allfall and (roc < low) and kgda_ok and not blumoonrise //**Condition clong 94
     or ttl[1] and not ttl and ((green[1] > 95) or (k[1] > 95) or (green[2] > 95) or (k[2] > 95))
      and allpeak and allfall and (rpeak or rpeak[1] or lsmapeak or lsmapeak[1]) and (diffShort or diffShort[1]) and kgda_ok
     or ttl[2] and not ttl[1] and not ttl and ((green[1] > 95) or (k[1] > 95) or (green[2] > 95) or (k[2] > 95))
      and allpeak and allfall and (rpeak or rpeak[1] or lsmapeak or lsmapeak[1]) and (diffShort or diffShort[1])
       and ((red[1]>85) or (lsma[1]>85) or (red[2]>85) or (lsma[2]>85)) and (green < 80) //**Condition cshort 94a
     or ((green[1] > 90) or (k[1] > 90) or (green[2] > 90) or (k[2] > 90))
      and allpeak and (rpeak or lsmapeak) and ((red[1]>85) or (lsma[1]>85) or (red[2]>85) or (lsma[2]>85)) 
       and diffShort and (roc > eom) and kgda_ok and (green < 80) //**Condition cshort 94b

    clong := true
else
    clong := false
////OPEN SHORT CONDITIONS - L1459
if  zlemarise[1] and dadiffg[1] and ttl[1] and (barstate.isconfirmed and zlemafall)
     and not (alldip and (green < 10) and (k < 10)) and ok_short and ((tbs < tbs_open_short) or diffShort) and (diff < 0) //**Condition short 95 //// tts based short to long reversal
     or ttl[1] and not ttl and (diff[1] < 0) and (diff < 0) and (k < 80) and not (alldip and (green < 10) and (k < 10))
      and ok_short and ((tbs < tbs_open_short) or diffShort) and (diff < 0) //**Condition short 96 //// double diff based short to long reversal
     or allfall and zlemafall and (green < 50) and ((tbs < tbs_open_short) or diffShort)
      and (diff < 0) and ok_short //**Condition short 97
     or barstate.isconfirmed and ttl[1] and not ttl and greenfall and not (rocdip or gdip)
      and ((tbs < tbs_open_short) or diffShort) and (diff < 0) and ok_short //**Condition short 98
     or barstate.isconfirmed and tts and ((tbs < tbs_open_short) or diffShort) and (diff < 0) and ok_short //**Condition short 99
     or ttl[1] and not ttl and greenfall[1] and greenfall and ((tbs < tbs_open_short) or diffShort)
      and (diff < 0) and ok_short //**Condition short 100  //// this may need to be a close condition?
     or (diff < 0) and kfall and greenfall and rocfall and tts and ok_short
      and not diffFlat_short and ((tbs < tbs_open_short) or diffShort) and (diff < 0) //**Condition short 101
     or (diff < 0) and kfall and greenfall and rocfall and (roc < eom)
      and diffShort and ok_short and not diffFlat_short and ((tbs < tbs_open_short) or diffShort) and (diff < 0) //**Condition short 102
     or rocdip and kdip and diffShort and ok_short and not diffFlat_short
      and ((tbs < tbs_open_short) or diffShort) and (diff < 0) //**Condition short 103
     or rocdip and gdip and diffShort and ok_short and not diffFlat_short
      and ((tbs < tbs_open_short) or diffShort) and (diff < 0) //**Condition short 104
     or  gdip and kdip and diffShort and ok_short and not diffFlat_short
      and ((tbs < tbs_open_short) or diffShort) and (diff < 0) //**Condition short 105
     or diffShort and tts[3] and kpeak and zlemafall and ((tbs < tbs_open_short) or diffShort)
      and (diff < 0) and ok_short //**Condition short 106 ////double peak protection
     or ttl[4] and kpeak and zlemafall and diffShort and ((tbs < tbs_open_short) or diffShort)
      and (diff < 0) and ok_short //**Condition short 107 ////double peak protection
     or ttl[4] and kpeak[1] and zlemafall and ((tbs < tbs_open_short) or diffShort)
      and (diff < 0) and ok_short //**Condition short 108 ////double peak protection
     or ttl[3] and kpeak and zlemafall and ((tbs < tbs_open_short) or diffShort)
      and (diff < 0) and ok_short //**Condition short 109 ////double peak protection
     or ttl[2] and kpeak and zlemafall and ((tbs < tbs_open_short) or diffShort)
      and (diff < 0) and ok_short //**Condition short 110 ////double peak protection
     or ttl[1] and kpeak and zlemafall and ((tbs < tbs_open_short) or diffShort)
      and (diff < 0) and ok_short //**Condition short 111 ////double peak protection
     or ttl[1] and not ttl and diffLong and zlemafall and dadiffs and ((green < 50) or (k < 50))
      and allfall and redfall and lsmafall and not vol_xlow and kgda_ok //**Condition short 112
     or ttl[2] and not ttl[1] and not ttl and diffLong and zlemafall and dadiffs and ((green < 50) or (k < 50))
      and allfall and redfall and lsmafall and not vol_xlow  //**Condition short 113
     or diffShort and kfall and greenfall and rocfall and dadiffs and zlemafall and ok_short
      and not diffFlat_short and ((tbs < tbs_open_short) or diffShort) and (diff < 0) //**Condition short 114
     or diffShort and kpeak and gpeak and rocpeak and (ema50 > ema5) and zlemafall and dadiffs
      and ok_short and not diffFlat_short and ((tbs < tbs_open_short) or diffShort) and (diff < 0) //**Condition short 115
     or diffShort and kpeak and gpeak[1] and rocpeak[1] and (ema50 > ema5) and zlemafall and dadiffs
      and ok_short and not diffFlat_short and ((tbs < tbs_open_short) or diffShort) and (diff < 0) //**Condition short 116
     or diffShort and kpeak[1] and rocpeak[1] and (ema50 > ema5) and zlemafall and dadiffs
      and ok_short and not diffFlat_short and ((tbs < tbs_open_short) or diffShort) and (diff < 0) //**Condition short 117
     or (roc < eom) and diffShort and (ema50 > ema5) and (zlemafall or dadiffs)
      and ok_short and not diffFlat_short and ((tbs < tbs_open_short) or diffShort) and (diff < 0) //**Condition short 118
     or (roc < eom) and diffShort and ttl[1] and not ttl and ok_short
      and ((tbs < tbs_open_short) or diffShort) and (diff < 0) //**Condition short 119
     or (roc < eom) and ttl[1] and not ttl and zlemafall and dadiffs and ok_short
      and ((tbs < tbs_open_short) or diffShort) and (diff < 0) //**Condition short 120
     or ttl[1] and not ttl and allfall and (kslope < -15) and (diff < 0)
      and ((tbs < tbs_open_short) or diffShort) and (diff < 0) and kgda_ok and ok_short//**Condition short 121
     or ((roc < eom) or (scaled_atr_roc < eom)) and tts and not diffFlat_short
      and ok_short and ((tbs < tbs_open_short) or diffShort) and (diff < 0) //**Condition short 122
     or zlemafall and dadiffs and kpeak and gpeak and rocpeak
      and ((k[1] > 90) or (green[1] > 90)) and not diffFlat_short and ok_short
       and ((tbs < tbs_open_short) or diffShort) and (diff < 0) //**Condition short 123 
     or rocpeak[1] and gpeak[1] and (green[2] > 100) and rpeak and lsmapeak
      and ((red[1] > 90) or (lsma[1] > 90)) and diffShort and (greenfall or redfall) and ok_short  //**Condition short 124
     or allfall and redfall and lsmafall and ok_short //**Condition short 125 ////*** doesn't work here but works on rev... something closing in cshort...
     or diffShort and allfall and allpeak and (green < 40) and (roc < low) and rpeak and ok_short  //**Condition short 126
     or diffShort and allfall and allpeak and (green < 40) and (k < 40) and (roc < low) and ok_short  //**Condition short 127
     or tts and not closeshort and not (diff >= 0) and kgda_ok and not vol_xlow  //**Condition short 128
     or blumoonfall and (roc < low) and not vol_xlow and (diff < 0) and kgda_ok //**Condition short 129
     or (lsma[3] > 100) and blumoonfall[2] and blumoonfall[1] and blumoonfall and (atr6[1] < atr6) and kgda_ok
      and (roc[2] < eom[2]) and (roc[1] < low[1]) and (roc < low) and redfall and not vol_xlow  //**Condition short 130
     or blumoonfall[2] and blumoonfall[1] and blumoonfall and tts and (roc[2] < eom[2]) and (roc[1] < low[1]) and (roc < low)
      and redfall and kgda_ok and (green < 50) and (diff < -.05) and not vol_xlow  //**Condition short 131
    short := true
    long2 := false
    clong1 := true
else
    short := false
    clong1 := false
////Close Short Positionsd - L1539
if rocdipcshort and (scaled_atr_roc > high) and ok_cshort and not tts and (roc > high) //**Condition cshort 132
     or rocdipcshort[1] and (scaled_atr_roc > high) and ok_cshort and not tts
      and not rocpeak and (roc > high) //**Condition cshort 133
     or rocdipcshort[2] and ((roc > high) or (scaled_atr_roc > high)) and ok_cshort and not tts and not rocpeak
      and not rocpeak[1] and (roc > high) //**Condition cshort 134
     or rocdipcshort and tts[1] and not tts and (roc > high) //**Condition cshort 135 ////***may need to build some confirmation into this conditions***

     or ((roc > high) or (scaled_atr_roc > high)) and ok_cshort and not tts
      and not (redfall or lsmafall) and allrise and (green > 50)//**Condition cshort 136
     or not diffShort and ttl[1] and not ttl and allrise and (scaled_atr_roc > high) and ok_cshort and redrise
      and (green > 20) and (k > 20) and (roc > high) //**Condition cshort 137

     or tts[1] and not tts and diffLong and allrise and (green[1] > 20) and (green > 40)
      and (roc > high) and kgda_ok //**Condition cshort 138
     or tts[1] and not tts and zlemarise and dadiffg and (scaled_atr_roc > high) and ok_cshort
      and (green[1] > 20) and (green > 40) and greenrise and krise and (roc > high) //**Condition cshort 139
     or tts[1] and not tts and zlemafall[1] and zlemarise and (k[1] <= 5) and (green[1] <= 5)
      and (green[1] > 20) and (green > 40) and krise and greenrise and PArise and (roc > high) //**Condition cshort 140
     or tts[1] and not tts and (rdip[1] or rdip or lsmadip[1] or lsmadip)
      and allrise and ok_cshort and (roc > eom) and (alldip[1] or alldip) and kgda_ok //**Condition failsafe cshort 141 
     or tts[2] and not tts[1] and not tts and (rdip[1] or rdip or lsmadip[1] or lsmadip)
      and allrise and ok_cshort and (roc > eom) and (alldip[1] or alldip) and kgda_ok //**Condition failsafe cshort 141 

     or tts[1] and not tts and (rdip or lsmadip) and (red[1] < 5) and (lsma[1] < 5)
      and allrise and (k > 25) and not blumoonfall and kgda_ok //**Condition failsafe cshort 142
     or tts[2] and not tts[1] and not tts and (rdip or lsmadip) and (red[1] < 5) and (lsma[1] < 5)
      and allrise and (k > 25) and not blumoonfall and kgda_ok //**Condition failsafe cshort 142

     or tts[2] and not tts[1]and not tts and zlemarise and dadiffg and diffLong
      and ok_cshort and greenrise and krise and (roc > high) //**Condition cshort 143

     or tts[2] and not tts[1] and not tts and zlemarise and dadiffg and ok_cshort
      and ok_cshort and greenrise and krise and (roc > high) //**Condition cshort 144

     or tts[2] and not tts[1] and not tts and (green > 50) and (roc[1] > high) and (roc > high) and (rdip or lsmadip or rdip[1] or lsmadip[1])
      and redrise and lsmarise and ok_cshort  //**Condition failsafe cshort 145//

     or (tts[1] or tts[2] or tts[3]) and not tts and allrise
      and (rdip or rdip[1]) and lsmadip and (green >= 50) and (roc > high) and ok_cshort //**Condition failsafe cshort 146

     or zlemarise and dadiffg and diffLong and ok_cshort and (green[1] > 25) and (green > 50)
      and greenrise and krise and (roc > high) //**Condition cshort 147
     or tts[1] and not tts and zlemafall[1] and zlemarise and alldip
      and ((k[1] <= 5) or (green[1] <= 5)) and (green[1] > 20) and (green > 40) and allrise
       and redrise and lsmarise and (roc > high) and not blumoonfall //**Condition cshort 148
     or gdip[1] and kdip and (roc > high) and rocrise and greenrise and krise
      and (k[1] < 20) and (green > 50) and (roc > high) and kgda_ok and not blumoonfall //**Condition cshort 149
     or (rdip or lsmadip) and ((red < 20) or (lsma < 20)) and zlemafall[1] and zlemarise and allrise
      and (roc > high) and not rocfall and ok_cshort and (green > 50)  //**Condition cshort 150

     or (dump[2] or dump[1] or fallingKnife[2] or fallingKnife[1]) and (diff > open_long)
      and (roc > high) and ok_cshort and allrise //**Condition cshort 151
     or (dump[3] or dump[2] or dump[1] or fallingKnife[3] or fallingKnife[2] or fallingKnife[1])
      and (diff > open[3]) and (roc > high) and ok_cshort and allrise //**Condition cshort 152
     or (dump[2] or dump[1]) and gdip and rocrise and greenrise and (diff[1] > 0.05) and (diff > 0.05) 
      and (diff > diff[1]) and (green > green[1]) and kgda_ok and zlemarise //**Condition failsafe cshort 153 //***need alert

////for the vol_xlow conditions, need not bmfall/ok_cshort except in tts[1] and not
     or vol_xlow and (ttl[4] or ttl[3]) and not ttl and allrise and redrise and lsmarise
      and ((red[4] < 25) or (red[3] < 25)) and (green > 50) and (roc > eom) and ok_cshort //**Condition 154 //close for xlow vol scenarios
     or tts[3] and not tts and (vol_xlow or vol_low) and  (green > 50) and (roc > high) and diffLong
      and not blumoonfall  //***Condition 155
     or vol_xlow and tts[1] and not tts and (rdip[1] or rdip) and allrise and (green[1] > 20) and (green > 40)
      and (roc > high) and (diff > 0) //**Condition cshort 156 //no red ok... 
     or vol_xlow and tts[1] and not tts and alldip and ((green[1] < 5) or (k[1] < 5))
      and rdip and (red[1] < 20) and (green[1] > 20) and (green > 40)   //**Condition cshort 157
     or vol_xlow and alldip and allrise and ((green[1] <= 10) or (k[1] <= 10)) 
      and (diff > 0) and (roc > high) and (green > 50) and (rdip or lsmadip) and not blumoonfall
       and (kgda_ok or diffShort) and (k > 25) //**Condition cshort 158

     or (green > 75) and (k > 75) and allrise and kgda_ok and not blumoonfall and not vol_xlow //**Condition cshort 159 failsafe
     or (diff[3] >= 0) and (diff[2] >= 0) and (diff[1] >= 0) and (diff > 0)
      and (roc > high) and rdip and lsmadip and ok_cshort //**Condition cshort 160
     or alldip and allrise and greenrise[1] and greenrise and (green <= 50) and (diff > 0) and (roc > eom) and ok_cshort //**Condition cshort 160b
     or (tts[2] or tts[1]) and not tts and diffLong
      and r_bdip and ((red[2] < 5) or (red[1] > 5) or (lsma[2] > 5) or (lsma[1] > 5)) 
       and (green[1] > 20) and (green > 40) and allrise and (roc > high) and kgda_ok //**Condition cshort 161
     or tts[1] and not tts and r_bdip and ((red[1] > 5) or (lsma[1] > 5)) 
       and (green > 20) and allrise and (roc > high) and kgda_ok and not blumoonfall //**Condition cshort 162
     or tts[1] and not tts and ((green[1] < 5) or (k[1] < 5) or (green[2] < 5) or (k[2] < 5))
      and alldip and allrise and (rdip or rdip[1] or lsmadip or lsmadip[1]) and (diffLong or diffLong[1]) and kgda_ok
       and ((red[1]<15) or (lsma[1]<15) or (red[2]<15) or (lsma[2]<15)) and (green > 20) //**Condition cshort 162a
     or tts[2] and not tts[1] and not tts and ((green[1] < 5) or (k[1] < 5) or (green[2] < 5) or (k[2] < 5))
      and alldip and allrise and (rdip or rdip[1] or lsmadip or lsmadip[1]) and (diffLong or diffLong[1]) and kgda_ok
       and ((red[1]<15) or (lsma[1]<15) or (red[2]<15) or (lsma[2]<15)) and (green > 20) //**Condition cshort 162c

     or ((green[1] < 10) or (k[1] < 10) or (green[2] < 10) or (k[2] < 10))
      and alldip and (rdip or lsmadip) and ((red[1]<15) or (lsma[1]<15) or (red[2]<15) or (lsma[2]<15)) 
       and diffLong and (roc > eom) and kgda_ok //**Condition cshort 162b
    cshort := true
else
    cshort := false

////OPEN PRICE CALCULATION VARIABLES
var float DTSL_Long = na
var float DTSL_Short = na
clongTSL = false
cshortTSL = false

//////////////////////////////////////////////////////////////////////////////////////////
////TRAILING STOP LOSS USING OPEN PRICE TRACKING
////ESTABLISH LONG OPEN PRICE - L1601
if not long[1] and long and (diff > 0)//and not cshort
     or not short and (diff > 0)
    DTSL_Long := (open * Trl_Stop_Long)
else if clong or short
    DTSL_Long := na

////PLOT LONG OPEN PRICE
// Ltransparency = na(DTSL_Long) ? 0 : 0
plot(DTSL_Long, title="Last Long Open", color=color.new(//33f321, 0), linewidth=2)
////CLOSE LONG IF LONG OPEN PRICE IS EXCEEDED
if (diff < 0) and (low < DTSL_Long) and not ttl //**Condition clongTSL 163 // and long //(barstate.isconfirmed and 
 //and long and (diff < 0)
    //  or short
    clongTSL := true
    // clong := true
else
    clongTSL := false
    // clong := false

////ESTABLISH SHORT OPEN PRICE - L1621
if not short[1] and short and (diff < 0)// and not cshort
     or not long and (diff < 0)
    DTSL_Short := (open * Trl_Stop_Short)
else if cshort or long
    DTSL_Short := na

////PLOT SHORT OPEN PRICE
// plot(DTSL_Short, title="Last Long Open", color=color.red, linewidth=3)
Stransparency = na(DTSL_Short) ? 50 : 0
plot(DTSL_Short, title="Last Short Open", color=color.new(color.rgb(255, 0, 0), Stransparency), linewidth=2)
////CLOSE SHORT OF SHORT OPEN PRICE IS EXCEEDED
if (diff > 0) and (high > DTSL_Short) and not tts //**Condition cshortTSL 164 // and short //(barstate.isconfirmed and  * 1.0025)))
    cshortTSL := true
    // cshort := true
else //if long //??? R2115, when else if long, the long plot never stops when short whereas short plot does end at long???
    cshortTSL := false
    // cshort := false

///////////////////////////////////////////////////////////////////////////////////////
//// REVERSE POSITIONS PRECONDITIONS AND CONDITIONS
var revL2Short = false
var revS2Long = false
//// REVERSE POSITIONS PRECONDITIONS
var r_ok_S2Long = false
var r_ok_L2Short = false
//// REVERSE POSITIONS PRECONDITIONS SHORT TO LONG - L1646
if ((red[1] <= 15) or (red <= 15))  and (tbs > tbs_open_long) and ((green[1] > 20) and (green > 40)) and greenrise
      and not ((lsma <75) and (lsma >25) and lsmaflat) and not vol_xlow and not (tts and blumoonfall)
    //  or (red <= 15) and not vol_xlow and ((green[1] > 20) and (green > 40)) and greenrise and not blumoonfall
    //   and not ((lsma <75) and (lsma >25) and lsmaflat)
    // //  or (red >= 50) and (red <= 85) and not vol_xlow and ((green[1] > 20) and (green > 40)) and greenrise and not blumoonfall
    //   and not ((lsma <75) and (lsma >25) and lsmaflat) //doesn't make sense...
    r_ok_S2Long := true
else
    r_ok_S2Long := false
//// REVERSE POSITIONS PRECONDITIONS LONG TO SHORT - L1653
if ((red[1] > 85) or (red > 85)) and (tbs < tbs_open_short) and ((green[1] < 80) and (green < 60)) and greenfall
     and not ((lsma <75) and (lsma >25) and lsmaflat) and not vol_xlow and not (ttl and blumoonrise)
    //  or (red > 85) and not vol_xlow and ((green[1] < 80) and (green < 60)) and greenfall and not blumoonrise
    //   and not ((lsma <75) and (lsma >25) and lsmaflat)
    ////  or (red > 50) and (red < 85) and not vol_xlow and ((green[1] < 80) and (green < 60)) and greenfall and not blumoonrise
    // //  and not ((lsma <75) and (lsma >25) and lsmaflat) //doesn't make sense...
    r_ok_L2Short := true
else
    r_ok_L2Short := false

////REVERSAL LONG 2 SHORT CONDITIONS
if ttl[1] and not ttl and rpeak and (red[1] > 85) and allfall and not rocrise
     and (diff >= open_long) and r_ok_L2Short //**Condition revL2Short 165
     or ttl[1] and not ttl and rpeak and lsmapeak and ((red[1] > 85) or (lsma[1] > 85)) and allfall 
      and not rocrise and (red > 75) and (diff >= open_long) and r_ok_L2Short //**Condition revL2Short 166
     or ttl[1] and not ttl and rpeak and (lsma[1] > 90) and allfall and not rocrise and (red[1] > 85)
      and (diff >= open_long) and r_ok_L2Short //**Condition revL2Short 167
     or tts[2] and (close < DTSL_Long) and ((red > 85) or (lsma < 85)) and allfall
      and not rocrise and not ttl and r_ok_L2Short //**Condition revL2Short 168
     or rocpeak[1] and kpeak and gpeak and ((k[1] >90) or (green[1] > 90)) and (roc < low) and allfall 
      and ((green < 60) or (k < 60)) and not rocrise and (red > 85) and not ttl and r_ok_L2Short //**Condition revL2Short 169
     or ttl[1] and not ttl and gpeak[1] and kpeak[1] and ((green[2] > 95) or (k[2] > 95)) and diffShort 
      and allfall and not rocrise and r_ok_L2Short //**Condition revL2Short 170
     or (rpeak or lsmapeak) and (red[1] > 85) and (lsma > 85) and zlemarise[1] and zlemafall and allfall and (roc < low) 
      and not rocrise and not ttl and r_ok_L2Short //**Condition revL2Short 171
     or rocpeak and kpeak and gpeak and ((k[1] > 90) or (green[1] > 90)) and allfall and (roc < low) 
      and zlemarise[1] and zlemafall and not rocrise and (red > 85) and not ttl and r_ok_L2Short //**Condition revL2Short 172
     or ttl[1] and not ttl and rocpeak and kpeak and gpeak and ((k[1] > 95) or (green[1] > 95)) and allfall 
      and (roc < low) and (red > 85) and (diff >= open_long) //**Condition revL2Short 173
     or ttl[1] and not ttl and rocpeak and kpeak and gpeak and ((k[1] > 98) or (green[1] > 98)) and (roc < low) 
      and (diff >= open_long) and ((red > 85) or (lsma > 85)) and zlemarise[1] and zlemafall and (scaled_atr_roc < eom)
       and not ttl and r_ok_L2Short //**Condition revL2Short 174
     or rocpeak and (kpeak or gpeak) and rocfall and ((k[1] > 90) or (green[1] > 90)) and diffShort and not rocrise 
      and not ttl and r_ok_L2Short //**Condition revL2Short 175
// ////assumption that on the short side, roc leads atrroc
     or (rpeak and lsmapeak) and (roc < DTSL_Long) and r_ok_L2Short and not ttl //**Condition revL2Short 176
     or (rpeak and kpeak) and (roc < DTSL_Long) and (redfall or lsmafall) and r_ok_L2Short
      and not ttl //**Condition revL2Short 177 // 
     or (lsmapeak and kpeak) and (roc < DTSL_Long) and (redfall or lsmafall) and r_ok_L2Short
      and not ttl //**Condition revL2Short 178 // and (scaled_atr_roc < eom))
     or (rocpeak and kpeak) and (roc < DTSL_Long) and (redfall or lsmafall) and r_ok_L2Short
      and not ttl //**Condition revL2Short 179 // and (scaled_atr_roc < eom)) 
     or (rocpeak and gpeak) and (roc < DTSL_Long) and (redfall or lsmafall) and r_ok_L2Short
      and not ttl //**Condition revL2Short 180 // and (scaled_atr_roc < eom)) 
    ////green too high and causes bad rev.//  or (pump[1] or shootingStar[1]) and (diff < 0) and diffShort and kgda_ok and (green < 80) //**Condition revL2Short 181
     or (pump[3] or shootingStar[3]) and (diff[2] < 0) and (diff[1] < 0) and (diff < 0) and (roc < low) and (green <= 50) 
      and allfall and (redfall or lsmafall) and r_ok_L2Short //**Condition revL2Short 182
     or clongTSL and diffShort and r_ok_L2Short //**Condition revL2Short 183
     or clongTSL[1] and diffShort and r_ok_L2Short //**Condition revL2Short 184
     or ok_short and allfall and redfall and lsmafall and (diffShort or tts) and r_ok_L2Short //**Condition revL2Short 185
     or ttl[1] and not ttl and allfall and rocfall and diffShort and (redfall or lsmafall)
      and ((red[1] > 85) or (red > 85)) and (diff >= open_long) and r_ok_L2Short //**Condition revL2Short 186
     or ttl[1] and not ttl and allfall and ((scaled_atr_roc < eom) or (roc > low)) and (red[1] > 85) 
      and redfall and ((lsma < 60) or (red < 60)) and r_ok_L2Short //**Condition revL2Short 187
     or ttl[2] and (diff[2] < 0) and (diff[1] < 0) and (diff < 0) and (roc < low) and (green <= 60) 
      and allfall and (redfall or lsmafall) and r_ok_L2Short //**Condition revL2Short 188
     or ttl[1] and (diff[1] < 0) and (diff < 0) and diffShort and (roc < low) and (green <= 60) 
      and allfall and (redfall or lsmafall) and r_ok_L2Short //**Condition revL2Short 189
     or ttl and (diff < -.1) and allpeak and ((green[1] >= 99) or (k[1] >= 99)) and allfall 
      and ((scaled_atr_roc < eom) or (roc < eom)) and r_ok_L2Short //**Condition revL2Short 190
     or ttl[1] and not ttl and (diff < -.1) and allpeak and ((green[1] >= 99) or (k[1] >= 99)) 
      and allfall and ((scaled_atr_roc < eom) or (roc < eom)) and r_ok_L2Short //**Condition revL2Short 191
     or ttl[1] and not ttl and (diff < -.1) and allpeak[1] and ((green[2] >= 99) or (k[2] >= 99)) 
      and allfall and ((scaled_atr_roc < eom) or (roc < eom)) and r_ok_L2Short //**Condition revL2Short 192
     or allpeak and ((k[1] > 80) or (green[1] > 80)) and ((red[1] < 50) or (lsma[1] < 50)) 
      and diffShort and ((scaled_atr_roc < eom) or (roc < high)) and long2[2] and long2[1]
       and r_ok_L2Short //**Condition revL2Short 193
     or ttl[1] and not ttl and (rpeak[1] or rpeak) and allfall and (green <= 60)
      and (roc < low) and (diff < 0) and r_ok_L2Short //**Condition revL2Short 194 //no red ok... 
     or vol_med and ttl[1] and not ttl and (red > 80) and allrise and ((green[1] >= 95) or (k[1] >= 95))
      and allfall and diffShort //**Condition revL2Short 195
     or ttl[1] and not ttl and allpeak and ((green[1] > 95) or (k[1] > 95))
      and rpeak and (red[1] > 80) and (green < 80) and r_ok_L2Short  //**Condition revL2Short 196
    //  or (golong[3] or golong[2] or golong[1]) and diffShort and redfall and (roc < eom) and allfall
    //   and (green < 50) //**Condition revL2Short 197 
    //  or (golong[3] or golong[2] or golong[1]) and diffShort and redfall and (roc < eom) and allfall
    //   and (green < 50) //**Condition revL2Short 198 
     or ttl[1] and not ttl and ((k[1] > green[1]) and ((k[1]-green[1]) <= 2)) and allfall and diffShort 
      and (green < 75) and (roc < eom) //**Condition revL2Short 199
     or allpeak and rpeak and (red[1] > 75) and (green[1] > 80) and (k[1] > 80) and diffShort and allfall 
      and (roc < low) and (green < 50) and r_ok_L2Short //**Condition revS2Long 200
     or (gpeak[1] and PApeak[1] and rocpeak[1] or gpeak[2] and PApeak[2] and rocpeak[2])
      and kpeak and allfall and (lsmapeak or rpeak) and (roc < low) and r_ok_L2Short //**Condition revS2Long 201
     or ttl[1] and not ttl and (green < 75) and (roc < low) and rpeak and lsmapeak 
      and (red[1] > 80) and (lsma[1] > 80) and diffShort and r_ok_L2Short //**Condition revL2Short 202 
    ////too many variables with ttl spread////  or (ttl[3] or ttl[2] or ttl[1]) and not ttl and (allpeak[2] or allpeak[1] or allpeak)
    ////   and (rpeak or rpeak[1] or lsmapeak or lsmapeak[1]) and r_ok_L2Short
    ////    and ((red[2] > 80) or (red[1] > 80) or (lsma[2] > 80) or (lsma[1] > 80))
    ////    and (green[1] < 75) and (green < 50) and allfall and (roc < eom) and kgda_ok and r_ok_L2Short  //Condition revS2Long 203
     or (ttl[2] or ttl[1]) and not ttl and (rpeak[1] or rpeak or lsmapeak[1] or lsmapeak)
      and allfall and (green[1] < 75) and (green < 60) and (roc < eom) and (allpeak[1] or allpeak)
       and not vol_xlow and r_ok_L2Short  //Condition revS2Long 204
     or (ttl[2] or ttl[1]) and not ttl and (rpeak[1] or rpeak or lsmapeak[1] or lsmapeak)
      and allfall and (green[1] < 75) and (green < 60) and (roc < eom) and (allpeak[1] or allpeak)
       and not vol_xlow and r_ok_L2Short  //Condition revS2Long 204

    ////too many variables with ttl spread////    or ((ttl[3] and ttl[2] and ttl[1]) or (ttl[4] and ttl[3] and ttl[2])) and not ttl
    ////   and (diffShort or (roc<eom)) and ((rpeak[2] or rpeak[1] or rpeak) or (lsmapeak[2] or lsmapeak[1] or lsmapeak))
    ////    and (allpeak[1] or allpeak) and allfall and not vol_xlow and r_ok_L2Short  //Condition revS2Long 205

    revL2Short := true
    clong2 := true
    short2 := true
else
    revL2Short := false
    clong2 := false
    short2 := false
////REV S2Long REVERSE SHORT TO LONG
if tts[1] and not tts and rdip and (red[1] < 10) and allrise and not rocfall
     and (roc > high) and ok_long and r_ok_S2Long //**Condition revS2Long 206
     or tts[1] and not tts and rdip and lsmadip and ((red[1] < 15) or (lsma < 15)) and allrise and not rocfall
      and (roc > high) and not tts and r_ok_S2Long //**Condition revS2Long 207
     or tts[1] and not tts and rdip and (lsma[1] < 10) and allrise and not rocfall
      and (roc > high) and not tts and r_ok_S2Long //**Condition revS2Long 208
     or tts[2] and (close > DTSL_Short) and ((red < 15) or (lsma < 15)) and allrise and not rocfall and (roc > high)
      and (red < 15) and not tts and r_ok_S2Long //**Condition revS2Long 209
     or rocdip and kdip and gdip and ((k [1] < 10) or (green[1] < 10)) and (roc > high) and allrise
      and ((green > 40) or (k > 40)) and not rocfall and (roc > high)
       and (red < 15) and not tts and r_ok_S2Long //**Condition revS2Long 210
     or rocdip[1] and kdip and gdip and ((k[1] < 10) or (green[1] < 10)) and (roc > high) and allrise and diffLong
      and ((green > 40) or (k > 40)) and not rocfall and (roc > high)
       and (red < 15) and not tts and r_ok_S2Long //**Condition revS2Long 211
     or tts[1] and not tts and gdip[1] and kdip[1] and ((green[2] < 5) and (k[2] < 5)) and diffLong and allrise
      and not rocfall and (roc > high) and (red < 15) and not tts and r_ok_S2Long //**Condition revS2Long 212
     or rocdip and (kdip or gdip) and rocrise and ((k[1] < 2) or (green[1] < 2)) and ((red < 15) or (lsma < 15))
      and diffLong and not rocfall and (roc > high) and (red < 15) and not tts and r_ok_S2Long //**Condition revS2Long 213
     or rocdip and kdip and gdip and ((k[1] < 10) or (green[1] < 10)) and allrise and (roc > high)
      and zlemafall[1] and zlemarise and not rocfall and (roc > high)
       and (red < 15) and not tts and r_ok_S2Long //**Condition revS2Long 214
     or rocdip[1] and kdip and gdip and ((k[1] < 2) or (green[1] < 2)) and allrise and zlemafall[1]
      and zlemarise and dadiffs[1] and dadiffg and not rocfall and (roc > high)
       and (red < 15) and not tts and r_ok_S2Long //**Condition revS2Long 215
     or tts[1] and not tts and rocdip and kdip and gdip and ((k[1] < 5) or (green[1] < 5)) and allrise
      and (scaled_atr_roc > eom) and (roc > high) and (red < 15) and r_ok_S2Long //**Condition revS2Long 216


     or tts[1] and not tts and rocdip and kdip and gdip and ((k[1] < 2) or (green[1] < 2)) and ((red < 15) or (lsma < 15)) 
      and zlemafall[1] and zlemarise and (scaled_atr_roc > eom) and (roc > high)
       and (red < 15) and not tts and r_ok_S2Long //**Condition revS2Long 217
     or tts[1] and (rocdip or rocdip[1] or rocdip[2]) and (kdip[1] or kdip or gdip[1] or gdip)
      and ((k[1] < 5) or (green[1] < 5)) and ((green > 40) or (k > 40)) and allrise and (roc > high)
       and (red < 15) and not tts and r_ok_S2Long //**Condition revS2Long 218
     or (rdip and kdip) and (scaled_atr_roc > eom) and (roc > high) and r_ok_S2Long and not tts //**Condition revS2Long 219
     or (lsmadip and kdip) and (scaled_atr_roc > eom) and (roc > high) and (redrise or lsmarise)
      and r_ok_S2Long and not tts //**Condition revS2Long 220
     or (rocdip and kdip) and (scaled_atr_roc > eom) and (roc > high) and (redrise or lsmarise)
      and r_ok_S2Long and not tts //**Condition revS2Long 221
     or (rocdip and gdip) and (scaled_atr_roc > eom) and (roc > high) and (redrise or lsmarise)
      and r_ok_S2Long and not tts //**Condition revS2Long 222
     or (rdip and lsmadip) and (scaled_atr_roc > eom) and (roc > high) and (redrise or lsmarise)
      and r_ok_S2Long and not tts and (green > 50) //**Condition revS2Long 223
     or (dump[1] or fallingKnife[1]) and (diff > open_long) and diffLong and kgda_ok and (green > 20) //**Condition revS2Long 224 //***update alert
     or (dump[3] or fallingKnife[3]) and (diff[2] > 0) and (diff[1] > 0) and diffLong and (roc > high) and (green >= 50) 
      and allrise and (redrise or lsmarise) and r_ok_S2Long //**Condition revL2Short 225

     or cshortTSL and diffLong and r_ok_S2Long //**Condition revS2Long 226
     or cshortTSL[1] and diffLong and r_ok_S2Long //**Condition revS2Long 227
     or ok_long and allrise and redrise and lsmarise and rocrise and (diffLong or ttl) and r_ok_S2Long  //**Condition revS2Long 228 //and (red >= 50) and (lsma >= 50)
     or tts[1] and not tts and allrise and diffLong and (redrise or lsmarise) and r_ok_S2Long //**Condition revS2Long 229
     or r_ok_S2Long and (gdip or kdip) and ((k[1]<10) or (green[1]<10)) and (roc > high)
      and diffLong and PArise //**Condition revS2Long 230
     or tts[1] and not tts and allrise and ((scaled_atr_roc > eom) or (roc > high)) and r_ok_S2Long
      and redrise and ((lsma > 40) or (red > 40)) //**Condition revS2Long 231
     or tts[1] and (diff[1] > 0) and (diff > 0) and diffLong and (roc > high) and (green >= 40) and allrise
      and (redrise or lsmarise) and r_ok_S2Long //**Condition revS2Long 232
     or tts and (diff > .1) and alldip and ((green[1] <= 1) or (k[1] <= 1)) and allrise
      and ((scaled_atr_roc > eom) or (roc > eom)) and r_ok_S2Long and (green > 40) //**Condition revS2Long 233
     or tts[1] and not tts and (diff > .1) and alldip[1] and ((green[2] <= 1) or (k[2] <= 1)) and allrise
      and ((scaled_atr_roc > eom) or (roc > eom)) and r_ok_S2Long //**Condition revS2Long 234
     or alldip and ((green[1]<=5) or (k[1] <=5)) and redrise and (red >= 20)
      and ((scaled_atr_roc > eom) or (roc > low)) and diffLong and r_ok_S2Long //**Condition revS2Long 235
     or alldip and ((k[1] < 20) or (green[1] < 20)) and ((red[1] >= 50) or (lsma[1] >= 50)) 
      and diffLong and ((scaled_atr_roc > eom) or (roc > low)) and short2[2] and short2[1]
       and r_ok_S2Long //**Condition revS2Long 236
     or tts[1] and not tts and (rdip[1] or rdip) and allrise and (green > 50)
      and (roc > high) and (diff > 0) and r_ok_S2Long //**Condition revS2Long 237 
     or vol_med and tts[1] and not tts and (red < 20) and alldip and ((green[1] <= 5) or (k[1] <= 5))
      and allrise and diffLong //**Condition revS2Long 238
     or tts[1] and not tts and alldip and ((green[1] < 5) or (k[1] < 5))
      and rdip and (red[1] < 20) and (green > 20) and kgda_ok and r_ok_S2Long  //**Condition revS2Long 239
     or short2[1] and diffLong and redrise and (roc > eom) and allrise and (green > 50) and r_ok_S2Long //**Condition revS2Long 240
     or short2[2] and diffLong and redrise and (roc > eom) and allrise and (green > 50) and r_ok_S2Long //**Condition revS2Long 241 
     or tts[1] and not tts and ((green > k) and ((green-k) < 2)) and allrise and diffLong
      and (green > 25) and (roc > eom) and r_ok_S2Long //**Condition revS2Long 242
     or alldip and rdip and (red[1] < 25) and (green[1] < 20) and (k[1] < 20) and diffLong and allrise 
      and (roc > high) and (green > 50) and r_ok_S2Long //**Condition revS2Long 243 ***need alert
     or (gdip[1] and PAdip[1] and rocdip[1] or gdip[2] and PAdip[2] and rocdip[2])
      and kdip and allrise and (lsmadip or rdip) and (roc > high) and kgda_ok and r_ok_S2Long  //**Condition revS2Long 244 //// ***need alert
     or (alldip or alldip[1] or alldip[2]) and ((green[1] > 5) or (green[2] > 5) or (green[3] > 5))
      and (roc > eom) and diffLong and kgda_ok and r_ok_S2Long  //**Condition revS2Long 245
     or tts[1] and not tts and (roc > high) and rdip and lsmadip 
      and (red[1] < 20) and (lsma[1] < 20) and diffLong and r_ok_S2Long //**Condition revS2Long 246 ***need alert
    ////to many variables... need to split into 3 separate lines for ttl and allpeaks...//  or (tts[3] or tts[2] or tts[1]) and not tts and (alldip[2] or alldip[1] or alldip) and r_ok_S2Long 
    ////  and (rdip or rdip[1] or lsmadip or lsmadip[1]) and ((red[2] < 20) or (red[1] < 20) or (lsma[2] < 20) or (lsma[1] < 20))
    ////    and (green[1] > 25) and (green > 50) and allrise and (roc > high) and kgda_ok  //Condition revS2Long 247 ***need alert
     or tts[1] and not tts and (rdip[1] or rdip or lsmadip[1] or lsmadip)
      and allrise and (green[1] > 25) and (green > 40) and (roc > eom) and (alldip[1] or alldip) and kgda_ok
       and not vol_xlow and not blumoonfall //Condition revS2Long 248
     or tts[2] and not tts[1] and not tts and (rdip[1] or rdip or lsmadip[1] or lsmadip)
      and allrise and (green[1] > 25) and (green > 50) and (roc > eom) and (alldip[1] or alldip)
       and not vol_xlow and not blumoonfall //Condition revS2Long 248a

     or (dump[3] or dump[2]) and (alldip[1] or alldip) and allrise and (green > 50) and diffLong 
      and (roc > high) and not vol_xlow and blumoonrise and (rdip[1] or rdip) and (lsmadip[1] or lsmadip) //Condition revS2Long 249
     or ((tts[3] and tts[2] and tts[1]) or (tts[4] and tts[3] and tts[2])) and not tts
      and (diffLong or (roc>eom)) and ((rdip[2] or rdip[1] or rdip) or (lsmadip[2] or lsmadip[1] or lsmadip))
       and (alldip[1] or alldip) and allrise and not vol_xlow and r_ok_S2Long //Condition revS2Long 250
    revS2Long := true
    cshort2 := true
    long2 := true
else//
    revS2Long := false
    cshort2 := false
    long2 := false

//////////////////////////////////////////////////////////////////
////Close order reversal
////no ok_close condition... green <>50...
if tts[1] and not tts and ((green[1] < 5) or (k[1] < 5) or (green[2] < 5) or (k[2] < 5)) and alldip and allrise 
     and (rdip or rdip[1] or lsmadip or lsmadip[1]) and ((red[1]<15) or (lsma[1]<15) or (red[2]<15) or (lsma[2]<15))
      and (diffLong or diffLong[1]) and kgda_ok 
     or tts[2] and not tts[1] and not tts and ((green[1] < 5) or (k[1] < 5) or (green[2] < 5) or (k[2] < 5))
      and alldip and allrise and (rdip or rdip[1] or lsmadip or lsmadip[1]) 
       and ((red[1]<15) or (lsma[1]<15) or (red[2]<15) or (lsma[2]<15)) and (diffLong or diffLong[1]) and kgda_ok 
     or ((green[1] < 10) or (k[1] < 10) or (green[2] < 10) or (k[2] < 10))
      and alldip and (rdip or lsmadip) and ((red[1]<15) or (lsma[1]<15) or (red[2]<15) or (lsma[2]<15)) 
       and diffLong and (roc > eom) and (green > 50) and kgda_ok

    cshort6 := true
else
    cshort6 := false

// if ttl[1] and not ttl and ((green[1] > 95) or (k[1] > 95) or (green[2] > 95) or (k[2] > 95))
//       and allpeak and allfall and (rpeak or rpeak[1] or lsmapeak or lsmapeak[1]) and (diffShort or diffShort[1]) and kgda_ok
//        and ((red[1]>85) or (lsma[1]>85) or (red[2]>85) or (lsma[2]>85)) and kgda_ok //**Condition cshort 94a
//      or ttl[2] and not ttl[1] and not ttl and ((green[1] > 95) or (k[1] > 95) or (green[2] > 95) or (k[2] > 95))
//       and allpeak and allfall and (rpeak or rpeak[1] or lsmapeak or lsmapeak[1]) and (diffShort or diffShort[1]) and kgda_ok
//        and ((red[1]>85) or (lsma[1]>85) or (red[2]>85) or (lsma[2]>85)) //**Condition cshort 94a
//      or ((green[1] > 90) or (k[1] > 90) or (green[2] > 90) or (k[2] > 90))
//       and allpeak and (rpeak or lsmapeak) and ((red[1]>85) or (lsma[1]>85) or (red[2]>85) or (lsma[2]>85)) 
//        and diffShort and (roc < eom) and (green < 50) and kgda_ok //**Condition cshort 94b
//     clong6 := true
// else
//     clong6 := false

plotshape(clong6, style=shape.circle, color=color.new(color.purple,50), location=location.bottom, size= size.normal)
// ///***Turned off for publishing

plotshape(cshort6, style=shape.circle, color=color.new(color.purple,50), location=location.top, size= size.normal)
// ///***Turned off for publishing

// //
plotshape(revS2Long, style=shape.circle, color=color.new(color.green,50), location=location.bottom, size= size.small)
// ///***Turned off for publishing

plotshape(revL2Short, style=shape.circle, color=color.new(color.red,50), location=location.top, size= size.small)
// ///***Turned off for publishing

// plotshape(rocpeakclong, style=shape.circle, color=color.white, location=location.bottom, size= size.small)
// plotshape(rocdipcshort, style=shape.circle, color=color.white, location=location.top, size= size.small)
//Close pump/dump reversal
if (dump[2] or dump[1]) and diffLong and gdip and rocrise and greenrise and (diff[1] > 0.05) and (diff > 0.05) 
      and (close > close[1]) and (green > green[1]) and zlemarise and (diff > open_long) //**Condition Dumprev251
    cshort4 := true
    // closeshort := true
else
    cshort4 := false
    // closeshort := false

if (pump[2] or pump[1]) and diffShort and gpeak and rocfall and greenfall and (diff[1] < 0.05) and (diff < 0.05) 
      and (close < close[1]) and (green < green[1]) and zlemafall and (diff < open_short) //**Condition Pumprev252
    clong4 := true
    // closelong := true
else
    clong4 := false
    // closelong := false
/////////////////////////////////////////////////
////Experimental catch vol_xlow trend with continuous blurise

////slow_drift
// slow_drift_long = false
// slow_drift_short = false

// slow_drift_long_latch = false
// slow_drift_short_latch= false
// slow_drift_long_unlatch = false
// slow_drift_short_unlatch= false


// if vol_xlow and (tts[4] or tts[3]) and not tts 
//      and ((green[4] < 5) or (green[3] < 5) or (green[2] < 5)) and ((k[4] < 5) or (k[3] < 5) or (k[2] < 5))
//      and (alldip[3] or alldip[2] or alldip[1]) and (r_bdip[1] or r_bdip) and (roc[1]>eom) and (roc>eom)
//      and ((red[3] < 20) or (red[2] < 20) or (red[1] < 20) or (lsma[3] < 20) or (lsma[2] < 20) or (lsma[1] < 20))
//      and blumoonrise and (diff > 0)
//     slow_drift_long_latch := true

// if (slow_drift_long_latch or slow_drift_long_latch[1] or slow_drift_long_latch[2] or slow_drift_long_latch[3] or slow_drift_long_latch[4]) 
//     //  and blumoonrise[1] and blumoonrise 
//     slow_drift_long := true
// else
//     slow_drift_long := false
//     // slow_drift_long_latch := false

// if vol_xlow and (ttl[4] or ttl[3]) and not ttl 
//      and ((green[4] > 95) or (green[3] > 95) or (green[2] > 95)) and ((k[4] > 95) or (k[3] > 95) or (k[2] > 95))
//      and (allpeak[3] or allpeak[2] or allpeak[1]) and (r_bpeak[2] or r_bpeak[1] or r_bpeak) and (roc[1]<eom) and (roc<eom)
//      and ((red[3] > 80) or (red[2] > 80) or (red[1] > 80) or (lsma[3] > 80) or (lsma[2] > 80) or (lsma[1] > 80))
//      and blumoonfall and (diff > 0)
//     slow_drift_short_latch := true

// if (slow_drift_short_latch or slow_drift_short_latch[1] or slow_drift_short_latch[2] or slow_drift_short_latch[3] or slow_drift_short_latch[4]) 
//     //  and blumoonrise[1] and blumoonrise 
//     slow_drift_short := true
// else
//     slow_drift_short := false
    // slow_drift_long_latch := false

// plotshape(slow_drift_long, style=shape.square, color=color.purple, location=location.bottom, size = size.small)
///***Turned off for publishing

// plotshape(slow_drift_short, style=shape.square, color=color.purple, location=location.top, size = size.small)
///***Turned off for publishing


///////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////
//// Flat Close Function
///////////////////////////////////////////////////////////////////////////////////
////***Changed from separate diffFlat  long/short variables to a single variable. 
////I think it would be best to separate and re-implement.
////Also, I need to implement a cummulative bar conditions that will either be
////'and'd or 'or'd with the existing conditions such that in the event there are 3 cumulative 
//// bars that exceed the diffFlat  level, then that will exclude the sequence from short closing.
//// once the above modifications are in place, I need to implement the flat close function. 
//// In back test, it has proved to be more beneficial than not but it does sometimes kill trends. 
//// I may need to figure out a way to create dynamic levels vs. a fixed %.
////diffFlat  variables
// var diffFlat  = false

// ////Old diffFlat  calculations from 336
// if diff[4] <= diffFlat_long_trigger and diff[4] >= diffFlat_short_trigger 
//      and diff[3] <= diffFlat_long_trigger and diff[3] >= diffFlat_short_trigger 
//      and diff[2] <= diffFlat_long_trigger and diff[2] >= diffFlat_short_trigger 
//      and diff[1] <= diffFlat_long_trigger and diff[1] >= diffFlat_short_trigger 
//      and not ((diff[3] + diff[2] + diff[1] + diff) >= diffFlat_long_trigger)
//      and not ((diff[3] + diff[2] + diff[1] + diff) <= diffFlat_short_trigger)
//      and not ttl
//      and not tts
//     diffFlat  := true
//     close_short := true
//     close_long := true
// else
//     diffFlat  := false
//     close_short := false
//     close_long := false

// ////diffFlat  Plots
// plotshape((diffFlat ), style=shape.square, color=color.purple, location=location.bottom, size = size.small)
// plotshape((diffFlat ), style=shape.square, color=color.purple, location=location.top, size = size.small)

////////////////////////////////////////////////////////////////////////////////////
// ////Diff_to_close_long_trigger and diff_to_close_short_trigger
// if long[1] and (diff < 0) and (diff < diff_to_close_long)
//      or (diff < 0) and ((diff + (u_wick * -1)) < diff_to_close_long)
//     diff2close_long := true
// else
//     diff2close_long := false

// ////Diff2close short function
// if short[1] and (diff > 0) and (diff > diff_to_close_short) 
//      or short[1] and (diff > 0) and ((diff + l_wick) < diff_to_close_long)
//     diff2close_short := true
// else
//     diff2close_short := false

////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////
////EOM/ROC Latched
///////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////
// // //---------------------------------------PLOT SHAPE--------------------------------------------//
////////////////////////////////////////////////////////////////////////////////////////////////////////////
////Plot EOM/ROC - COPIED
// p1= plot(eom, "EOM", color.white)
///***Turned off for publishing
// p2= plot(roc, "ROC", color.aqua) 
///***Turned off for publishing
////Plot Fill - COPIEDturned off for publish
//// fill_color = eom[2] >= roc[1] and eom[2] > high  ? color.red : color.green
//// fill(p1,p2, color=fill_color)
////Plot diffLong and diffShort for debug
// plotshape(diffLong, style=shape.square, color=color.new(color.white, 50), location=location.bottom, size = size.tiny)
// ///***Turned off for publishing
// plotshape(diffShort, style=shape.square, color=color.new(color.white, 50), location=location.top, size= size.tiny)
// ///***Turned off for publishing

////Plot diff_to_close Triggers
// plotshape(diff_to_close_long_trigger, style=shape.square, color=color.rgb(72, 235, 74), location=location.bottom, size = size.tiny)
// plotshape(diff_to_close_short_trigger, style=shape.square, color=color.rgb(234, 92, 92), location=location.top, size= size.tiny)

// ////Plot Trend Trail Condition Long/Short- Close disabled 
plotshape(ttl, style=shape.diamond, color=color.new(color.yellow, 50), location=location.bottom, size = size.normal)
// ///***Turned off for publishing
plotshape(tts, style=shape.diamond, color=color.new(color.yellow, 50), location=location.top, size= size.normal)
// ///***Turned off for publishing
// plotshape(ttl, style=shape.diamond, color=color.rgb(139, 248, 142), location=location.bottom, size = size.normal)
// plotshape(tts, style=shape.diamond, color=color.rgb(139, 248, 142), location=location.top, size= size.normal)

// ////diffFlat  Plots//
// plotshape((diffFlat_long or diffFlat_long1 or diffFlat_long2), style=shape.square, color=color.new(color.purple, 70), location=location.bottom, size = size.small)
// //turned off for publish...
// plotshape((diffFlat_short or diffFlat_short1 or diffFlat_short2), style=shape.square, color=color.new(color.purple, 70), location=location.top, size = size.small)
//turned off for publish...
// // ////diffFlat  Plots
// plotshape((diffFlat ), style=shape.square, color=color.purple, location=location.bottom, size = size.small)
// plotshape((diffFlat ), style=shape.square, color=color.purple, location=location.top, size = size.small)

// //// Plot Long/Short Open Circles
// plotshape(golong, style=shape.circle, color=color.new(color.green, 50), location=location.bottom, size = size.small)
//turned off for publish...
// plotshape(goshort, style=shape.circle, color=color.new(color.red, 50), location=location.top, size= size.small)
//turned off for publish...

// // // // //plot close_long short
// plotshape(close_long, style=shape.xcross, color=color.new(color.white, 0), location=location.bottom)
//turned off for publish...
// plotshape(close_short, style=shape.xcross, color=color.new(color.white, 0), location=location.top)
//turned off for publish...
// plotshape(close_long2, style=shape.xcross, color=color.new(color.white, 0), location=location.bottom)
// plotshape(close_short2, style=shape.xcross, color=color.new(color.white, 0), location=location.top)

////PLOT SHAPE MROCMAMAFALL/RISE
// plotshape(mrocmamafall, style=shape.triangledown, color=color.new(color.red, 0), location=location.top, size= size.small)
// plotshape(mrocmamarise, style=shape.triangleup, color=color.new(color.green, 0), location=location.bottom, size= size.small)

////////////////////////////////////////////////////////////////////////////////////////////////////////////
// // //---------------------------------------PLOT LINES--------------------------------------------//
////////////////////////////////////////////////////////////////////////////////////////////////////////////
////VWMAMA Plot -
// plot(vwmama, title="MAMA", color=color.new(color.blue, 2), linewidth=3, offset = vwmaoffset)
// plot(vwmama, title="VWMA", color=color.new(color.green, 2), linewidth=3, offset = vwmaoffset)
////VWMA SLOPE LABEL -
// label.new(bar_index, high, str.tostring(vwmaslope, formatVWMAslope), yloc=yloc.belowbar, style = label.style_none, 
//  size=size.small, textcolor = color.blue)

////EOM/ROC plot-((eom*1.75) + (roc*.25))/2
// plot(eomroc, 'MROC', color=color.new(color.orange, 2), linewidth= 2)
// eom = ta.sma((div * ta.change(hl2) * (high - low) / volume) + close[1], length= 2)//was 2
////EOM/ROC SLOPE LABEL -
// label.new(bar_index, high, str.tostring(eomrocslope, formatVWMAslope), yloc=yloc.abovebar, style = label.style_none, 
//  size=size.small, textcolor = color.orange)

////MROCMAMA - (eomroc + vwmama)/2
// plot(mrocmama, title="MROCMAMA", color=color.new(color.green, 2), linewidth=3, offset = vwmaoffset)
////MROCMAMA SLOPE LABEL -
////need mrocmamaslope formula//// label.new(bar_index, high, str.tostring(mrocmamaslope, formatVWMAslope), yloc=yloc.abovebar, style = label.style_none, 
//  size=size.small, textcolor = color.green)
// eomSLOPEdiff = (eomrocslope - eomrocslope[1])
// eomSLOPEdiff_color = eomSLOPEdiff > 0 ? color.green : color.red
// label.new(bar_index, high, str.tostring(eomSLOPEdiff, format), style = label.style_none, size=size.small, textcolor = eomSLOPEdiff_color)

///////////////////////////////////////////////////
////PLrise/fall
// plotshape(PLrise, style=shape.circle, color=color.new(color.purple, 50), location=location.bottom, size = size.tiny)
// plotshape(PLfall, style=shape.circle, color=color.new(color.purple, 50), location=location.top, size= size.tiny)
// plotshape(PArise, style=shape.circle, color=color.new(color.purple, 50), location=location.bottom, size = size.tiny)
// plotshape(PAfall, style=shape.circle, color=color.new(color.purple, 50), location=location.top, size= size.tiny)
// ////Debug Plot, KEEP CLOSE TO CODE
// plotshape(roc_xd_eom_latched_48, style=shape.triangledown, color=color.new(color.red, 50), location=location.top)
// plotshape(roc_xu_eom_latched_48, style=shape.triangleup, color=color.new(color.green, 50), location=location.bottom)
//////////////////////////////////////////////////////////////////

////Debug Plot, KEEP CLOSE TO CODE -COPIED
// ////Plot shooting star and falling knife close
// plotshape(shootingStar, style=shape.triangledown, color=color.aqua, location=location.top)
// plotshape(fallingKnife, style=shape.triangleup, color=color.rgb(225, 139, 240), location=location.bottom)
////Debug Plot, KEEP CLOSE TO CODE -COPIED
// plotshape(roc_xd_eom_latched_48, style=shape.triangledown, color=color.new(color.red, 50), location=location.top)
// plotshape(roc_xu_eom_latched_48, style=shape.triangleup, color=color.new(color.green, 50), location=location.bottom)
///////////////////////////////////////////////////
////Debug Plot, KEEP CLOSE TO CODE -COPIED
// //This includes the LA for 'roc_xd_eom or roc < eom and PAfall' and the active tf PARise/fall
// // plotshape(roc_xu_eom_latched_24, style=shape.triangledown, color=color.new(color.red, 50), location=location.top)
// // plotshape(roc_xd_eom_latched_24, style=shape.triangleup, color=color.new(color.green, 50), location=location.bottom)

// // plotshape(eomfall_14, style=shape.flag, color=color.new(color.purple, 0), location=location.top)
// // plotshape(eomrise_14, style=shape.flag, color=color.new(color.purple, 0), location=location.bottom)
///////////////////////////////////////////////////
////Debug Plot, KEEP CLOSE TO CODE -COPIED
// plotshape(PAfall, style=shape.triangledown, color=color.new(color.red, 50), location=location.top,size=size.tiny)
// plotshape(PArise, style=shape.triangleup, color=color.new(color.red, 50), location=location.bottom,size=size.tiny)
////Debug Plot, KEEP CLOSE TO CODE -COPIED
// // plotshape(PA_shortOK, style=shape.triangledown, color=color.new(color.green, 50), location=location.top,size=size.small)
// // plotshape(PA_longOK, style=shape.triangleup, color=color.new(color.green, 50), location=location.bottom,size=size.small)
////Debug Plot, KEEP CLOSE TO CODE -COPIED
// p3 = plot(highestCloseStop, "Long Stop", color.white)////Debug Plot, Keep close to code
// p4 = plot(lowestCloseStop, "Short Stop", color.aqua)////Debug Plot, Keep close to code

////DEBUG PLOTS, KEEP CLOSE TO CODE - COPIED
// plotshape(lsmaflat, style=shape.diamond, color=color.yellow, location=location.bottom, size = size.normal)
// plotshape(testlong, style=shape.circle, color=color.green, location=location.bottom, size = size.small)
// plotshape(diffShort and tts[3] and kpeak and zlemafall and ((tbs < tbs_open_short) or diffShort) and (diff < 0) 
//      or ttl[4] and kpeak and zlemafall and diffShort and ((tbs < tbs_open_short) or diffShort) and (diff < 0)
//      or ttl[4] and kpeak[1] and zlemafall and ((tbs < tbs_open_short) or diffShort) and (diff < 0) 
//      or ttl[3] and kpeak and zlemafall and ((tbs < tbs_open_short) or diffShort) and (diff < 0) 
//      or ttl[2] and kpeak and zlemafall and ((tbs < tbs_open_short) or diffShort) and (diff < 0)
//      or ttl[1] and kpeak and zlemafall and ((tbs < tbs_open_short) or diffShort) and (diff < 0), style=shape.cross, color=color.red, location=location.top, size= size.small)
// plotshape(testclong or cshort, style=shape.xcross, color=color.white, location=location.bottom, size = size.small)
// plotshape(testcshort or cshort, style=shape.xcross, color=color.white, location=location.top, size= size.small)
// plotshape((green > 50) and (zlemarise or dadiffg) and ((roc > eom) or (scaled_atr_roc > eom)), style=shape.triangleup, color=color.white, location=location.bottom, size= size.small)
// plotshape((green < 50) and (zlemafall or dadiffs) and ((roc < eom) or (scaled_atr_roc < eom)), style=shape.triangledown, color=color.white, location=location.top, size= size.small)
// plotshape((green > 50) and ((roc > eom) or (scaled_atr_roc > eom)), style=shape.triangleup, color=color.green, location=location.bottom, size= size.small)
// plotshape((green < 50) and ((roc < eom) or (scaled_atr_roc < eom)), style=shape.triangledown, color=color.red, location=location.top, size= size.small)
plotshape(long or long1 or long2 or long3 or long4 or long5 or long6 or pump, style=shape.triangleup, color=color.new(color.green,50), location=location.bottom, size= size.normal)
plotshape(short or short1 or short2 or short3 or short4 or short5 or short6 or dump, style=shape.triangledown, color=color.new(color.red,50), location=location.top, size= size.normal)
// plotshape(, style=shape.triangleup, color=color.white, location=location.bottom, size= size.small)
// plotshape(, style=shape.triangledown, color=color.white, location=location.top, size= size.small)
// plotshape(, style=shape.triangleup, color=color.white, location=location.bottom, size= size.small)
// plotshape(, style=shape.triangledown, color=color.white, location=location.top, size= size.small)
// plotshape(, style=shape.triangleup, color=color.white, location=location.bottom, size= size.small)
// plotshape(, style=shape.triangledown, color=color.white, location=location.top, size= size.small)
plotshape(clong or clong1 or clong2 or clong3 or clong4 or clong5 or clong6 or clongTSL or dump, style=shape.xcross, color=color.green, location=location.bottom, size= size.normal)
plotshape(cshort or cshort1 or cshort2 or cshort3 or cshort4 or cshort5 or cshort6 or cshortTSL or pump, style=shape.xcross, color=color.red, location=location.top, size= size.normal)
// plotshape(diffFlat_short, style=shape.square, color=color.new(color.purple, 70), location=location.top, size= size.small)
// plotshape(diffFlat_long, style=shape.square, color=color.new(color.purple, 70), location=location.bottom, size= size.small)
// plotshape(clongTSL, style=shape.xcross, color=color.white, location=location.bottom, size= size.small)
// plotshape(cshortTSL, style=shape.xcross, color=color.white, location=location.top, size= size.small)
///////////////////////////////////////////////////////////////////////////////////////////////////////
////Debug/Experimental 7/22/2023 15:17
////the below plot logic turned off flat if 3 bar sum was <> open_long/short or diffShort/Long
// plotshape((tbs < tbs_open_short) or diffShort, style=shape.square, color=color.new(color.red, 50), location=location.top, size= size.small)
// plotshape((tbs > tbs_open_long) or diffLong, style=shape.square, color=color.new(color.green, 50), location=location.bottom, size= size.small)
///***Turned off for publishing

///////////////////////////////////////////////////////////////////////////////////////////////////////
////LABELS
///////////////////////////////////////////////////////////////////////////////////////////////////////
////BASIC LABELS
////DIFF LABEL - COPIED
label.new(bar_index, high, str.tostring(diff, format), style = label.style_none, size=size.small, textcolor = diff_color)
///***Turned off for publishing

// ////WICK LABELS - COPIED
// label.new(bar_index, high, str.tostring(u_wick, format), yloc=yloc.abovebar, style = label.style_none, 
//  size=size.small, textcolor = color.aqua)
// label.new(bar_index, high, str.tostring(l_wick, format), yloc=yloc.belowbar, style = label.style_none, 
//  size=size.small, textcolor = color.purple)

tbs_color = tbs > 0 ? color.green : color.red

label.new(bar_index, high, str.tostring(tbs, format), yloc=yloc.belowbar, style = label.style_none, 
 size=size.small, textcolor = tbs_color)
// label.new(bar_index, high, str.tostring(atrpump_dump, format), style = label.style_none, size=size.small, textcolor = diff_color)
label.new(bar_index, high, str.tostring(atr6, format), yloc=yloc.abovebar, style=label.style_none, size=size.small, textcolor=color.white)
// ///***Turned off for publishing

////ATR6 LABEL atr6
// label.new(bar_index, high, str.tostring(atr6, format), yloc=yloc.abovebar, style=label.style_none, size=size.small, textcolor=color.white)


////SLOPE LABELS
////LSMA SLOPE LABEL - COPIED
// label.new(bar_index, high, str.tostring(lsmaslope, formatLSMAslope), yloc=yloc.belowbar, style = label.style_none, 
//  size=size.small, textcolor=color.new(color.white, 0))
///***Turned off for publishing

////EOM SLOPE LABEL - COPIED
// label.new(bar_index, high, str.tostring(eomslope, formatEOMslope), yloc=yloc.belowbar, style = label.style_none, 
//  size=size.small, textcolor = color.white)
////eomslope label positioned like diff
// label.new(bar_index, high, str.tostring(eomslope, format), style = label.style_none, size=size.small, 
//  textcolor = color.white)

////ROC SLOPE LABEL - COPIED
// label.new(bar_index, high, str.tostring(rocslope, formatEOMslope), yloc=yloc.belowbar, style = label.style_none, 
//  size=size.small, textcolor = color.aqua)
////eomrocslope
// label.new(bar_index, high, str.tostring(eomrocslope, formatEOMslope), yloc=yloc.belowbar, style = label.style_none, 
//  size=size.small, textcolor = color.orange)
// label.new(bar_index, high, str.tostring(eomrocslope, format), style = label.style_none, size=size.small, 
//  textcolor = color.orange) ////slope angle isn't accurate for use as condition

//// PA Label
// label.new(bar_index, high, str.tostring(PAslope, formatLSMAslope), yloc=yloc.belowbar, style = label.style_none, size=size.small, textcolor = color.purple)
// label.new(bar_index, high, str.tostring(PAslope, formatLSMAslope), yloc=yloc.belowbar, style = label.style_none, 
//  size=size.small, textcolor=color.new(color.purple, 0))


// //// Plot Long/Short Label
// // plotshape(long, style= shape.labelup, location= location.belowbar ,color= color.green,  textcolor= color.white, text = "Long" )
// // plotshape(short, style= shape.labeldown, location= location.abovebar ,color= color.red,  textcolor= color.white, text = "Short" )
var golong = long or long1 or long2 or long3 or long4 or long5
var goshort = short or short1 or short2 or short3 or short4 or short5

////////////////////////////////////////////////////////////////////////////////
////Alerts
////////////////////////////////////////////////////////////////////////////////
////ALERT CONDITIONS FOR DAlONG/DAsHORT 'LDC Open Long â² | {{ticker}}@{{close}} | ({{interval}})'
alertcondition(condition = golong or long or long1 or long2 or long3 or long4 or long5 or long6 or pump, title='Open Long', message='Open Long_Close Short â² | {{ticker}}@{{close}} | ({{interval}})')
alertcondition(condition = goshort or short or short1 or short2 or short3 or short4 or short5  or short6 or dump, title='Open Short', message='Open Short_Close Long â¼ | {{ticker}}@{{close}} | ({{interval}})')
alertcondition(condition = closelong or clong or clong1 or clong2 or clong3 or clong4 or clong5 or clong6 or clongTSL or dump, title='Close Long', message='Close Long â²â¼ | {{ticker}}@{{close}} | ({{interval}})')
alertcondition(condition = closeshort or cshort or cshort1 or cshort2 or cshort3 or cshort4 or cshort5 or cshort6 or cshortTSL or pump, title='Close Short', message='Close Short â²â¼ | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = clong or clong1 or clong2 or clong3 or clongTSL or dump, title='Close Long Delay', message='Close Long')
// alertcondition(condition = cshort or cshort1 or cshort2 or cshort3 or cshortTSL or pump, title='Close Short Delay', message='Close Short')

// alertcondition(condition = golong, title='Open Long', message='Open Long_Close Short')
// alertcondition(condition = goshort, title='Open Short', message='Open Short_Close Long')


// // alertcondition(condition = close_long, title='Close Long', message='Close Long')
// // alertcondition(condition = close_short, title='Close Short', message='Close Short')

// alertcondition(condition = close_long, title='Close Long Delayed', message='Close Long Delayed')
// alertcondition(condition = close_short, title='Close Short Delayed', message='Close Short Delayed')
// alertcondition(condition = close_long, title='Close Long', message='Close Long')
// alertcondition(condition = close_short, title='Close Short', message='Close Short')

// ////ALERT CONDITIONS FOR DAlONG/DAsHORT
// alertcondition(condition = long, title='Open Long', message='Open Long_Close Short')
// alertcondition(condition = short, title='Open Short', message='Open Short_Close Long')
// alertcondition(condition = clong, title='Close Long', message='Close Long')
// alertcondition(condition = cshort, title='Close Short', message='Close Short')
// alertcondition(condition = clong2, title='Close Long Delay', message='Close Long')
// alertcondition(condition = cshort2, title='Close Short Delay', message='Close Short')
//alertcondition(condition = long or long1 or long2 or long3 or long4, title='Open Long', message='Open Long_Close Short')

/////////////////////////////////////////////////////////////////////////////////////////////
////DEBUG ALERTS total of 90 output alerts... cannot exceed 64
////LONG CONDITIONS alertzzz
// alertcondition(condition = vol_xlow and pump and (diff > (shooting_starTH*2)) and (u_wick > (diff * shooting_star_close)), title='Condition SS1', message='ConditionSS1 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = vol_xlow and pump[1] and ((diff[1] + diff) > (shooting_starTH*2)) and (u_wick > (diff * shooting_star_close)) and (diff > open_long), title='ConditionSS2', message='ConditionSS2 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = vol_low and pump and (diff > (shooting_starTH*2)) and (u_wick > (diff * shooting_star_close)), title='ConditionSS3', message='ConditionSS3 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = vol_low and pump[1] and ((diff[1] + diff) > (shooting_starTH*2)) and (u_wick > (diff * shooting_star_close)) and (diff > open_long), title='ConditionSS4', message='ConditionSS4 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = vol_med and pump and (diff > (shooting_starTH*2)) and (u_wick > (diff * shooting_star_close)), title='ConditionSS5', message='ConditionSS5 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = vol_high and pump and (diff > (shooting_starTH*2.5)) and (u_wick > (diff * shooting_star_close)), title='ConditionSS6', message='ConditionSS6 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = vol_xhigh and pump and (diff > (shooting_starTH*2.75)) and (u_wick > (diff * shooting_star_close)), title='ConditionSS7', message='ConditionSS7 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = vol_xlow and dump and (diff < (falling_knifeTH*2)) and ((l_wick*-1) < (diff * falling_knife_close)), title='ConditionFK8', message='ConditionFK8 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = vol_xlow and dump[1] and ((diff[1] + diff) < (falling_knifeTH*2)) and ((l_wick*-1) < (diff * falling_knife_close)) and (diff < open_short) , title='ConditionFK9', message='ConditionFK9 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = vol_low and dump and  (diff < (falling_knifeTH*2)) and ((l_wick*-1) < (diff * falling_knife_close)), title='ConditionFK10', message='ConditionFK10 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = vol_low and dump[1] and ((diff[1] + diff) < (falling_knifeTH*2)) and ((l_wick*-1) < (diff * falling_knife_close)) and (diff < open_short), title='ConditionFK11', message='ConditionFK11 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = vol_med and dump and (diff < (falling_knifeTH*2)) and ((l_wick*-1) < (diff * falling_knife_close)), title='ConditionFK12', message='ConditionFK12 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = vol_high and dump and (diff < (falling_knifeTH*2.5)) and ((l_wick*-1) < (diff * falling_knife_close)), title='ConditionFK13', message='ConditionFK13 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = vol_xhigh and dump and (diff < (falling_knifeTB.75)) and ((l_wick*-1) < (diff * falling_knife_close)), title='ConditionFK14', message='ConditionFK14 | {{ticker}}@{{close}} | ({{interval}})')
////on pause pending review// alertcondition(condition = (shootingStar[1] or pump[1]) and (diffShort or (diff < open_short)), title='ConditionReboundShortSS15', message='ConditionReboundShortSS15 | {{ticker}}@{{close}} | ({{interval}})')
////on pause pending review// alertcondition(condition = (fallingKnife[1] or dump[1]) and (diffLong or (diff > open_long)), title='ConditionReboundLongFK16', message='ConditionReboundLongFK16 | {{ticker}}@{{close}} | ({{interval}})')

// alertcondition(condition = rocpeak and gpeak and (green < 50) and (scaled_atr_roc < eom) and (redfall or lsmafall) and not (krise[1] or greenrise[1]) and not blumoonrise, title='ConditionrocpeakCloseLong 1', message='ConditionrocpeakCloseLong1 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = rocpeak and ((gpeak or kpeak or PApeak or lsmapeak)) and (rpeak or lsmapeak) and not blumoonrise and ((green[1] >= 100) or (k[1] >= 99) or (PA[1] >= 100) or (lsma[1] > 100)) and not (krise[1] or greenrise[1]), title='ConditionrocpeakCloseLong 2', message='ConditionrocpeakCloseLong2 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = allpeak and ((green[1] > 90) or (PA[1] > 90) or (k[1] > 90)) and not (krise[1] or greenrise[1]) and not blumoonrise and (green < 50), title='ConditionrocpeakCloseLong 3', message='ConditionrocpeakCloseLong3 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = rocpeak[1] and ((gpeak[1] or kpeak[1] or PApeak[1])) and (rpeak or lsmapeak) and not ttl and not (krise[1] or greenrise[1]) and not blumoonrise and ((green[2] >= 100) or (k[2] >= 99) or (PA[2] >= 100)) and ((red[1] > 90) or (lsma[1] > 90)) and not ttl and not (krise[1] or greenrise[1]) and (green < 50), title='ConditionrocpeakCloseLong4', message='ConditionrocpeakCloseLong 4 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = rocpeak[2] and ((gpeak[2] or kpeak[2] or PApeak[2])) and (rpeak[2] or lsmapeak[2]) and not (krise[1] or greenrise[1]) and (green < 50) and ((green[2] >= 100) or (k[2] >= 99) or (PA[2] >= 100)) and ((red[1] > 90) or (lsma[1] >= 90)) and not ttl and not (krise[1] or greenrise[1]) and not blumoonrise, title='ConditionrocpeakCloseLong5', message='ConditionrocpeakCloseLong5 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = rocpeak and gpeak and kpeak and (k[1] >= 99) and (green[1] >= 100) and kfall and greenfall and rocfall and not (krise[1] or greenrise[1]) and not blumoonrise and (green < 50) , title='ConditionrocpeakCloseLong6', message='ConditionrocpeakCloseLong6 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = allpeak and ((green[1] > 90) or (PA[1] > 90) or (k[1] > 90)) and not (krise[1] or greenrise[1]) and (green < 50) and not blumoonrise, title='ConditionrocpeakCloseLong 7', message='ConditionrocpeakCloseLong7 | {{ticker}}@{{close}} | ({{interval}})') 
// alertcondition(condition = rocdip and gdip and (green > 50) and (scaled_atr_roc > eom) and not (redfall and lsmafall) and not (kfall[1] or greenfall[1]) and not blumoonfall, title='Conditionrocdipcshort 1', message='Conditionrocdipcshort1 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition =  (zlemarise and dadiffg) and ok_long and ((tbs > tbs_open_long) or diffLong) and (diff > 0), title='ConditionLong 17', message='ConditionLong17 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = zlemafall[1] and dadiffs[1] and tts[1] and (barstate.isconfirmed and zlemarise) and ok_long and ((tbs > tbs_open_long) or diffLong) and (diff > 0), title='ConditionLong 18', message='ConditionLong18 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = tts[1] and not tts and (diff[1] > 0) and (diff > 0) and (k > 20) and ok_long and ((tbs > tbs_open_long) or diffLong) and (diff > 0), title='ConditionLong 19', message='ConditionLong19 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ((roc > eom) or (scaled_atr_roc > eom)) and (zlemarise and dadiffg) and krise and ((tbs > tbs_open_long) or diffLong) and (diff > 0) and ok_long, title='ConditionLong 20', message='ConditionLong20 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (scaled_atr_roc>=eom) and not (roc < eom) and (green > 50) and ((tbs > tbs_open_long) or diffLong) and (diff > 0) and ok_long, title='ConditionLong 21', message='ConditionLong21 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = allrise and zlemarise and (green > 50) and ((tbs > tbs_open_long) or diffLong) and (diff > 0) and ok_long, title='ConditionLong 22', message='ConditionLong22 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = barstate.isconfirmed and tts[1] and not tts and greenrise and not (rocpeak or gpeak) and ((tbs > tbs_open_long) or diffLong) and (diff > 0) and ok_long, title='ConditionLong 23', message='ConditionLong23 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = barstate.isconfirmed and ttl and ((tbs > tbs_open_long) or diffLong) and (diff > 0) and ok_long, title='ConditionLong 24', message='ConditionLong24 | {{ticker}}@{{close}} | ({{interval}})')

// alertcondition(condition = rocdip[1] and ((gdip[1] or kdip[1] or PAdip[1])) and (rdip or lsmadip) and not tts and not (kfall[1] or greenfall[1]) and ((green[2] <= 0) or (k[2] <= 1) or (PA[2] <= 0)) and ((red[1] < 10) or (lsma[1] <= 10)) and not tts and not (kfall[1] or greenfall[1]) and (green > 50) and not blumoonfall, title='Conditionrocdipcshort 2', message='Conditionrocdipcshort2 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = rocdip[2] and ((gdip[2] or kdip[2] or PAdip[2])) and (rdip[2] or lsmadip[2]) and not (kfall[1] or greenfall[1]) and ((green[2] <= 0) or (k[2] <= 1) or (PA[2] <= 0)) and ((red[1] < 10) or (lsma[1] <= 10)) and not tts and not (kfall[1] or greenfall[1]) and (green > 50) and not blumoonfall , title='Conditionrocdipcshort 3', message='Conditionrocdipcshort3 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = rocdip and gdip and kdip and (k[1] <= 1) and (green[1] <= 0) and krise and greenrise and rocrise and not (kfall[1] or greenfall[1]) and (green > 50) and not blumoonfall , title='Conditionrocdipcshort 4', message='Conditionrocdipcshort4 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = alldip and ((green[1] < 10 or (PA[1] < 10) or k[1] < 10)) and not (kfall[1] or greenfall[1]) and (green > 50) and not blumoonfall, title='Conditionrocdipcshort 5', message='Conditionrocdipcshort5 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = tts[4] and kdip[1] and zlemarise and diffLong and not diffFlat_long and ok_long and ((tbs > tbs_open_long) or diffLong) and (diff > 0), title='ConditionLong 34', message='ConditionLong34 double peak | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = tts[3] and kdip and zlemarise and diffLong and not diffFlat_long and ok_long and ((tbs > tbs_open_long) or diffLong) and (diff > 0), title='ConditionLong 35', message='ConditionLong35 double peak | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = tts[2] and kdip and zlemarise and diffLong and not diffFlat_long and ok_long and ((tbs > tbs_open_long) or diffLong) and (diff > 0), title='ConditionLong 36', message='ConditionLong36 double peak | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = tts[1] and kdip and zlemarise and diffLong and not diffFlat_long and ok_long and ((tbs > tbs_open_long) or diffLong) and (diff > 0), title='ConditionLong 37', message='ConditionLong37 double peak | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = tts[1] and not tts and diffLong and zlemarise and dadiffg and (green > 50) and allrise and redrise and lsmarise and ok_long, title='ConditionLong 38', message='ConditionLong38 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = tts[2] and not tts and diffLong and zlemarise and dadiffg and (green > 50) and allrise and redrise and lsmarise and ok_long, title='ConditionLong 39', message='ConditionLong39 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ttl[1] and not ttl and alldip and (redrise or lsmarise) and (green > 60) and kgda_ok and ok_long , title='ConditionLong 40', message='ConditionLong40 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ttl[2] and not ttl and alldip and (redrise or lsmarise) and (green[1] > 75) and (green > 50) and kgda_ok and ok_long , title='ConditionLong 41', message='ConditionLong41 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ttl[3] and not ttl and alldip and (redrise or lsmarise) and (green[2] > 75) and (green > 50) and kgda_ok and ok_long , title='ConditionLong 42', message='ConditionLong42 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = diffLong and krise and greenrise and rocrise and dadiffg and zlemarise and ok_long and not diffFlat_long and ((tbs > tbs_open_long) or diffLong) and (diff > 0), title='ConditionLong 43', message='ConditionLong43 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = diffLong and (roc > eom) and zlemarise and ok_long and not diffFlat_long and ((tbs > tbs_open_long) or diffLong) and (diff > 0), title='ConditionLong 44', message='ConditionLong44 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = diffLong and kdip and gdip and rocdip and (ema5 > ema50) and zlemarise and dadiffg and ok_long and not diffFlat_long and ((tbs > tbs_open_long) or diffLong) and (diff > 0), title='ConditionLong 45', message='ConditionLong45 | {{ticker}}@{{close}} | ({{interval}})')

// alertcondition(condition = diffLong and kdip and gdip[1] and rocdip[1] and (ema5 > ema50) and zlemarise and dadiffg and ok_long and not diffFlat_long and ((tbs > tbs_open_long) or diffLong) and (diff > 0), title='ConditionLong 46', message='ConditionLong46 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = diffLong and kdip[1] and rocdip[1] and (ema5 > ema50) and zlemarise and dadiffg and ok_long and not diffFlat_long and ((tbs > tbs_open_long) or diffLong) and (diff > 0), title='ConditionLong 47', message='ConditionLong47 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (roc > eom) and diffLong and (zlemarise or dadiffg) and ok_long and not diffFlat_long and ((tbs > tbs_open_long) or diffLong) and (diff > 0), title='ConditionLong 48', message='ConditionLong48 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (roc > eom) and diffLong and tts[1] and not tts and ok_long and ((tbs > tbs_open_long) or diffLong) and (diff > 0), title='ConditionLong 49', message='ConditionLong49 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (roc > eom) and tts[1] and not tts and zlemarise and dadiffg and ok_long and ((tbs > tbs_open_long) or diffLong) and (diff > 0), title='ConditionLong 50', message='ConditionLong50 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ((roc > eom) or (scaled_atr_roc > eom)) and ttl and not diffFlat_long and ok_long and ((tbs > tbs_open_long) or diffLong) and (diff > 0), title='ConditionLong 51', message='ConditionLong51 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = zlemarise and dadiffg and kdip and gdip and rocdip and ((k[1] < 10) or (green[1] < 10)) and not diffFlat_long and ok_long and ((tbs > tbs_open_long) or diffLong) and (diff > 0), title='ConditionLong 52', message='ConditionLong52 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = zlemarise and dadiffg and allrise and (diff > 0) and ok_long and (((k>50) and (green>50)) or ((k>50) and (PA>50)) or ((green>50) and (PA>50))) and (diff > 0) and ok_long and ((tbs > tbs_open_long) or diffLong) and (diff > 0), title='ConditionLong 53', message='ConditionLong53 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = long[1] and ttl and ok_long , title='ConditionLong 54', message='ConditionLong54 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = rocdip[1] and gdip[1] and (green[2] < 0) and rdip and lsmadip and ((red[1] < 10) or (lsma[1] < 10)) and diffLong and (greenrise or redrise) and ok_long, title='ConditionLong 55', message='ConditionLong55 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = rocdipcshort and diffLong and not tts and ok_long, title='ConditionLong 56', message='ConditionLong56 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = rocdipcshort and diffLong and (tbs[1] < -3) and ok_long , title='ConditionLong 57', message='ConditionLong57 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ok_long and allrise and redrise and lsmarise, title='ConditionLong 58', message='ConditionLong58 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = diffLong and allrise and alldip and rdip and (green > 60) and (roc > high) and ok_long  , title='ConditionLong 59', message='ConditionLong59 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = diffLong and allrise and alldip and (green > 60) and (k > 60) and (roc > high and ok_long) , title='ConditionLong 60', message='ConditionLong60 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ttl and not closelong and not (diff <= 0) and kgda_ok and not vol_xlow, title='ConditionLong 61', message='ConditionLong61 | {{ticker}}@{{close}} | ({{interval}})')

// alertcondition(condition = blumoonrise and (roc > high) and not vol_xlow and (diff > 0) and (green > 50) and kgda_ok and allrise, title='ConditionLong 62', message='ConditionLong62 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (lsma[3] < 0) and blumoonrise[2] and blumoonrise[1] and blumoonrise and (atr6[1] > atr6) and (roc[2] > eom[2]) and (roc[1] > low[1]) and (roc > low) and redrise and not vol_xlow, title='ConditionLong 63', message='ConditionLong63 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = blumoonrise[2] and blumoonrise[1] and blumoonrise and ttl and (roc[2] > eom[2]) and (roc[1] > high[1]) and (roc > high) and redrise and kgda_ok and (green > 50) and (diff > .05) and not vol_xlow, title='ConditionLong 64', message='ConditionLong64 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = rocpeakclong and (scaled_atr_roc < low) and ok_clong and not ttl, title='CloseLong 65', message='CloseLong65 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = rocpeakclong[1] and (scaled_atr_roc < low) and ok_clong and not ttl and not rocdip, title='CloseLong 66', message='CloseLong66 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = rocpeakclong[2] and ((roc < low) or (scaled_atr_roc < low)) and ok_clong and not ttl and not rocdip[1] and not rocdip, title='CloseLong 67', message='CloseLong67 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = rocpeakclong and ttl[1] and not ttl, title='CloseLong 68', message='CloseLong68 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = not diffLong and ttl[1] and not ttl and allfall and (scaled_atr_roc < low) and ok_clong and redfall and (green[1] < 80) and (green < 60), title='CloseLong 69', message='CloseLong69 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ttl[1] and not ttl and diffShort and allfall and redfall and (green[1] < 80) and (green < 60), title='CloseLong 70', message='CloseLong70 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ttl[1] and not ttl and zlemafall and dadiffs and (scaled_atr_roc < low) and ok_clong and redfall and (green[1] < 80) and (green < 60) and greenfall and kfall, title='CloseLong 71', message='CloseLong71 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ttl[1] and not ttl and zlemarise[1] and zlemafall and rocpeak and kpeak and gpeak and ((k[1] >= 95) or (green[1] >= 95)) and (green[1] < 80) and (green < 60) and kfall and greenfall and redfall and lsmafall, title='CloseLong 72', message='CloseLong72 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ttl[1] and not ttl and zlemarise[1] and zlemafall and diffShort and (k[1] >= 95) and (green[1] >= 95) and (k <= 90) and (green <= 60) and kfall and greenfall and PAfall and (roc < low), title='CloseLong 73', message='CloseLong73 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ttl[1] and not ttl and (green <= 60) and allfall and redfall and ((red[1] >= 80) or (lsma[1] >= 80)) and ok_clong , title='CloseLong 74', message='CloseLong74 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ttl[2] and not ttl and zlemafall and dadiffs and diffShort and ok_clong and redfall and (green < 50) and greenfall and kfall, title='CloseLong 75', message='CloseLong75 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ttl[2] and not ttl and zlemafall and dadiffs and ok_clong  and redfall and (green < 50) and greenfall and kfall, title='CloseLong 76', message='CloseLong76 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (ttl[1] or ttl[2] or ttl[3]) and not ttl and allfall and (rpeak or rpeak[1]) and lsmapeak and (roc < low) and ok_clong, title='Conditionfailsafe clong 77', message='CloseLong77 | {{ticker}}@{{close}} | ({{interval}})')

// alertcondition(condition = ttl[2] and not ttl and (green < 50) and (roc[1] < low) and (roc < low) and (rpeak or lsmapeak or rpeak[1] or lsmapeak[1]) and ok_clong, title='Conditionfailsafe clong 78', message='CloseLong78 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (ttl[2] or ttl[1]) and not ttl and (rpeak[1] or rpeak or lsmapeak[1] or lsmapeak) and allfall and (green[1] < 80) and (green < 60) and (roc < eom) and (allpeak[1] or allpeak) and ok_clong, title='Conditionfailsafe clong 79', message='CloseLong79 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ttl[2] and not ttl[1] and not ttl and (rpeak[1] or rpeak or lsmapeak[1] or lsmapeak) and allfall and (green[1] < 80) and (green < 60) and (roc < eom) and (allpeak[1] or allpeak) and ok_clong, title='Conditionfailsafe clong 79a', message='CloseLong79a | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ttl[1] and not ttl and (rpeak or lsmapeak) and (red[1] > 95) and (lsma[1] > 95) and allfall and ok_clong and kgda_ok, title='Conditionfailsafe clong 80', message='CloseLong80 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ttl[2] and not ttl[1] and not ttl and (rpeak or lsmapeak) and (red[1] > 95) and (lsma[1] > 95) and allfall and ok_clong, title='Conditionfailsafe clong 80a', message='CloseLong80a | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (pump[2] or shootingStar[2]) and (roc < low) and PAfall and ((green < 50) or (k < 50)) and (barstate.isconfirmed and (diffShort or (diff[1] < 0) and (diff < 0))), title='CloseLong 81', message='CloseLong81 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (pump[1] or shootingStar[1]) and (roc < low) and PAfall and ((diff * -1) + u_wick > (diff[1]*.5)) and ok_clong, title='CloseLong 82', message='CloseLong82 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (pump[1] or shootingStar[1]) and (ttl or ttl[1]) and (diff < 0) and (k[1]>95) and (green[1]>95) and rocfall and (kfall or greenfall) and diffShort and ok_clong , title='CloseLong 83', message='CloseLong83 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = vol_xlow and (tts[4] or tts[3]) and not tts and allfall and redfall and lsmafall and ((red[4] > 75) or (red[3] > 75)) and (green < 50) and (roc < eom) and ok_clong , title='CloseLong 84', message='CloseLong84 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ttl[3] and not ttl and (vol_xlow or vol_low) and (green < 50) and (roc < low) and diffShort and ok_clong, title='Condition clong 85', message='CloseLong85 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = vol_xlow and ttl[1] and not ttl and (rpeak[1] or rpeak) and allfall and (green <= 60) and (roc < low) and (diff < 0) and ok_clong , title='CloseLong 86', message='CloseLong86 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = vol_xlow and ttl[1] and not ttl and allpeak and ((green[1] > 95) or (k[1] > 95)) and rpeak and (red[1] > 80) and (green < 80) and ok_clong  , title='CloseLong 87', message='CloseLong87 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = vol_xlow and allpeak and allfall and ((green[1] >= 90) or (k[1] >= 90)) and (diff < 0) and (roc < low) and (green < 75) and (rpeak or lsmapeak) and ok_clong , title='CloseLong 88 ', message='CloseLong88 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = allpeak and allfall and greenfall[1] and (green < 50) and (diff < 0) and (roc < eom) and ok_clong , title='CloseLong 88b ', message='CloseLong88b | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = zlemafall and dadiffs and diffShort and ok_clong and redfall and (green < 80) and (k < 80) and greenfall and kfall, title='CloseLong 89', message='CloseLong89 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = gpeak[1] and kpeak and (roc < low) and rocfall and greenfall and kfall and (k[1] > 80) and ((green < 50) or (k < 50)) and ok_clong, title='CloseLong 90', message='CloseLong90 | {{ticker}}@{{close}} | ({{interval}})')


// alertcondition(condition = rocpeak and kpeak and gpeak and ((k[1] >90) or (green[1] > 90)) and (roc < low) and allfall and ((green < 60) or (k < 60)) and not rocrise and ok_clong, title='CloseLong 91', message='CloseLong91 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (green < 25) and (k < 25) and allfall and kgda_ok and ok_clong, title='Conditionfailsafe clong 92', message='Conditionfailsafe clong 92 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (ttl[2] or ttl[1]) and not ttl and diffShort and r_bpeak and ((red[2] > 95) or (red[1] > 95) or (lsma[2] > 95) or (lsma[1] > 95)) and (green[1] < 80) and (green < 60) and allfall and (roc < low) and kgda_ok, title='CloseLong 93', message='CloseLong93 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ttl[1] and not ttl and r_bpeak and ((red[1] > 95) or (lsma[1] > 95)) and (green < 80) and allfall and (roc < low) and kgda_ok and not blumoonrise, title='CloseLong 94', message='CloseLong94 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ttl[2] and not ttl[1] and not ttl and ((green[1] > 95) or (k[1] > 95) or (green[2] > 95) or (k[2] > 95)) and allpeak and allfall and (rpeak or rpeak[1] or lsmapeak or lsmapeak[1]) and (diffShort or diffShort[1]) and ((red[1]>85) or (lsma[1]>85) or (red[2]>85) or (lsma[2]>85)) and (green < 80), title='CloseLong 94a', message='CloseLong94a | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ((green[1] > 90) or (k[1] > 90) or (green[2] > 90) or (k[2] > 90)) and allpeak and (rpeak or lsmapeak) and ((red[1]>85) or (lsma[1]>85) or (red[2]>85) or (lsma[2]>85)) and diffShort and (roc > eom) and kgda_ok and (green < 80) , title='CloseLong 94b', message='CloseLong94b | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ((green[1] > 90) or (k[1] > 90) or (green[2] > 90) or (k[2] > 90)) and allpeak and (rpeak or lsmapeak) and ((red[1]>85) or (lsma[1]>85) or (red[2]>85) or (lsma[2]>85)) and diffShort and (roc > eom) and kgda_ok, title='CloseLong 94c', message='CloseLong94c | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition =  zlemarise[1] and dadiffg[1] and ttl[1] and (barstate.isconfirmed and zlemafall) and not (alldip and (green < 10) and (k < 10)) and ok_short and ((tbs < tbs_open_short) or diffShort) and (diff < 0), title='Conditionshort 95', message='Conditionshort95 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ttl[1] and not ttl and (diff[1] < 0) and (diff < 0) and (k < 80) and not (alldip and (green < 10) and (k < 10)) and ok_short and ((tbs < tbs_open_short) or diffShort) and (diff < 0), title='Conditionshort 96', message='Conditionshort96 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = allfall and zlemafall and (green < 50) and ((tbs < tbs_open_short) or diffShort) and (diff < 0) and ok_short, title='Conditionshort 97', message='Conditionshort97 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = barstate.isconfirmed and ttl[1] and not ttl and greenfall and not (rocdip or gdip) and ((tbs < tbs_open_short) or diffShort) and (diff < 0) and ok_short, title='Conditionshort 98', message='Conditionshort98 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = barstate.isconfirmed and tts and ((tbs < tbs_open_short) or diffShort) and (diff < 0) and ok_short, title='Conditionshort 99', message='Conditionshort99 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ttl[1] and not ttl and greenfall[1] and greenfall and ((tbs < tbs_open_short) or diffShort) and (diff < 0) and ok_short, title='Conditionshort 100', message='Conditionshort100 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (diff < 0) and kfall and greenfall and rocfall and tts and ok_short and not diffFlat_short and ((tbs < tbs_open_short) or diffShort) and (diff < 0), title='Conditionshort 101', message='Conditionshort101 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (diff < 0) and kfall and greenfall and rocfall and (roc < eom) and diffShort and ok_short and not diffFlat_short and ((tbs < tbs_open_short) or diffShort) and (diff < 0), title='Conditionshort 102', message='Conditionshort102 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = rocdip and kdip and diffShort and ok_short and not diffFlat_short and ((tbs < tbs_open_short) or diffShort) and (diff < 0), title='Conditionshort 103', message='Conditionshort103 | {{ticker}}@{{close}} | ({{interval}})')

// alertcondition(condition = rocdip and gdip and diffShort and ok_short and not diffFlat_short and ((tbs < tbs_open_short) or diffShort) and (diff < 0), title='Conditionshort 104', message='Conditionshort104 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition =  gdip and kdip and diffShort and ok_short and not diffFlat_short and ((tbs < tbs_open_short) or diffShort) and (diff < 0), title='Conditionshort 105', message='Conditionshort105 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = diffShort and tts[3] and kpeak and zlemafall and ((tbs < tbs_open_short) or diffShort) and (diff < 0) and ok_short, title='Conditionshort 106', message='Conditionshort106 double peak | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ttl[4] and kpeak and zlemafall and diffShort and ((tbs < tbs_open_short) or diffShort) and (diff < 0) and ok_short, title='Conditionshort 107', message='Conditionshort107 double peak | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ttl[4] and kpeak[1] and zlemafall and ((tbs < tbs_open_short) or diffShort) and (diff < 0) and ok_short, title='Conditionshort 108', message='Conditionshort108 double peak | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ttl[3] and kpeak and zlemafall and ((tbs < tbs_open_short) or diffShort) and (diff < 0) and ok_short, title='Conditionshort 109', message='Conditionshort109 double peak | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ttl[2] and kpeak and zlemafall and ((tbs < tbs_open_short) or diffShort) and (diff < 0) and ok_short, title='Conditionshort 110', message='Conditionshort110 double peak | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ttl[1] and kpeak and zlemafall and ((tbs < tbs_open_short) or diffShort) and (diff < 0) and ok_short, title='Conditionshort 111', message='Conditionshort111 double peak | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ttl[1] and not ttl and diffLong and zlemafall and dadiffs and ((green < 50) or (k < 50)) and allfall and redfall and lsmafall and not vol_xlow, title='Conditionshort 112', message='Conditionshort112 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ttl[2] and not ttl and diffLong and zlemafall and dadiffs and ((green < 50) or (k < 50)) and allfall and redfall and lsmafall and not vol_xlow , title='Conditionshort 113', message='Conditionshort113 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = diffShort and kfall and greenfall and rocfall and dadiffs and zlemafall and ok_short and not diffFlat_short and ((tbs < tbs_open_short) or diffShort) and (diff < 0), title='Conditionshort 114', message='Conditionshort114 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = diffShort and kpeak and gpeak and rocpeak and (ema50 > ema5) and zlemafall and dadiffs and ok_short and not diffFlat_short and ((tbs < tbs_open_short) or diffShort) and (diff < 0), title='Conditionshort 115', message='Conditionshort115 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = diffShort and kpeak and gpeak[1] and rocpeak[1] and (ema50 > ema5) and zlemafall and dadiffs and ok_short and not diffFlat_short and ((tbs < tbs_open_short) or diffShort) and (diff < 0), title='Conditionshort 116', message='Conditionshort116 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = diffShort and kpeak[1] and rocpeak[1] and (ema50 > ema5) and zlemafall and dadiffs and ok_short and not diffFlat_short and ((tbs < tbs_open_short) or diffShort) and (diff < 0), title='Conditionshort 117', message='Conditionshort117 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (roc < eom) and diffShort and (ema50 > ema5) and (zlemafall or dadiffs) and ok_short and not diffFlat_short and ((tbs < tbs_open_short) or diffShort) and (diff < 0), title='Conditionshort 118', message='Conditionshort118 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (roc < eom) and diffShort and ttl[1] and not ttl and ok_short and ((tbs < tbs_open_short) or diffShort) and (diff < 0), title='Conditionshort 119', message='Conditionshort119 | {{ticker}}@{{close}} | ({{interval}})')

// alertcondition(condition = (roc < eom) and ttl[1] and not ttl and zlemafall and dadiffs and ok_short and ((tbs < tbs_open_short) or diffShort) and (diff < 0), title='Conditionshort 120', message='Conditionshort120 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ttl[1] and not ttl and allfall and (kslope < -15) and (diff < 0) and ((tbs < tbs_open_short) or diffShort) and (diff < 0) and kgda_ok and ok_short, title='Conditionshort 121', message='Conditionshort121 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ((roc < eom) or (scaled_atr_roc < eom)) and tts and not diffFlat_short and ok_short and ((tbs < tbs_open_short) or diffShort) and (diff < 0), title='Conditionshort 122', message='Conditionshort122 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = zlemafall and dadiffs and kpeak and gpeak and rocpeak and ((k[1] > 90) or (green[1] > 90)) and not diffFlat_short and ok_short and ((tbs < tbs_open_short) or diffShort) and (diff < 0), title='Conditionshort 123', message='Conditionshort123 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = rocpeak[1] and gpeak[1] and (green[2] > 100) and rpeak and lsmapeak and ((red[1] > 90) or (lsma[1] > 90)) and diffShort and (greenfall or redfall) and ok_short , title='Conditionshort 124', message='Conditionshort124 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ok_short and allfall and redfall and lsmafall and ok_short, title='Conditionshort 125', message='Conditionshort125 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = diffShort and allfall and allpeak and (green < 40) and (roc < low) and rpeak and ok_short , title='Conditionshort 126', message='Conditionshort126 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = diffShort and allfall and allpeak and (green < 40) and (k < 40) and (roc < low) and ok_short , title='Conditionshort 127', message='Conditionshort127 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = tts and not closeshort and not (diff >= 0) and kgda_ok and not vol_xlow , title='Conditionshort 128', message='Conditionshort128 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = blumoonfall and (roc < low) and not vol_xlow and (diff < 0) , title='Conditionshort 129', message='Conditionshort129 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (lsma[3] > 100) and blumoonfall[2] and blumoonfall[1] and blumoonfall and (atr6[1] < atr6) and (roc[2] < eom[2]) and (roc[1] < low[1]) and (roc < low) and redfall and not vol_xlow , title='Conditionshort 130', message='Conditionshort130 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = blumoonfall[2] and blumoonfall[1] and blumoonfall and tts and (roc[2] < eom[2]) and (roc[1] < low[1]) and (roc < low) and redfall and kgda_ok and (green < 50) and (diff < -.05) and not vol_xlow , title='Conditionshort 131', message='Conditionshort131 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = rocdipcshort and (scaled_atr_roc > high) and ok_cshort and not tts and (roc > high), title='CloseShort 132', message='ConditionCloseShort132 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = rocdipcshort[1] and (scaled_atr_roc > high) and ok_cshort and not tts and not rocpeak and (roc > high), title='CloseShort 133', message='ConditionCloseShort133 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = rocdipcshort[2] and ((roc > high) or (scaled_atr_roc > high)) and ok_cshort and not tts and not rocpeak and not rocpeak[1] and (roc > high), title='CloseShort 134', message='ConditionCloseShort134 | {{ticker}}@{{close}} | ({{interval}})')

// alertcondition(condition = rocdipcshort and tts[1] and not tts and (roc > high), title='CloseShort 135', message='ConditionCloseShort135 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ((roc > high) or (scaled_atr_roc > high)) and ok_cshort and not tts and not (redfall or lsmafall) and allrise and (green > 50), title='CloseShort 136', message='ConditionCloseShort136 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = not diffShort and ttl[1] and not ttl and allrise and (scaled_atr_roc > high) and ok_cshort and redrise and (green > 20) and (k > 20) and (roc > high), title='CloseShort 137', message='ConditionCloseShort137 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = tts[1] and not tts and diffLong and allrise and (green[1] > 20) and (green > 40) and (roc > high), title='CloseShort 138', message='ConditionCloseShort138 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = tts[1] and not tts and zlemarise and dadiffg and (scaled_atr_roc > high) and ok_cshort and (green[1] > 20) and (green > 40) and greenrise and krise and (roc > high), title='CloseShort 139', message='ConditionCloseShort139 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = tts[1] and not tts and zlemafall[1] and zlemarise and (k[1] <= 5) and (green[1] <= 5) and (green[1] > 20) and (green > 40) and krise and greenrise and PArise and (roc > high), title='CloseShort 140', message='ConditionCloseShort140 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (tts[2] or tts[1]) and not tts and (rdip[1] or rdip or lsmadip[1] or lsmadip) and allrise and ok_cshort and (roc > eom) and (alldip[1] or alldip), title='Conditionfailsafe cshort 141 ', message='ConditionCloseShort141 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (tts[2] or tts[1]) and not tts and (rdip or lsmadip) and (red[1] < 5) and (lsma[1] < 5) and allrise and (green > 25) and not blumoonfall, title='Conditionfailsafe cshort 142', message='ConditionCloseShort142 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = tts[2] and not tts and zlemarise and dadiffg and diffLong and ok_cshort and greenrise and krise and (roc > high), title='CloseShort 143', message='ConditionCloseShort143 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = tts[2] and not tts and zlemarise and dadiffg and ok_cshort and ok_cshort and greenrise and krise and (roc > high), title='CloseShort 144', message='ConditionCloseShort144 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = tts[2] and not tts and (green > 50) and (roc[1] > high) and (roc > high) and (rdip or lsmadip or rdip[1] or lsmadip[1]) and redrise and lsmarise and ok_cshort , title='Conditionfailsafe cshort 145', message='ConditionCloseShort145 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (tts[1] or tts[2] or tts[3]) and not tts and allrise and (rdip or rdip[1]) and lsmadip and (green >= 50) and (roc > high) and ok_cshort, title='Conditionfailsafe cshort 146', message='ConditionCloseShort146 failsafe | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = zlemarise and dadiffg and diffLong and ok_cshort and (green[1] > 25) and (green > 50) and greenrise and krise and (roc > high), title='CloseShort 147', message='ConditionCloseShort147 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = tts[1] and not tts and zlemafall[1] and zlemarise and alldip and ((k[1] <= 5) or (green[1] <= 5)) and (green[1] > 20) and (green > 40) and allrise and redrise and lsmarise and (roc > high) and not blumoonfall, title='CloseShort 148', message='ConditionCloseShort148 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = gdip[1] and kdip and (roc > high) and rocrise and greenrise and krise and (k[1] < 20) and (green > 50) and (roc > high) and kgda_ok and not blumoonfall, title='CloseShort 149', message='ConditionCloseShort149 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (rdip or lsmadip) and ((red < 20) or (lsma < 20)) and zlemafall[1] and zlemarise and allrise and (roc > high) and not rocfall and ok_cshort and (green > 50) , title='CloseShort 150', message='ConditionCloseShort150 | {{ticker}}@{{close}} | ({{interval}})')

// alertcondition(condition = (dump[2] or dump[1] or fallingKnife[2] or fallingKnife[1]) and (diff > open_long) and (roc > high) and ok_cshort and allrise, title='CloseShort 151', message='ConditionCloseShort151 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (dump[3] or dump[2] or dump[1] or fallingKnife[3] or fallingKnife[2] or fallingKnife[1]) and (diff > open[3]) and (roc > high) and ok_cshort and allrise, title='CloseShort 152', message='ConditionCloseShort152 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (dump[2] or dump[1]) and gdip and rocrise and greenrise and (diff[1] > 0.05) and (diff > 0.05) and (diff > diff[1]) and (green > green[1]) and kgda_ok and zlemarise, title='Conditionfailsafe cshort 153', message='ConditionCloseShort153 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = vol_xlow and (ttl[4] or ttl[3]) and not ttl and allrise and redrise and lsmarise and ((red[4] < 25) or (red[3] < 25)) and (green > 50) and (roc > eom) and ok_cshort, title='ConditionCloseShort 154', message='ConditionCloseShort154 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = tts[3] and not tts and (vol_xlow or vol_low) and  (green > 50) and (roc > high) and diffLong and not blumoonfall , title='ConditionCloseShort 155', message='ConditionCloseShort155 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = vol_xlow and tts[1] and not tts and (rdip[1] or rdip) and allrise and (green[1] > 20) and (green > 40) and (roc > high) and (diff > 0), title='CloseShort 156', message='ConditionCloseShort156 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = vol_xlow and tts[1] and not tts and alldip and ((green[1] < 5) or (k[1] < 5)) and rdip and (red[1] < 20) and (green[1] > 20) and (green > 40)  , title='CloseShort 157', message='ConditionCloseShort157 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = vol_xlow and alldip and allrise and ((green[1] <= 10) or (k[1] <= 10)) and (diff > 0) and (roc > high) and (green > 25) and (rdip or lsmadip) and not blumoonfall , title='CloseShort 158', message='ConditionCloseShort158 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (green > 75) and (k > 75) and allrise and kgda_ok and not blumoonfall and not vol_xlow, title='CloseShort 159', message='ConditionCloseShort159 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (diff[3] >= 0) and (diff[2] >= 0) and (diff[1] >= 0) and (diff > 0) and (roc > high) and rdip and lsmadip and ok_cshort, title='CloseShort 160', message='ConditionCloseShort160 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = alldip and allrise and greenrise[1] and greenrise and (green <= 50) and (diff > 0) and (roc > eom) and ok_cshort, title='CloseShort161', message='ConditionCloseShort161 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (tts[2] or tts[1]) and not tts and diffLong and r_bdip and ((red[2] < 5) or (red[1] > 5) or (lsma[2] > 5) or (lsma[1] > 5)) and (green[1] > 20) and (green > 40) and allrise and (roc > high) and kgda_ok, title='CloseShort 162', message='ConditionCloseShort162 | {{ticker}}@{{close}} | ({{interval}})')

// alertcondition(condition = tts[1] and not tts and ((green[1] < 5) or (k[1] < 5) or (green[2] < 5) or (k[2] < 5)) and alldip and allrise and (rdip or rdip[1] or lsmadip or lsmadip[1]) and (diffLong or diffLong[1]) and kgda_ok and ((red[1]<15) or (lsma[1]<15) or (red[2]<15) or (lsma[2]<15)) and (green > 20), title='CloseShort 162a', message='ConditionCloseShort162a | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ((green[1] < 10) or (k[1] < 10) or (green[2] < 10) or (k[2] < 10)) and alldip and (rdip or lsmadip) and ((red[1]<15) or (lsma[1]<15) or (red[2]<15) or (lsma[2]<15)) and diffLong and (roc > eom) and kgda_ok, title='CloseShort 162b', message='ConditionCloseShort162b | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = tts[2] and not tts[1] and not tts and ((green[1] < 5) or (k[1] < 5) or (green[2] < 5) or (k[2] < 5)) and alldip and allrise and (rdip or rdip[1] or lsmadip or lsmadip[1]) and (diffLong or diffLong[1]) and kgda_ok and ((red[1]<15) or (lsma[1]<15) or (red[2]<15) or (lsma[2]<15)) and (green > 20), title='CloseShort 162c', message='ConditionCloseShort162c | {{ticker}}@{{close}} | ({{interval}})')

// alertcondition(condition = tts[1] and not tts and r_bdip and ((red[1] > 5) or (lsma[1] > 5)) and (green > 20) and allrise and (roc > high) and kgda_ok and not blumoonfall, title='CloseShort 163', message='ConditionCloseShort163 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ttl[1] and not ttl and rpeak and (red[1] > 85) and allfall and not rocrise and (diff >= open_long) and r_ok_L2Short, title='ConditionrevL2Short 164', message='ConditionrevL2Short164 | {{ticker}}@{{close}} | ({{interval}})')

// alertcondition(condition = ttl[1] and not ttl and rpeak and lsmapeak and ((red[1] > 85) or (lsma[1] > 85)) and allfall and not rocrise and (red > 75) and (diff >= open_long) and r_ok_L2Short, title='ConditionrevL2Short 166', message='ConditionrevL2Short166 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ttl[1] and not ttl and rpeak and (lsma[1] > 90) and allfall and not rocrise and (red[1] > 85) and (diff >= open_long) and r_ok_L2Short, title='ConditionrevL2Short 167', message='ConditionrevL2Short167 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = tts[2] and (close < DTSL_Long) and ((red > 85) or (lsma < 85)) and allfall and not rocrise and not ttl and r_ok_L2Short, title='ConditionrevL2Short 168', message='ConditionrevL2Short168 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = rocpeak[1] and kpeak and gpeak and ((k[1] >90) or (green[1] > 90)) and (roc < low) and allfall and ((green < 60) or (k < 60)) and not rocrise and (red > 85) and not ttl and r_ok_L2Short, title='ConditionrevL2Short 169', message='ConditionrevL2Short169 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ttl[1] and not ttl and gpeak[1] and kpeak[1] and ((green[2] > 95) or (k[2] > 95)) and diffShort and allfall and not rocrise and r_ok_L2Short, title='ConditionrevL2Short 170', message='ConditionrevL2Short170 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (rpeak or lsmapeak) and (red[1] > 85) and (lsma > 85) and zlemarise[1] and zlemafall and allfall and (roc < low) and not rocrise and not ttl and r_ok_L2Short, title='ConditionrevL2Short 171', message='ConditionrevL2Short171 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = rocpeak and kpeak and gpeak and ((k[1] > 90) or (green[1] > 90)) and allfall and (roc < low) and zlemarise[1] and zlemafall and not rocrise and (red > 85) and not ttl and r_ok_L2Short, title='ConditionrevL2Short 172', message='ConditionrevL2Short172 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ttl[1] and not ttl and rocpeak and kpeak and gpeak and ((k[1] > 95) or (green[1] > 95)) and allfall and (roc < low) and (red > 85) and (diff >= open_long), title='ConditionrevL2Short 173', message='ConditionrevL2Short173 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ttl[1] and not ttl and rocpeak and kpeak and gpeak and ((k[1] > 98) or (green[1] > 98)) and (roc < low) and (diff >= open_long) and ((red > 85) or (lsma > 85)) and zlemarise[1] and zlemafall and (scaled_atr_roc < eom) and not ttl and r_ok_L2Short, title='ConditionrevL2Short 174', message='ConditionrevL2Short174 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = rocpeak and (kpeak or gpeak) and rocfall and ((k[1] > 90) or (green[1] > 90)) and diffShort and not rocrise and not ttl and r_ok_L2Short, title='ConditionrevL2Short 175', message='ConditionrevL2Short175 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (rpeak and lsmapeak) and (roc < DTSL_Long) and r_ok_L2Short and not ttl, title='ConditionrevL2Short 176', message='ConditionrevL2Short176 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (rpeak and kpeak) and (roc < DTSL_Long) and (redfall or lsmafall) and r_ok_L2Short and not ttl, title='ConditionrevL2Short 177 ', message='ConditionrevL2Short177 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (lsmapeak and kpeak) and (roc < DTSL_Long) and (redfall or lsmafall) and r_ok_L2Short and not ttl, title='ConditionrevL2Short 178', message='ConditionrevL2Short178 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (rocpeak and kpeak) and (roc < DTSL_Long) and (redfall or lsmafall) and r_ok_L2Short and not ttl, title='ConditionrevL2Short 179', message='ConditionrevL2Short179 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (rocpeak and gpeak) and (roc < DTSL_Long) and (redfall or lsmafall) and r_ok_L2Short and not ttl, title='ConditionrevL2Short 180', message='ConditionrevL2Short180 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (pump[1] or shootingStar[1]) and (diff < 0) and diffShort and kgda_ok, title='ConditionrevL2Short 181', message='ConditionrevL2Short181 | {{ticker}}@{{close}} | ({{interval}})')

//// alertcondition(condition = (pump[3] or shootingStar[3]) and (diff[2] < 0) and (diff[1] < 0) and (diff < 0) and (roc < low) and (green <= 50) and allfall and (redfall or lsmafall) and r_ok_L2Short, title='ConditionrevL2Short 182', message='ConditionrevL2Short182 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = clongTSL and diffShort and r_ok_L2Short, title='ConditionrevL2Short 183', message='ConditionrevL2Short183 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = clongTSL[1] and diffShort and r_ok_L2Short, title='ConditionrevL2Short 184', message='ConditionrevL2Short184 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ok_short and allfall and redfall and lsmafall and (diffShort or tts) and r_ok_L2Short, title='ConditionrevL2Short 185', message='ConditionrevL2Short185 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ttl[1] and not ttl and allfall and rocfall and diffShort and (redfall or lsmafall) and ((red[1] > 85) or (red > 85)) and (diff >= open_long) and r_ok_L2Short, title='ConditionrevL2Short 186', message='ConditionrevL2Short186 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ttl[1] and not ttl and allfall and ((scaled_atr_roc < eom) or (roc > low)) and (red[1] > 85) and redfall and ((lsma < 60) or (red < 60)) and r_ok_L2Short, title='ConditionrevL2Short 187', message='ConditionrevL2Short187 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ttl[2] and (diff[2] < 0) and (diff[1] < 0) and (diff < 0) and (roc < low) and (green <= 60) and allfall and (redfall or lsmafall) and r_ok_L2Short, title='ConditionrevL2Short 188', message='ConditionrevL2Short188 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ttl[1] and (diff[1] < 0) and (diff < 0) and diffShort and (roc < low) and (green <= 60) and allfall and (redfall or lsmafall) and r_ok_L2Short, title='ConditionrevL2Short 189', message='ConditionrevL2Short189 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ttl and (diff < -.1) and allpeak and ((green[1] >= 99) or (k[1] >= 99)) and allfall and ((scaled_atr_roc < eom) or (roc < eom)) and r_ok_L2Short, title='ConditionrevL2Short 190', message='ConditionrevL2Short190 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ttl[1] and not ttl and (diff < -.1) and allpeak and ((green[1] >= 99) or (k[1] >= 99)) and allfall and ((scaled_atr_roc < eom) or (roc < eom)) and r_ok_L2Short, title='ConditionrevL2Short 191', message='ConditionrevL2Short191 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ttl[1] and not ttl and (diff < -.1) and allpeak[1] and ((green[2] >= 99) or (k[2] >= 99)) and allfall and ((scaled_atr_roc < eom) or (roc < eom)) and r_ok_L2Short, title='ConditionrevL2Short 192', message='ConditionrevL2Short192 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = allpeak and ((k[1] > 80) or (green[1] > 80)) and ((red[1] < 50) or (lsma[1] < 50)) and diffShort and ((scaled_atr_roc < eom) or (roc < high)) and long2[2] and long2[1] and r_ok_L2Short, title='ConditionrevL2Short 193', message='ConditionrevL2Short193 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ttl[1] and not ttl and (rpeak[1] or rpeak) and allfall and (green <= 60) and (roc < low) and (diff < 0) and r_ok_L2Short, title='ConditionrevL2Short 194', message='ConditionrevL2Short194 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = vol_med and ttl[1] and not ttl and (red > 80) and allrise and ((green[1] >= 95) or (k[1] >= 95)) and allfall and diffShort, title='ConditionrevL2Short 195', message='ConditionrevL2Short195 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ttl[1] and not ttl and allpeak and ((green[1] > 95) or (k[1] > 95)) and rpeak and (red[1] > 80) and (green < 80) and r_ok_L2Short , title='ConditionrevL2Short 196', message='ConditionrevL2Short196 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (golong[3] or golong[2] or golong[1]) and diffShort and redfall and (roc < eom) and allfall and (green < 50), title='ConditionrevL2Short 197', message='ConditionrevL2Short197 | {{ticker}}@{{close}} | ({{interval}})')

// alertcondition(condition = (golong[3] or golong[2] or golong[1]) and diffShort and redfall and (roc < eom) and allfall and (green < 50), title='ConditionrevL2Short 198', message='ConditionrevL2Short198 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ttl[1] and not ttl and ((k[1] > green[1]) and ((k[1]-green[1]) <= 2)) and allfall and diffShort and (green < 75) and (roc < eom), title='ConditionrevL2Short 199', message='ConditionrevL2Short199 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = allpeak and rpeak and (red[1] > 75) and (green[1] > 80) and (k[1] > 80) and diffShort and allfall and (roc < low) and (green < 50) and r_ok_L2Short, title='ConditionrevS2Long 200', message='ConditionrevS2Long200 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (gpeak[1] and PApeak[1] and rocpeak[1] or gpeak[2] and PApeak[2] and rocpeak[2]) and kpeak and allfall and (lsmapeak or rpeak) and (roc < low) and r_ok_L2Short, title='ConditionrevS2Long 201', message='ConditionrevS2Long201 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ttl[1] and not ttl and (green < 75) and (roc < low) and rpeak and lsmapeak and (red[1] > 80) and (lsma[1] > 80) and diffShort and r_ok_L2Short, title='ConditionrevL2Short 202 ', message='ConditionrevL2Short 202 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (ttl[3] or ttl[2] or ttl[1]) and not ttl and (allpeak[2] or allpeak[1] or allpeak) and (rpeak or rpeak[1] or lsmapeak or lsmapeak[1]) and r_ok_L2Short and ((red[2] > 80) or (red[1] > 80) or (lsma[2] > 80) or (lsma[1] > 80)) and (green[1] < 75) and (green < 50) and allfall and (roc < eom) and kgda_ok and r_ok_L2Short , title='Condition revS2Long 203', message='ConditionrevS2Long203 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (ttl[2] or ttl[1]) and not ttl and (rpeak[1] or rpeak or lsmapeak[1] or lsmapeak) and allfall and (green[1] < 75) and (green < 60) and (roc < eom) and (allpeak[1] or allpeak) and not vol_xlow and r_ok_L2Short , title='Condition revS2Long 204', message='ConditionrevS2Long204 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ((ttl[3] and ttl[2] and ttl[1]) or (ttl[4] and ttl[3] and ttl[2])) and not ttl and (diffShort or (roc<eom)) and ((rpeak[2] or rpeak[1] or rpeak) or (lsmapeak[2] or lsmapeak[1] or lsmapeak)) and (allpeak[1] or allpeak) and allfall and not vol_xlow and r_ok_L2Short , title='Condition revS2Long 205', message='ConditionrevS2Long205 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = tts[1] and not tts and rdip and (red[1] < 10) and allrise and not rocfall and (roc > high) and ok_long and r_ok_S2Long, title='ConditionrevS2Long 206', message='ConditionrevS2Long206 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = tts[1] and not tts and rdip and lsmadip and ((red[1] < 15) or (lsma < 15)) and allrise and not rocfall and (roc > high) and not tts and r_ok_S2Long, title='ConditionrevS2Long 207', message='ConditionrevS2Long207 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = tts[1] and not tts and rdip and (lsma[1] < 10) and allrise and not rocfall and (roc > high) and not tts and r_ok_S2Long, title='ConditionrevS2Long 208', message='ConditionrevS2Long208 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = tts[2] and (close > DTSL_Short) and ((red < 15) or (lsma < 15)) and allrise and not rocfall and (roc > high) and (red < 15) and not tts and r_ok_S2Long, title='ConditionrevS2Long 209', message='ConditionrevS2Long209 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = rocdip and kdip and gdip and ((k [1] < 10) or (green[1] < 10)) and (roc > high) and allrise and ((green > 40) or (k > 40)) and not rocfall and (roc > high) and (red < 15) and not tts and r_ok_S2Long, title='ConditionrevS2Long 210', message='ConditionrevS2Long210 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = rocdip[1] and kdip and gdip and ((k[1] < 10) or (green[1] < 10)) and (roc > high) and allrise and diffLong and ((green > 40) or (k > 40)) and not rocfall and (roc > high) and (red < 15) and not tts and r_ok_S2Long, title='ConditionrevS2Long 211', message='ConditionrevS2Long211 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = tts[1] and not tts and gdip[1] and kdip[1] and ((green[2] < 5) and (k[2] < 5)) and diffLong and allrise and not rocfall and (roc > high) and (red < 15) and not tts and r_ok_S2Long, title='ConditionrevS2Long 212', message='ConditionrevS2Long212 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = rocdip and (kdip or gdip) and rocrise and ((k[1] < 2) or (green[1] < 2)) and ((red < 15) or (lsma < 15)) and diffLong and not rocfall and (roc > high) and (red < 15) and not tts and r_ok_S2Long, title='ConditionrevS2Long 213', message='ConditionrevS2Long213 | {{ticker}}@{{close}} | ({{interval}})')

// alertcondition(condition = rocdip and kdip and gdip and ((k[1] < 10) or (green[1] < 10)) and allrise and (roc > high) and zlemafall[1] and zlemarise and not rocfall and (roc > high) and (red < 15) and not tts and r_ok_S2Long, title='ConditionrevS2Long 214', message='ConditionrevS2Long214 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = rocdip[1] and kdip and gdip and ((k[1] < 2) or (green[1] < 2)) and allrise and zlemafall[1] and zlemarise and dadiffs[1] and dadiffg and not rocfall and (roc > high) and (red < 15) and not tts and r_ok_S2Long, title='ConditionrevS2Long 215', message='ConditionrevS2Long215 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = tts[1] and not tts and rocdip and kdip and gdip and ((k[1] < 5) or (green[1] < 5)) and allrise and (scaled_atr_roc > eom) and (roc > high) and (red < 15) and r_ok_S2Long, title='ConditionrevS2Long 216', message='ConditionrevS2Long216 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = tts[1] and not tts and rocdip and kdip and gdip and ((k[1] < 2) or (green[1] < 2)) and ((red < 15) or (lsma < 15)) and zlemafall[1] and zlemarise and (scaled_atr_roc > eom) and (roc > high) and (red < 15) and not tts and r_ok_S2Long, title='ConditionrevS2Long 217', message='ConditionrevS2Long217 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = tts[1] and (rocdip or rocdip[1] or rocdip[2]) and (kdip[1] or kdip or gdip[1] or gdip) and ((k[1] < 5) or (green[1] < 5)) and ((green > 40) or (k > 40)) and allrise and (roc > high) and (red < 15) and not tts and r_ok_S2Long, title='ConditionrevS2Long 218', message='ConditionrevS2Long218 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (rdip and kdip) and (scaled_atr_roc > eom) and (roc > high) and r_ok_S2Long and not tts, title='ConditionrevS2Long 219', message='ConditionrevS2Long219 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (lsmadip and kdip) and (scaled_atr_roc > eom) and (roc > high) and (redrise or lsmarise) and r_ok_S2Long and not tts, title='ConditionrevS2Long 220', message='ConditionrevS2Long220 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (rocdip and kdip) and (scaled_atr_roc > eom) and (roc > high) and (redrise or lsmarise) and r_ok_S2Long and not tts, title='ConditionrevS2Long 221', message='ConditionrevS2Long221 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (rocdip and gdip) and (scaled_atr_roc > eom) and (roc > high) and (redrise or lsmarise) and r_ok_S2Long and not tts, title='ConditionrevS2Long 222', message='ConditionrevS2Long222 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (rdip and lsmadip) and (scaled_atr_roc > eom) and (roc > high) and (redrise or lsmarise) and r_ok_S2Long and not tts and (green > 50), title='ConditionrevS2Long 223', message='ConditionrevS2Long223 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (dump[1] or fallingKnife[1]) and (diff > open_long) and diffLong and kgda_ok, title='ConditionrevS2Long 224', message='ConditionrevS2Long224 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (dump[3] or fallingKnife[3]) and (diff[2] > 0) and (diff[1] > 0) and diffLong and (roc > high) and (green >= 50) and allrise and (redrise or lsmarise) and r_ok_S2Long, title='ConditionrevS2Long 225', message='ConditionrevS2Long225 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = cshortTSL and diffLong and r_ok_S2Long, title='ConditionrevS2Long 226', message='ConditionrevS2Long226 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = cshortTSL[1] and diffLong and r_ok_S2Long, title='ConditionrevS2Long 227', message='ConditionrevS2Long227 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ok_long and allrise and redrise and lsmarise and rocrise and (diffLong or ttl) and r_ok_S2Long , title='ConditionrevS2Long 228', message='ConditionrevS2Long228 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = tts[1] and not tts and allrise and diffLong and (redrise or lsmarise) and r_ok_S2Long, title='ConditionrevS2Long 229', message='ConditionrevS2Long229 | {{ticker}}@{{close}} | ({{interval}})')

// alertcondition(condition = r_ok_S2Long and (gdip or kdip) and ((k[1]<10) or (green[1]<10)) and (roc > high) and diffLong and PArise, title='ConditionrevS2Long 230', message='ConditionrevS2Long230 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = tts[1] and not tts and allrise and ((scaled_atr_roc > eom) or (roc > high)) and r_ok_S2Long and redrise and ((lsma > 40) or (red > 40)), title='ConditionrevS2Long 231', message='ConditionrevS2Long231 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = tts[1] and (diff[1] > 0) and (diff > 0) and diffLong and (roc > high) and (green >= 40) and allrise and (redrise or lsmarise) and r_ok_S2Long, title='ConditionrevS2Long 232', message='ConditionrevS2Long232 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = tts and (diff > .1) and alldip and ((green[1] <= 1) or (k[1] <= 1)) and allrise  and ((scaled_atr_roc > eom) or (roc > eom)) and r_ok_S2Long and (green > 40), title='ConditionrevS2Long 233', message='ConditionrevS2Long233 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = tts[1] and not tts and (diff > .1) and alldip[1] and ((green[2] <= 1) or (k[2] <= 1)) and allrise and ((scaled_atr_roc > eom) or (roc > eom)) and r_ok_S2Long, title='ConditionrevS2Long 234', message='ConditionrevS2Long234 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = alldip and ((green[1]<=5) or (k[1] <=5)) and redrise and (red >= 20) and ((scaled_atr_roc > eom) or (roc > low)) and diffLong and r_ok_S2Long, title='ConditionrevS2Long 235', message='ConditionrevS2Long235 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = alldip and ((k[1] < 20) or (green[1] < 20)) and ((red[1] >= 50) or (lsma[1] >= 50)) and diffLong and ((scaled_atr_roc > eom) or (roc > low)) and short2[2] and short2[1] and r_ok_S2Long, title='ConditionrevS2Long 236', message='ConditionrevS2Long236 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = tts[1] and not tts and (rdip[1] or rdip) and allrise and (green > 50) and (roc > high) and (diff > 0) and r_ok_S2Long, title='ConditionrevS2Long 237 ', message='ConditionrevS2Long237 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = vol_med and tts[1] and not tts and (red < 20) and alldip and ((green[1] <= 5) or (k[1] <= 5)) and allrise and diffLong, title='ConditionrevS2Long 238', message='ConditionrevS2Long238 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = tts[1] and not tts and alldip and ((green[1] < 5) or (k[1] < 5)) and rdip and (red[1] < 20) and (green > 20) and kgda_ok and r_ok_S2Long , title='ConditionrevS2Long 239', message='ConditionrevS2Long239 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = short2[1] and diffLong and redrise and (roc > eom) and allrise and (green > 50) and r_ok_S2Long, title='ConditionrevS2Long 240', message='ConditionrevS2Long240 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = short2[2] and diffLong and redrise and (roc > eom) and allrise and (green > 50) and r_ok_S2Long, title='ConditionrevS2Long 241', message='ConditionrevS2Long241 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = tts[1] and not tts and ((green > k) and ((green-k) < 2)) and allrise and diffLong and (green > 25) and (roc > eom) and r_ok_S2Long, title='ConditionrevS2Long 242', message='ConditionrevS2Long242 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = alldip and rdip and (red[1] < 25) and (green[1] < 20) and (k[1] < 20) and diffLong and allrise and (roc > high) and (green > 50) and r_ok_S2Long, title='ConditionrevS2Long 243', message='ConditionrevS2Long243 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (gdip[1] and PAdip[1] and rocdip[1] or gdip[2] and PAdip[2] and rocdip[2]) and kdip and allrise and (lsmadip or rdip) and (roc > high) and kgda_ok and r_ok_S2Long , title='ConditionrevS2Long 244', message='ConditionrevS2Long244 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (alldip or alldip[1] or alldip[2]) and ((green[1] > 5) or (green[2] > 5) or (green[3] > 5)) and (roc > eom) and diffLong and kgda_ok and r_ok_S2Long , title='ConditionrevS2Long 245', message='ConditionrevS2Long245 | {{ticker}}@{{close}} | ({{interval}})')

// alertcondition(condition = tts[1] and not tts and (roc > high) and rdip and lsmadip and (red[1] < 20) and (lsma[1] < 20) and diffLong and r_ok_S2Long, title='ConditionrevS2Long 246', message='ConditionrevS2Long246 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (tts[3] or tts[2] or tts[1]) and not tts and (alldip[2] or alldip[1] or alldip) and r_ok_S2Long and (rdip or rdip[1] or lsmadip or lsmadip[1]) and ((red[2] < 20) or (red[1] < 20) or (lsma[2] < 20) or (lsma[1] < 20)) and (green[1] > 25) and (green > 50) and allrise and (roc > high) and kgda_ok, title='Condition revS2Long 247', message='ConditionrevS2Long247 | {{ticker}}@{{close}} | ({{interval}})')

// alertcondition(condition = tts[1] and not tts and (rdip[1] or rdip or lsmadip[1] or lsmadip) and allrise and (green[1] > 25) and (green > 40) and (roc > eom) and (alldip[1] or alldip) and kgda_ok and not vol_xlow and not blumoonfall, title='Condition revS2Long 248', message='ConditionrevS2Long248 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = tts[2] and not tts[1] and not tts and (rdip[1] or rdip or lsmadip[1] or lsmadip) and allrise and (green[1] > 25) and (green > 50) and (roc > eom) and (alldip[1] or alldip) and not vol_xlow and not blumoonfall, title='Condition revS2Long 248a', message='ConditionrevS2Long248a | {{ticker}}@{{close}} | ({{interval}})')

// alertcondition(condition = (dump[3] or dump[2]) and (alldip[1] or alldip) and allrise and (green > 50) and diffLong and (roc > high) and not vol_xlow and blumoonrise and (rdip[1] or rdip) and (lsmadip[1] or lsmadip), title='Condition revS2Long 249', message='ConditionrevS2Long249 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = ((tts[3] and tts[2] and tts[1]) or (tts[4] and tts[3] and tts[2])) and not tts and (diffLong or (roc>eom)) and ((rdip[2] or rdip[1] or rdip) or (lsmadip[2] or lsmadip[1] or lsmadip)) and (alldip[1] or alldip) and allrise and not vol_xlow and r_ok_S2Long, title='Condition revS2Long 250', message='ConditionrevS2Long250 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (dump[2] or dump[1]) and diffLong and gdip and rocrise and greenrise and (diff[1] > 0.05) and (diff > 0.05) and (close > close[1]) and (green > green[1]) and zlemarise and (diff > open_long), title='ConditionDumprev 251', message='ConditionrevS2Long251 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (pump[2] or pump[1]) and diffShort and gpeak and rocfall and greenfall and (diff[1] < 0.05) and (diff < 0.05)  and (close < close[1]) and (green < green[1]) and zlemafall and (diff < open_short), title='ConditionPumprev 252', message='ConditionrevS2Long252 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = tts[1] and not tts and greenrise[1] and greenrise and ((tbs > tbs_open_long) or diffLong) and (diff > 0) and ok_long, title='ConditionLong 25', message='ConditionLong25 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (diff > 0) and dadiffg and zlemarise and ok_long and not diffFlat_long and ((tbs > tbs_open_long) or diffLong) and (diff > 0), title='ConditionLong 26', message='ConditionLong26 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (diff > 0) and krise and greenrise and rocrise and ttl and ok_long and not diffFlat_long and ((tbs > tbs_open_long) or diffLong) and (diff > 0), title='ConditionLong 27', message='ConditionLong27 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = (diff > 0) and krise and greenrise and rocrise and (roc > eom) and diffLong and ok_long and not diffFlat_long and ((tbs > tbs_open_long) or diffLong) and (diff > 0), title='ConditionLong 28', message='ConditionLong28 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = rocpeak and kpeak and diffLong and ok_long and not diffFlat_long and ((tbs > tbs_open_long) or diffLong) and (diff > 0), title='ConditionLong 29', message='ConditionLong29 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = rocpeak and gpeak and diffLong and ok_long and not diffFlat_long and ((tbs > tbs_open_long) or diffLong) and (diff > 0), title='ConditionLong 30', message='ConditionLong30 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = gpeak and kpeak and diffLong and ok_long and not diffFlat_long and ((tbs > tbs_open_long) or diffLong) and (diff > 0), title='ConditionLong 31', message='ConditionLong31 | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = tts[4] and kdip and zlemarise and diffLong and not diffFlat_long and ok_long and ((tbs > tbs_open_long) or diffLong) and (diff > 0), title='ConditionLong 33', message='ConditionLong33 double peak | {{ticker}}@{{close}} | ({{interval}})')
// alertcondition(condition = diffLong and ttl[3] and kdip and zlemarise and not diffFlat_long and ok_long and ((tbs > tbs_open_long) or diffLong) and (diff > 0), title='ConditionLong 32', message='ConditionLong32 double peak | {{ticker}}@{{close}} | ({{interval}})')


alertcondition(condition = pump, title= 'Pump Open Long4/Close Short3', message='Pump Open Long4/Close Short3 â² | {{ticker}}@{{close}} | ({{interval}})')
alertcondition(condition = dump, title= 'Dump Open Short4/Close Long3', message='Dump Open Short4/Close Long3 â¼ | {{ticker}}@{{close}} | ({{interval}})')

alertcondition(condition = shootingStar, title= 'Shooting Star Closed', message='Shooting Star Closed â²â¼ | {{ticker}}@{{close}} | ({{interval}})')
alertcondition(condition = fallingKnife, title= 'Falling Knife Closed', message= 'Falling Knife Closed â²â¼ | {{ticker}}@{{close}} | ({{interval}})')
